[{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://katsevich-lab.github.io/sceptre/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://katsevich-lab.github.io/sceptre/articles/assign-grnas.html","id":null,"dir":"Articles","previous_headings":"","what":"Initialize the CRISPRi and CRISPRko sceptre_objects","title":"Assign gRNAs","text":"use high-MOI CRISPRi low-MOI CRISPRko data running examples. call import_data() set_analysis_parameters() low-MOI CRISPRko data initialize sceptre_object called sceptre_object_lowmoi. high-MOI CRISPRi data, creating sceptre_object_highmoi. now ready carry gRNA assignment step datasets.","code":"# low-MOI CRISPRko data setup # 1. import data sceptre_object_lowmoi <- import_data(response_matrix = lowmoi_example_data$response_matrix,                                      grna_matrix = lowmoi_example_data$grna_matrix,                                      extra_covariates = lowmoi_example_data$extra_covariates,                                      grna_target_data_frame = lowmoi_example_data$grna_target_data_frame,                                      moi = \"low\")  # 2. set analysis parameters positive_control_pairs <- construct_positive_control_pairs(sceptre_object_lowmoi) discovery_pairs <- construct_trans_pairs(sceptre_object = sceptre_object_lowmoi,                                          positive_control_pairs = positive_control_pairs) sceptre_object_lowmoi <- set_analysis_parameters(sceptre_object = sceptre_object_lowmoi,                                                  discovery_pairs = discovery_pairs,                                                  positive_control_pairs = positive_control_pairs) # high-MOI CRISPRi setup # 1. import data sceptre_object_highmoi <- import_data(response_matrix = highmoi_example_data$response_matrix,                                       grna_matrix = highmoi_example_data$grna_matrix,                                       grna_target_data_frame = grna_target_data_frame_highmoi,                                       moi = \"high\",                                       extra_covariates = highmoi_example_data$extra_covariates,                                       response_names = highmoi_example_data$gene_names) # 2. set analysis parameters positive_control_pairs <- construct_positive_control_pairs(sceptre_object_highmoi) discovery_pairs <- construct_cis_pairs(sceptre_object_highmoi,                                        positive_control_pairs = positive_control_pairs,                                        distance_threshold = 5e6) sceptre_object_highmoi <- set_analysis_parameters(sceptre_object = sceptre_object_highmoi,                                                   discovery_pairs = discovery_pairs,                                                   positive_control_pairs = positive_control_pairs,                                                   side = \"left\")"},{"path":"https://katsevich-lab.github.io/sceptre/articles/assign-grnas.html","id":null,"dir":"Articles","previous_headings":"","what":"Visualize the gRNA count distributions","title":"Assign gRNAs","text":"helpful first step assigning gRNAs cells visualize gRNA UMI count distributions. discussed Get Started vignette (vignette(\"sceptre\")), can use function plot_grna_count_distributions() plot empirical UMI count distribution one gRNAs. plot_grna_count_distributions() takes several arguments: sceptre_object (required), n_grnas_to_plot (optional), grnas_to_plot (optional), threshold (optional). n_grnas_to_plot integer specifying number randomly-selected gRNAs plot. grnas_to_plot character vector specifying (name) one specific gRNAs plot. Finally, threshold integer specifying location draw dotted vertical line. call plot_grna_count_distributions() low-MOI CRISPRko data, plotting nine random gRNAs. Histograms gRNA count distributions low-MOI CRISPRko data. see gRNA count distributions exhibit generally bimodal behavior. discussed Get Started, bimodality due phenomenon background contamination: gRNA reads sometimes map cells contain corresponding gRNA. sceptre provides three methods assigning gRNAs cells, account background contamination.","code":"plot_grna_count_distributions(sceptre_object = sceptre_object_lowmoi,                               n_grnas_to_plot = 9)"},{"path":"https://katsevich-lab.github.io/sceptre/articles/assign-grnas.html","id":null,"dir":"Articles","previous_headings":"","what":"Assign gRNAs to cells","title":"Assign gRNAs","text":"assign gRNAs cells cells calling function assign_grnas(). assign_grnas() takes arguments sceptre_object (required), method (optional), print_progress (optional), parallel (optional). method gRNA assignment method set \"mixture\", \"maximum\", \"thresholding\". print_progress (default TRUE) parallel (default FALSE) logical values specifying whether print progress updates run function parallel, respectively. Note parallel computation yet configured Windows; thus, Windows users either omit parallel argument set parallel FALSE. , describe three gRNA assignment strategies detail.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/articles/assign-grnas.html","id":null,"dir":"Articles","previous_headings":"Assign gRNAs to cells","what":"Mixture method","title":"Assign gRNAs","text":"first gRNA assignment strategy \"mixture\" method, involves assigning gRNAs cells using mixture model. mixture method default method high-MOI screens optional method low-MOI screens. method works follows. First, fit latent variable Poisson GLM data, regressing gRNA UMI count vector onto (latent) gRNA indicator vector cell-specific covariate matrix. (given entry gRNA indicator vector defined “1” gRNA present corresponding cell “0” otherwise.) fit latent variable Poisson GLM using novel variant EM algorithm. fitted model yields probability cell contains gRNA; threshold probabilities assign gRNA cells. advantage GLM-based mixture modeling approach accounts cell-specific covariates, sequencing depth batch. example, cells sequenced deeply (large value grna_n_umis response_n_umis) generally exhibit higher levels ambient background contamination; sceptre controls heterogeneity across cells due sequencing depth factors. use mixture assignment method assign gRNAs cells high-MOI CRISPRi data low-MOI CRISPRko data, saving resulting outputs sceptre_object_lowmoi_mixture sceptre_object_highmoi_mixture, respectively. can pass optional, method-specific parameters assign_grnas() control precisely assignment method deployed. relevant parameters mixture method include formula_object, n_em_rep, n_nonzero_cells_cutoff, backup_threshold, probability_threshold. formula_object formula object specifies sceptre adjust cell-specific covariates latent-variable gRNA count model. default formula object constructed summing covariates log-transforming count-based covariates. sometimes helpful exclude covariates formula object improve speed gRNA assignment step. example, define reduced formula object formula_object_reduced includes grna_n_nonzero grna_n_umis, two important covariates assigning gRNAs cells. n_em_rep number times run EM algorithm using random starting estimates (default: n_em_rep = 5). Setting n_em_rep larger integer can improve accuracy gRNA assignments cost increasing compute. n_nonzero_cells_cutoff minimum number cells must exhibit nonzero expression gRNA attempt fitting mixture model gRNA count distribution (default: n_nonzero_cells_cutoff = 10). gRNA expressed fewer n_nonzero_cells_cutoff cells, gRNA instead assigned cells via thresholding method, threshold used backup_threshold (default: backup_threshold = 5). (See detailed discussion thresholding method.) Finally, cells whose estimated probability received gRNA exceeds probability_threshold called containing gRNA (default: probability_threshold = 0.8). practice probability_threshold typically impact results considerably. illustrate use method-specific parameters, call assign_grnas() assign gRNAs cells high-MOI CRISPRi data, time setting formula_object formula_object_reduced.","code":"# high-MOI CRISPRi data sceptre_object_highmoi_mixture <- assign_grnas(sceptre_object = sceptre_object_highmoi,                                                method = \"mixture\", parallel = TRUE) # low-MOI CRISPRko data sceptre_object_lowmoi_mixture <- assign_grnas(sceptre_object = sceptre_object_lowmoi,                                               method = \"mixture\", parallel = TRUE) formula_object_reduced <- formula(~log(grna_n_nonzero) + log(grna_n_umis)) sceptre_object_highmoi_mixture <- assign_grnas(sceptre_object = sceptre_object_highmoi,                                                formula_object = formula_object_reduced,                                                parallel = TRUE)"},{"path":"https://katsevich-lab.github.io/sceptre/articles/assign-grnas.html","id":null,"dir":"Articles","previous_headings":"Assign gRNAs to cells","what":"Maximum method","title":"Assign gRNAs","text":"second gRNA assignment strategy \"maximum\" method. maximum method default assignment method low-MOI screens available option high-MOI screens. maximum method assigns gRNA accounts greatest number UMIs given cell cell. apply maximum method low-MOI CRISPRko data . maximum method allows one optional argument: umi_fraction_threshold (default: umi_fraction_threshold = 0.8). Cells maximally expressed gRNA constitutes fewer umi_fraction_threshold UMIs cell flagged containing multiple gRNAs. (Cells containing multiple gRNAs removed part low-MOI quality control step, discussed later). example, maximally expressed gRNA given cell makes 0.64 (64\\(\\%\\)) UMIs cell, cell flagged containing multiple gRNAs removed quality control (assuming umi_fraction_threshold = 0.8).","code":"sceptre_object_lowmoi_maximum <- assign_grnas(sceptre_object_lowmoi, method = \"maximum\")"},{"path":"https://katsevich-lab.github.io/sceptre/articles/assign-grnas.html","id":null,"dir":"Articles","previous_headings":"Assign gRNAs to cells","what":"Thresholding method","title":"Assign gRNAs","text":"third method assigning gRNAs cells \"thresholding\" method; method available low- high-MOI settings. thresholding method assigns gRNA cell UMI count gRNA cell greater equal integer threshold (default 5). apply \"thresholding\" method CRISPRi CRISPRko datasets follows. thresholding method allows one optional argument, namely integer threshold threshold. important special case set threshold 1, causes gRNA expressed given cell assigned cell. assign gRNAs cells CRISPRi data using threshold 1 . Note setting threshold 1 causes background contamination ignored.","code":"# high-MOI CRISPRi data sceptre_object_highmoi_thresholding <- assign_grnas(sceptre_object = sceptre_object_highmoi,                                                     method = \"thresholding\") # low-MOI CRISPRko data sceptre_object_lowmoi_thresholding <- assign_grnas(sceptre_object = sceptre_object_lowmoi,                                                    method = \"thresholding\") sceptre_object_highmoi_thresholding <- assign_grnas(sceptre_object = sceptre_object_highmoi,                                                     method = \"thresholding\",                                                     threshold = 1)"},{"path":"https://katsevich-lab.github.io/sceptre/articles/assign-grnas.html","id":null,"dir":"Articles","previous_headings":"","what":"Plotting and printing the outcome of the gRNA-to-cell assignment step","title":"Assign gRNAs","text":"can call plot() sceptre_object render plot summarizing outcome gRNA--cell assignment step. plot() takes arguments sceptre_object (required) n_grnas_to_plot (optional), grnas_to_plot (optional), return_indiv_plots (optional). n_grnas_to_plot number (randomly-selected) gRNAs plot; grnas_to_plot vector names one gRNAs plot; return_indiv_plots logical value indicating whether return constituent panels plot individually (TRUE) combined single figure (FALSE; default). visualize outcome gRNA--cell assignment step low-MOI CRISPRko data based maximum assignment strategy. specifically plot gRNAs “IFNGR2g2”, “STAT1g2”, “STAT5Ag4”. (gRNAs selected arbitrarily purpose illustrating grnas_to_plot argument.) Maximum assignment method low-MOI CRISPRko data. Get Started vignette (vignette(\"sceptre\")) describes interpret plot. Briefly, top panel displays gRNA--cell assignments several individual gRNAS, bottom left panel shows number cells per gRNA. Typically, bottom right panel plots number gRNAs per cell, bottom right panel meaningful maximum assignment strategy thus omitted. informative compare output multiple gRNA assignment methods check consistency across methods. end render visualization gRNA--cell assignments dataset, time based mixture method. Mixture assignment method low-MOI CRISPRko data. Encouragingly, gRNA assignments appear highly concordant across maximum mixture methods. Suppose ultimately choose use mixture strategy assign gRNAs cells low-MOI CRISPRko dataset. update sceptre_object_lowmoi follows. can call print() sceptre_object_lowmoi print summary tracking progress analysis. field “gRNA--cell assignment information” presents information gRNA assignment step, including selected assignment method, mean number cells per gRNA, mean number gRNAs per cell.","code":"grnas_to_plot <- c(\"IFNGR2g2\", \"STAT1g2\", \"STAT5Ag4\") plot(sceptre_object_lowmoi_maximum, grnas_to_plot = grnas_to_plot) plot(sceptre_object_lowmoi_mixture, grnas_to_plot = grnas_to_plot) sceptre_object_lowmoi <- sceptre_object_lowmoi_mixture print(sceptre_object_lowmoi_mixture) #> An object of class [34msceptre_object[39m. #>  #> Attributes of the data: #>  • [34m20729[39m cells #>  • [34m299[39m responses #>  • [34mLow[39m multiplicity-of-infection  #>  • [34m101[39m targeting gRNAs (distributed across [34m26[39m targets)  #>  • [34m9[39m non-targeting gRNAs  #>  • [34m6[39m covariates (bio_rep, grna_n_nonzero, grna_n_umis, response_n_nonzero, response_n_umis, response_p_mito) #>  #> Analysis status: #>  [32m✓[39m import_data() #>  [32m✓[39m set_analysis_parameters() #>  [32m✓[39m assign_grnas() #>  [31m✗[39m run_qc() #>  [31m✗[39m run_calibration_check() #>  [31m✗[39m run_power_check() #>  [31m✗[39m run_discovery_analysis() #>  #> Analysis parameters:  #>  • Discovery pairs: data frame with [34m7765[39m pairs #>  • Positive control pairs: data frame with [34m9[39m pairs #>  • Sidedness of test: [34mboth[39m #>  • N nonzero treatment cells threshold: not specified #>  • N nonzero control cells threshold: not specified #>  • Control group: [34mnon-targeting cells[39m #>  • Resampling mechanism: [34mpermutations[39m #>  • gRNA grouping strategy: [34munion[39m #>  • Formula object: [34mlog(response_n_nonzero) + log(response_n_umis) + bio_rep[39m #>  #> gRNA-to-cell assignment information: #>  • Assignment method: [34mmixture[39m #>  • Mean N cells per gRNA: [34m205.07[39m #>  • Mean N gRNAs per cell (MOI): [34m1.09[39m"},{"path":"https://katsevich-lab.github.io/sceptre/articles/import-data.html","id":"import-data-from-an-existing-software-package","dir":"Articles","previous_headings":"","what":"Import data from an existing software package","title":"Import data","text":"sceptre links two programs upstream processing single-cell CRISPR screen data: 10X Cellranger analogous software tool developed Parse Biosciences. (refer latter program “Parse program.”) describe import data tools .","code":""},{"path":"https://katsevich-lab.github.io/sceptre/articles/import-data.html","id":"import-from-10x-cellranger","dir":"Articles","previous_headings":"Import data from an existing software package","what":"Import from 10X CellRanger","title":"Import data","text":"Get Started vignette (vignette(\"sceptre\")) describes import data 10X CellRanger. include minimal working example .","code":"directories <- paste0(system.file(\"extdata\", package = \"sceptre\"), \"/highmoi_example/gem_group_\", 1:2) data(grna_target_data_frame_highmoi) sceptre_object <- import_data_from_cellranger(directories = directories,                                               moi = \"high\",                                               grna_target_data_frame = grna_target_data_frame_highmoi)"},{"path":"https://katsevich-lab.github.io/sceptre/articles/import-data.html","id":"import-from-the-parse-program","dir":"Articles","previous_headings":"Import data from an existing software package","what":"Import from the Parse program","title":"Import data","text":"function import data Parse program coming soon.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/articles/import-data.html","id":"add-extra-covariates","dir":"Articles","previous_headings":"Import data from an existing software package","what":"Add extra covariates","title":"Import data","text":"import_data_from_cellranger() input_data_from_parse() compute covariates grna_n_nonzero, grna_n_umis, response_n_nonzero, response_n_umis, response_p_mito, batch. Users may wish supply additional covariates (e.g., cell cycle cell type) sceptre. , users can pass data frame extra_covariates containing additional covariates import_data_from_cellranger() input_data_from_parse(). , simulate additional covariate cell_type pass covariate argument data import function. additional covariate cell_type printed “covariates” field evaluate sceptre_object console.","code":"# simulate an extra covariate, namely cell type cell_type <- sample(x = paste0(\"type_\", 1:3), size = 45919, replace = TRUE) |> factor() extra_covariates <- data.frame(cell_type = cell_type)  # import data, passing the the extra covariates as an argument sceptre_object <- import_data_from_cellranger(directories = directories,                                               moi = \"high\",                                               grna_target_data_frame = grna_target_data_frame_highmoi,                                               extra_covariates = extra_covariates) sceptre_object ## An object of class sceptre_object. ##  ## Attributes of the data: ##  • 45919 cells ##  • 526 responses ##  • High multiplicity-of-infection  ##  • 70 targeting gRNAs (distributed across 35 targets)  ##  • 25 non-targeting gRNAs  ##  • 7 covariates (batch, cell_type, grna_n_nonzero, grna_n_umis, response_n_nonzero, response_n_umis, response_p_mito)"},{"path":"https://katsevich-lab.github.io/sceptre/articles/import-data.html","id":"import-data-from-a-collection-of-r-objects","dir":"Articles","previous_headings":"","what":"Import data from a collection of R objects","title":"Import data","text":"Users also can import data sceptre specified set R objects. data import strategy appropriate users employing less standard data preprocessing pipelines generate response gRNA count matrices. use high MOI-CRISPRi data working example. can obtain data R matrix data frame format follows. call function import_data() import data collection R objects. import_data() takes several arguments: response_matrix, grna_matrix, grna_target_data_frame, moi, extra_covariates, response_names. following figure summarizes main inputs function. main data objects involved single-cell CRISPR screen analysis: response matrix, gRNA matrix, data frame extra covariates (optional), gRNA target data frame. describe inputs . response_matrix matrix response UMI counts. responses rows cells columns. row names response_matrix response IDs. first ten rows columns example response_matrix follows. grna_matrix matrix gRNA UMI counts. gRNAs rows cells columns. row names grna_matrix gRNA IDs. first ten rows columns example grna_matrix follows. response_matrix grna_matrix stored one following formats: matrix, dgTMatrix, dgCMatrix, dgRMatrix. grna_target_data_frame data frame mapping gRNA target. grna_target_data_frame pass import_data() exactly one pass import_data_from_cellranger(). See vignette(\"sceptre\") information argument. moi string specifying MOI dataset, either “high” “low”. argument serves function import_data_from_cellranger(). See vignette(\"sceptre\") information. extra_covariates (optional) data frame specifying cell-specific covariates beyond sceptre can compute. import_data() computes covariates grna_n_nonzero, grna_n_umis, response_n_nonzero, response_n_umis, response_p_mito. import_data() compute batch, import_data() access batch information. Thus, batch — alongside relevant covariates, cell type — included extra_covariates data frame. response_names (optional) vector human-readable response names. response_names used determine responses () mitochondrial genes purpose computing response_p_mito covariate. pass arguments response_matrix, grna_matrix, grna_target_data_frame, moi, extra_covariates, response_names import_data(), initializes sceptre_object.","code":"data(highmoi_example_data) response_matrix <- highmoi_example_data$response_matrix # response matrix grna_matrix <- highmoi_example_data$grna_matrix # grna matrix extra_covariates <- highmoi_example_data$extra_covariates # batch information response_names <- highmoi_example_data$gene_names # response names grna_target_data_frame <- grna_target_data_frame_highmoi # gRNA target data frame response_matrix[1:10,1:10] ## 10 x 10 sparse Matrix of class \"dgTMatrix\" ##                                        ## ENSG00000069275 4 6 10 9 4 13 8 8 10 8 ## ENSG00000117222 2 1  . 1 1  . . .  . 1 ## ENSG00000117266 . .  . . .  . . .  . . ## ENSG00000117280 . .  . 1 .  . . .  . 1 ## ENSG00000133059 . .  . . .  1 . 2  . 1 ## ENSG00000133065 . .  . . .  . . 2  . 1 ## ENSG00000133069 . .  . . .  . . .  . . ## ENSG00000158711 . .  . . .  . . 1  . . ## ENSG00000158715 . .  . . .  . . .  . . ## ENSG00000162873 . .  . . .  . . .  . . grna_matrix[1:10,1:10] ## 10 x 10 sparse Matrix of class \"dgTMatrix\" ##                                   ## grna_CCGGGCG . 8 . . .  . . . . . ## grna_TGGCGGC . . . . .  . . . . . ## grna_AAGGCCG . . . . .  . . . . . ## grna_GACGCCG . . . . .  . . . . . ## grna_CACACCC . . . . . 25 . . . . ## grna_GCTCACA . . . . .  . . . . . ## grna_CTCTGAG . . . . .  . . . . . ## grna_GCGCCCG . . . . .  . . . . . ## grna_GAGCGTG . . . . .  . . . . . ## grna_GCTCTGC . . . . .  . . . . . grna_target_data_frame[c(1:4, 21:24, 80:83),] ##         grna_id      grna_target   chr     start       end ## 1  grna_CCGGGCG  ENSG00000069482 chr11  68451943  68451958 ## 2  grna_TGGCGGC  ENSG00000069482 chr11  68451958  68451974 ## 3  grna_AAGGCCG  ENSG00000100316 chr22  39715775  39715790 ## 4  grna_GACGCCG  ENSG00000100316 chr22  39715790  39715806 ## 21 grna_TCTTGAC  candidate_enh_1  chr1 205720419 205720623 ## 22 grna_TGATCGC  candidate_enh_1  chr1 205720623 205720828 ## 23 grna_ATAGGAG candidate_enh_10 chr19  19475680  19475878 ## 24 grna_GCAGGCA candidate_enh_10 chr19  19475878  19476077 ## 80 grna_TATTCGT    non-targeting  <NA>        NA        NA ## 81 grna_GACCTCC    non-targeting  <NA>        NA        NA ## 82 grna_TTTCTCT    non-targeting  <NA>        NA        NA ## 83 grna_AATGAGG    non-targeting  <NA>        NA        NA moi <- \"high\" extra_covariates[c(1:3, 30001:30003),,drop = FALSE] ##       batch ## 1        b1 ## 2        b1 ## 3        b1 ## 30001    b2 ## 30002    b2 ## 30003    b2 head(response_names) ## [1] \"NUCKS1\"  \"RBBP5\"   \"CDK18\"   \"RAB29\"   \"DSTYK\"   \"SLC41A1\" sceptre_object <- import_data(response_matrix = response_matrix,                               grna_matrix = grna_matrix,                               grna_target_data_frame = grna_target_data_frame,                               moi = moi,                               extra_covariates = extra_covariates,                               response_names = response_names)"},{"path":"https://katsevich-lab.github.io/sceptre/articles/install.html","id":"install-sceptre-v0-99-x","dir":"Articles","previous_headings":"","what":"Install sceptre v0.99.x","title":"Installation instructions for `sceptre`","text":"install latest version sceptre GitHub (currently v0.99.x, .e. beta version sceptre 1.0.0), please run following code R console:","code":"install.packages(\"devtools\") # if necessary devtools::install_github(\"katsevich-lab/sceptre\")"},{"path":"https://katsevich-lab.github.io/sceptre/articles/install.html","id":"install-sceptre-v0-3-0","dir":"Articles","previous_headings":"","what":"Install sceptre v0.3.0","title":"Installation instructions for `sceptre`","text":"install previous stable version package (v0.3.0), please run following code R console: recommend users switch sceptre v0.99.x soon can.","code":"install.packages(\"devtools\") # if necessary devtools::install_github(\"katsevich-lab/sceptre\", ref = \"v0.3.0\")"},{"path":"https://katsevich-lab.github.io/sceptre/articles/run-calibration-check.html","id":"calibration-check-methodology","dir":"Articles","previous_headings":"","what":"Calibration check methodology","title":"Run calibration check","text":"begin describing methodology underlying calibration check.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/articles/run-calibration-check.html","id":"differential-expression-paradigm","dir":"Articles","previous_headings":"Calibration check methodology","what":"Differential expression paradigm","title":"Run calibration check","text":"goal calibration check test association subsets negative control gRNAs responses. Suppose simplicity conducting singleton analysis, .e. suppose seek test association individual negative control gRNA response. “treatment group” set cells containing given non-targeting gRNA, “control group” set cells treatment group compared carry test association. control group can either complement set NT cells. Within context calibration check analysis, complement set consists cells contain given non-targeting gRNA; NT cells, hand, consist cells contain non-targeting gRNA excluding given non-targeting gRNA testing association response (see schematic .) sceptre carries test association testing differential expression response across treatment control groups, yielding p-value. Figure 1: schematic illustrating differential expression paradigm calibration check analysis. single-cell CRISPR screen experiment produces pool cells; example cells contain targeting gRNAs three different non-targeting gRNAs (labeled NT\\(_1\\), NT\\(_2\\), NT\\(_3\\)). Suppose seek test association given non-targeting gRNA (e.g., NT\\(_2\\)) response. First, divide cells treatment control groups, treatment group consists cells contain NT\\(_2\\), control group can either complement set NT cells. Within context calibration check analysis, complement set consists cells contain NT\\(_2\\); NT cells, hand, consist cells contain non-targeting gRNA excluding NT\\(_2\\). (Thus, example, NT cells consist cells contain NT\\(_1\\) NT\\(_3\\).) sceptre tests differential expression given response across treatment control groups, yielding p-value test association bewteen given non-targeting gRNA response.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/articles/run-calibration-check.html","id":"constructing-the-negative-control-pairs","dir":"Articles","previous_headings":"Calibration check methodology","what":"Constructing the negative control pairs","title":"Run calibration check","text":"calibration check involves forming set negative control target-response pairs testing pairs association ensure control false discovery rate. sceptre automatically constructs negative control pairs, way negative control pairs highly similar discovery pairs, difference negative control pairs devoid biological signal. sceptre builds negative control pairs follows. First, sceptre forms “negative control groups” randomly grouping together distinct sets negative control gRNAs. example, screen containing nine negative control gRNAs (labeled NT1- NT9), gRNAs NT2, NT5, NT7 might assigned randomly one group, gRNAs NT3, NT6, NT9 might assigned randomly another group, . (See schematic ). number negative control gRNAs per group (default) set equal average number gRNAs per discovery target. example, screen discovery target targeted three gRNAs, negative control group formed randomly putting together three negative control gRNAs. negative control gRNA groups can (often ) overlap; example, given NT gRNA (e.g., NT2) part multiple negative control groups. schematic illustrating negative control target response pairs constructed. First, negative control gRNA groups formed randomly assembling negative control gRNAs groups size one . Next, negative control gRNA groups randomly paired responses. singleton analysis (.e., analysis seek test association individual gRNAs responses), negative control gRNA placed negative control group size one. (Recall can prompt sceptre run singleton analysis setting grna_grouping_strategy \"singleton\" set_analysis_parameters()). often use term “negative control target” interchangeably “negative control gRNA group.” forming negative control targets, sceptre constructs set negative control pairs randomly pairing negative control targets responses. number negative control pairs sceptre constructs set equal number pairs discovery set (QC applied discovery pairs). Moreover, negative control pairs subjected pairwise QC discovery pairs. sense negative control pairs “matched” discovery pairs three respects: (1) number gRNAs contained within target across negative control discovery pairs; (2) negative control pairs subjected pairwise QC discovery pairs; (3) number negative control pairs equal number discovery pairs.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/articles/run-calibration-check.html","id":"analyzing-the-negative-control-pairs","dir":"Articles","previous_headings":"Calibration check methodology","what":"Analyzing the negative control pairs","title":"Run calibration check","text":"Finally, sceptre tests association negative control targets responses negative control targets paired. grna_grouping_strategy set \"singleton\", analysis proceeds described section “Differential expression paradigm.” , hand, grna_grouping_strategy set \"union\" (default), negative control gRNAs contained within given negative control target combined via union operation, combined gRNA tested association responses singleton gRNA. Consider Figure 1 (section “Differential expression paradigm”). Suppose NT1 NT2 constitute given negative control target, suppose seek test association negative control target given response. case “treatment cells” containing either NT1 NT2. Meanwhile, “complement set” control group consists cells contain NT1 NT2. Finally, “NT cells” control gorup consists cells containing NT3.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/articles/run-calibration-check.html","id":"carrying-out-the-calibration-check-and-obtaining-the-results","dir":"Articles","previous_headings":"","what":"Carrying out the calibration check and obtaining the results","title":"Run calibration check","text":"carry calibration check calling function run_calibration_check() sceptre_object. run_calibration_check() takes arguments sceptre_object (required), output_amount (optional), n_calibration_pairs (optional), calibration_group_size (optional), print_progress (optional), parallel (optional). output_amount integer (taking values 1, 2, 3; default: output_amount = 1) specifying amount output return run_calibration_check(). describe output_amount greater detail later. Next, n_calibration_pairs number negative control target-response pairs test association. default n_calibration_pairs set number discovery target-response pairs passes pairwise QC. calibration_group_size number negative control gRNAs put together construct negative control target. default calibration_group_size set median number gRNAs per discovery target. Finally, print_progress parallel control whether print updates console run computation parallel, respectively. run calibration check high-MOI CRISPRi low-MOI CRISPRko data, setting parallel TRUE otherwise falling back default arguments. can plot outcome calibration check calling plot() resulting sceptre_object. , plot outcome calibration check low-MOI CRISPRko data. Outcome calibration check low-MOI CRISPRko data. described Get Started vignette (vignette(\"sceptre\")) interpret figure. Briefly, upper left (resp., right) plot QQ plot negative control p-values untransformed (resp., transformed) scale; p-values lie predominantly along diagonal line. lower left plot histogram estimated (log-2) fold changes; histogram symmetric centered zero. Finally, lower right panel text box displaying number false discoveries made negative control pairs (applying multiple testing adjustment) mean estimated (log-2) fold change. numbers ideally close zero. (emphasize OK number false discoveries nonzero; see subsequent section.) can obtain data frame containing results calling get_result resulting sceptre_object, setting analysis \"run_calibration_check\". obtain data frame print first rows . row data frame corresponds negative control target-response pair. (6,205 rows total, corresponding 6,205 negative control target-response pairs sceptre constructed tested association.) columns response_id grna_target indicate response gRNA target constitute given pair. individual non-targeting gRNAs make negative control target listed, concatenated string via ampersand (“&”) separator. (example, negative control gRNA target “NTg4&NTg7&NTg8&NTg9” formed combining negative control gRNAs NTg4, NTg7, NTg8, NTg9.) remaining columns data frame n_nonzero_trt (.e., number nonzero treatment cells), n_nonzero_cntrl (.e., number nonzero control cells), pass_qc (.e., whether given pair passes pairwise QC), p_value (.e., p-value given pair), log_2_fold_change (.e., estimated log-2 fold change given pair), significant (.e., whether pair called significant applying multiple testing correction procedure).","code":"sceptre_object_highmoi <- run_calibration_check(sceptre_object_highmoi,                                                 parallel = TRUE) sceptre_object_lowmoi <- run_calibration_check(sceptre_object_lowmoi,                                                parallel = TRUE) plot(sceptre_object_lowmoi) calibration_result <- get_result(sceptre_object = sceptre_object_lowmoi,                                  analysis = \"run_calibration_check\") head(calibration_result) ##     response_id          grna_target n_nonzero_trt n_nonzero_cntrl pass_qc ## 1:       SLC8B1  NTg4&NTg7&NTg8&NTg9           236             162    TRUE ## 2:       UBE2L6 NTg1&NTg5&NTg7&NTg10           982             812    TRUE ## 3:       TMEM37  NTg3&NTg4&NTg5&NTg9            46              18    TRUE ## 4:       PARPBP NTg3&NTg8&NTg9&NTg10            51              61    TRUE ## 5:       MTMR10 NTg1&NTg3&NTg8&NTg10            87             250    TRUE ## 6: RP11-799D4.4  NTg2&NTg3&NTg4&NTg7            25              44    TRUE ##         p_value log_2_fold_change significant ## 1: 0.0000955005        0.23780413       FALSE ## 2: 0.0003396914        0.05625781       FALSE ## 3: 0.0004477911        0.56398692       FALSE ## 4: 0.0010338764        0.53570790       FALSE ## 5: 0.0010732514       -0.39425294       FALSE ## 6: 0.0011500039       -0.64984993       FALSE"},{"path":[]},{"path":"https://katsevich-lab.github.io/sceptre/articles/run-calibration-check.html","id":"changing-the-output_amount-argument","dir":"Articles","previous_headings":"","what":"Changing the output_amount argument","title":"Run calibration check","text":"argument output_amount run_calibration_check() controls amount information contained within output data frame. output_amount can take values 1, 2, 3 (default value 1). run calibration check high-MOI CRISPRi data, time setting output_amount 2. resulting data frame contains additional columns z_orig, stage, xi, omega, alpha. z_orig “original” z-score obtained regressing response UMI count vector onto raw (.e., non-resampled) gRNA indicator vector covariate matrix. Next, stage indicates “stage” ","code":"calibration_result_output_2 <- run_calibration_check(sceptre_object_highmoi,                                                      parallel = TRUE,                                                      output_amount = 2) |>   get_result(analysis = \"run_calibration_check\") calibration_result_output_2 |>   dplyr::select(z_orig, stage, xi, omega, alpha) |>   head() ##       z_orig stage         xi    omega      alpha ## 1: -3.404460     2 -0.6503220 1.195424  0.9119020 ## 2: -2.494207     2 -0.6621881 1.193589  0.9361685 ## 3: -2.572771     2 -0.6336386 1.129223  0.7491185 ## 4: -2.543947     2  0.3705702 1.087020 -0.5132352 ## 5: -2.411835     2 -0.4010868 1.023403  0.4533119 ## 6: -2.341085     2 -0.6168560 1.189035  0.8471043"},{"path":"https://katsevich-lab.github.io/sceptre/articles/run-qc.html","id":"plot-the-cell-specific-covariates","dir":"Articles","previous_headings":"","what":"Plot the cell-specific covariates","title":"Run quality control","text":"helpful initial step applying QC visualize distribution cell-specific covariates. end call function plot_covariates(), creates histogram covariates response_n_nonzero, response_n_umis, (applicable) response_p_mito. Cellwise QC removes cells lie extreme right tail response_p_mito distribution lie extreme left right tail response_n_nonzero response_n_umis distribution. help guide selection QC thresholds, plot_covariates() plots candidate QC thresholds vertical lines histograms. optional arguments response_n_nonzero_range, response_n_umis_range, p_mito_threshold control location candidate QC thresholds. response_n_nonzero_range (resp., response_n_umis_range) length-two vector quantiles (default: c(0.01, 0.99)) indicating location draw candidate QC thresholds response_n_nonzero (resp., response_n_umis) histogram. Next, p_mito_threshold single numeric value interval [0,1] specifying location draw candidate QC threshold response_p_mito plot. call plot_covariates() high-MOI CRISPRi sceptre_object (.e., sceptre_object_highmoi), setting p_mito_threshold 0.075. Plot covariates high-MOI CRISPRi data. Inspecting plots (tinkering response_n_nonzero_range, response_n_umis_range, p_mito_threshold necessary) helps guide selection reasonable QC thresholds. general good clip long, asymmetric tails remove outlier cells. QC thresholds appear drawn sensible locations data. also call plot_covariates() low-MOI CRISPRko data, setting p_mito_threshold 0.075. Outcome QC low-MOI CRISPRko data. low-MOI plot broadly similar high-MOI counterpart. particular, QC thresholds appear drawn sensible locations.","code":"plot_covariates(sceptre_object_highmoi, p_mito_threshold = 0.075) plot_covariates(sceptre_object_lowmoi, p_mito_threshold = 0.075)"},{"path":"https://katsevich-lab.github.io/sceptre/articles/run-qc.html","id":"qc-parameters","dir":"Articles","previous_headings":"","what":"QC parameters","title":"Run quality control","text":"apply QC sceptre_object calling function run_qc(). run_qc() takes arguments sceptre_object, response_n_umis_range, response_n_nonzero_range, p_mito_threshold, additional_cells_to_remove, n_nonzero_trt_thresh, n_nonzero_cntrl_thresh. required argument among sceptre_object; rest set reasonable defaults.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/articles/run-qc.html","id":"cellwise-qc-parameters","dir":"Articles","previous_headings":"QC parameters","what":"Cellwise QC parameters","title":"Run quality control","text":"parameters response_n_umis_range, response_n_nonzero_range, p_mito_threshold, additional_cells_to_remove control cellwise QC. response_n_umis_range (resp., response_n_nonzero_range) length-two vector quantiles (default c(0.01, 0.99)); cells whose response_n_umis (resp., response_n_nonzero) quantile falls outside range excluded. Next, p_mito_threshold number interval [0,1]; cells whose value response_p_mito falls threshold likewise excluded. (Note p_mito_threshold quantile rather absolute number). Finally, additional_cells_to_remove integer vector specifying (1-based) indices additional cells remove. Cells flagged additional_cells_to_remove removed applying cellwise QC filer.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/articles/run-qc.html","id":"pairwise-qc-parameters","dir":"Articles","previous_headings":"QC parameters","what":"Pairwise QC parameters","title":"Run quality control","text":"parameters n_nonzero_trt_thresh n_nonzero_cntrl_thresh control pairwise QC (.e., QC level target-response pair). Recall given target-response pair, divide cells treatment control groups. treatment group consists cells contain gRNA targeting given target, control group consists cells treatment cells compared. (control group can either complement set NT cells; choice governed control_group parameter.) define “number nonzero treatment cells” (resp., “number nonzero control cells”) number cells treatment group (resp., control group) contain nonzero expression response. (sometimes use shorthand n_nonzero_trt n_nonzero_cntrl refer number nonzero treatment cells control cells, respectively.) n_nonzero_trt n_nonzero_cntrl reasonable metrics pair quality, higher quality pairs exhibiting larger values n_nonzero_trt n_nonzero_cntrl. schematic illustrates definition n_nonzero_trt n_nonzero_cntrl. Definition n_nonzero_trt n_nonzero_cntrl. square represents cell, integer within square represents UMI count response corresponding cell. cells belong treatment group (blue), others belong control group (red). n_nonzero_trt (resp., n_nonzero_cntrl) number cells treatment group (resp., control group) nonzero expression response. sceptre tabulates n_nonzero_trt n_nonzero_cntrl target-response pair. Pairs n_nonzero_trt less n_nonzero_trt_thresh n_nonzero_cntrl less n_nonzero_cntrl_thresh excluded. n_nonzero_trt_thresh n_nonzero_cntrl_thresh set 7 default.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/articles/run-qc.html","id":"run-qc","dir":"Articles","previous_headings":"","what":"Run QC","title":"Run quality control","text":"call run_qc() sceptre_object_highmoi sceptre_object_lowmoi run QC high-MOI CRISPRi low-MOI CRISPRko data. cases set p_mito_threshold 0.075 otherwise fall back default parameter values. can call function plot() resulting sceptre_object render visualization outcome QC step. call plot() sceptre_object_lowmoi example. Outcome applying cellwise (top) pairwise (bottom) QC low-MOI CRISPRko data. described Get Started (vignette(\"sceptre\")) interpret figure. top panel displays percentage cells removed (vertical axis) result applying different cellwise QC filters (horizontal axis). example, 20\\(\\%\\) cells removed contain multiple gRNAs, 2\\(\\%\\) cells removed exhibit extremely high extremely values response_n_nonzero. Note “multiple gRNAs” filter general applied low-MOI data. Next, bottom panel plots set discovery target-response pairs, vertical (resp., horizontal) position given pair indicates n_nonzero_cntrl (resp., n_nonzero_trt) value. Pairs sufficiently large value n_nonzero_cntrl n_nonzero_trt (colored green) pass pairwise QC; pairs removed. Finally, call print() sceptre_object_lowmoi print summary status analysis. summary contains information cellwise pairwise QC; see first entry “Attributes data” field second two entries “Analysis parameters” field. Users may wonder sceptre implement response-wise QC (e.g., filtering lowly expressed responses). reason pairwise QC sense stronger response-wise QC. Suppose example given response exhibits zero expression across cells. Target-response pairs containing response n_nonzero_trt n_nonzero_cntrl value zero thus filtered , effect filtering response well.","code":"sceptre_object_highmoi <- run_qc(sceptre_object = sceptre_object_highmoi,                                  p_mito_threshold = 0.075) sceptre_object_lowmoi <- run_qc(sceptre_object = sceptre_object_lowmoi,                                  p_mito_threshold = 0.075) plot(sceptre_object_lowmoi) print(sceptre_object_lowmoi) ## An object of class sceptre_object. ##  ## Attributes of the data: ##  • 20729 cells (15348 after cellwise QC) ##  • 299 responses ##  • Low multiplicity-of-infection  ##  • 101 targeting gRNAs (distributed across 26 targets)  ##  • 9 non-targeting gRNAs  ##  • 6 covariates (bio_rep, grna_n_nonzero, grna_n_umis, response_n_nonzero, response_n_umis, response_p_mito) ##  ## Analysis status: ##  ✓ import_data() ##  ✓ set_analysis_parameters() ##  ✓ assign_grnas() ##  ✓ run_qc() ##  ✗ run_calibration_check() ##  ✗ run_power_check() ##  ✗ run_discovery_analysis() ##  ## Analysis parameters:  ##  • Discovery pairs: data frame with 7765 pairs (6205 after pairwise QC) ##  • Positive control pairs: data frame with 9 pairs (9 after pairwise QC) ##  • Sidedness of test: both ##  • N nonzero treatment cells threshold: 7 ##  • N nonzero control cells threshold: 7 ##  • Control group: non-targeting cells ##  • Resampling mechanism: permutations ##  • gRNA grouping strategy: union ##  • Formula object: log(response_n_nonzero) + log(response_n_umis) + bio_rep ##  ## gRNA-to-cell assignment information: ##  • Assignment method: maximum ##  • Mean N cells per gRNA: 188.45 ##  • Mean N gRNAs per cell (MOI): not computed when using \"maximum\" assignment method"},{"path":"https://katsevich-lab.github.io/sceptre/articles/sceptre.html","id":"import-data","dir":"Articles","previous_headings":"","what":"1. Import data","title":"Get started with sceptre","text":"first step import data. Data can imported sceptre 10X Cell Ranger outputs R matrices; support Parse Biosciences outputs coming soon. simplest way import data read output one calls cellranger_count() sceptre via function import_data_from_cellranger(). import_data_from_cellranger() requires three arguments: directories, grna_target_data_frame, moi. directories character vector specifying locations directories outputted one calls cellranger_count(). , set variable directories (machine-dependent) location example CRISPRi data disk. directories points two directories, store expression data matrix market format contain files barcodes.tsv.gz, features.tsv.gz, matrix.mtx.gz. grna_target_data_frame data frame mapping individual gRNA genomic element gRNA targets. grna_target_data_frame contains two required columns: grna_id grna_target. grna_id ID individual gRNA, grna_target label specifying genomic element gRNA targets. (Typically, multiple gRNAs designed target given genomic element single-cell CRISPR screen.) Non-targeting (NT) gRNAs assigned gRNA target label “non-targeting”. grna_target_data_frame optionally contains columns chr, start, end, give chromosome, start coordinate, end coordinate, respectively, genomic region gRNA targets. load examine grna_target_data_frame corresponding example data. gRNAs (e.g., grna_CCGGGCG grna_TGGCGGC) target gene transcription start sites serve positive controls; gRNAs (e.g., grna_TCTTGAC grna_TGATCGC) target candidate enhancers, others still (e.g., grna_TATTCGT grna_GACCTCC) non-targeting. gene candidate enhancer dataset targeted exactly two gRNAs. moi string specifying multiplicity--infection (MOI) data, taking values “high” “low”. high-MOI (respectively, low-MOI) dataset one experimenter aimed insert multiple gRNAs (respectively, single gRNA) cell. (given cell determined contain multiple gRNAs low-MOI screen, cell removed part quality control step, discussed .) example dataset high MOI dataset, set moi “high”. Finally, call function import_data_from_cellranger(), passing directories, grna_target_data_frame, moi arguments. import_data_from_cellranger() returns sceptre_object, object-based representation single-cell CRISPR screen data. Evaluating sceptre_object console prints helpful summary data. Several metrics displayed, including number cells, number genes (“responses”), number gRNAs present data. sceptre also automatically computes following cell-specific covariates: grna_n_nonzero (.e., number gRNAs expressed cell), grna_n_umis (.e., number gRNA UMIs sequenced cell), response_n_nonzero (.e., number responses expressed cell), response_n_umis (.e., number response UMIs sequenced cell), response_p_mito (.e., fraction transcripts mapping mitochondrial genes), batch. (Cells loaded different directories assumed come different batches.) See Chapter 1 manual details data import.","code":"directories <- paste0(   system.file(\"extdata\", package = \"sceptre\"),    \"/highmoi_example/gem_group_\", 1:2 ) directories # file paths to the example data on your computer #> [1] \"/private/var/folders/h6/pt59hmwd7rqb3jqfzwh0hlth0000gn/T/Rtmp031ihx/temp_libpath751c3e636f4a/sceptre/extdata/highmoi_example/gem_group_1\" #> [2] \"/private/var/folders/h6/pt59hmwd7rqb3jqfzwh0hlth0000gn/T/Rtmp031ihx/temp_libpath751c3e636f4a/sceptre/extdata/highmoi_example/gem_group_2\" list.files(directories[1]) #> [1] \"barcodes.tsv.gz\" \"features.tsv.gz\" \"matrix.mtx.gz\" list.files(directories[2]) #> [1] \"barcodes.tsv.gz\" \"features.tsv.gz\" \"matrix.mtx.gz\" data(grna_target_data_frame_highmoi) grna_target_data_frame_highmoi[c(1:4, 21:24, 80:83),] #>         grna_id      grna_target   chr     start       end #> 1  grna_CCGGGCG  ENSG00000069482 chr11  68451943  68451958 #> 2  grna_TGGCGGC  ENSG00000069482 chr11  68451958  68451974 #> 3  grna_AAGGCCG  ENSG00000100316 chr22  39715775  39715790 #> 4  grna_GACGCCG  ENSG00000100316 chr22  39715790  39715806 #> 21 grna_TCTTGAC  candidate_enh_1  chr1 205720419 205720623 #> 22 grna_TGATCGC  candidate_enh_1  chr1 205720623 205720828 #> 23 grna_ATAGGAG candidate_enh_10 chr19  19475680  19475878 #> 24 grna_GCAGGCA candidate_enh_10 chr19  19475878  19476077 #> 80 grna_TATTCGT    non-targeting  <NA>        NA        NA #> 81 grna_GACCTCC    non-targeting  <NA>        NA        NA #> 82 grna_TTTCTCT    non-targeting  <NA>        NA        NA #> 83 grna_AATGAGG    non-targeting  <NA>        NA        NA moi <- \"high\" sceptre_object <- import_data_from_cellranger(   directories = directories,   grna_target_data_frame = grna_target_data_frame_highmoi,   moi = moi ) sceptre_object #> An object of class sceptre_object. #>  #> Attributes of the data: #>  • 45919 cells #>  • 526 responses #>  • High multiplicity-of-infection  #>  • 70 targeting gRNAs (distributed across 35 targets)  #>  • 25 non-targeting gRNAs  #>  • 6 covariates (batch, grna_n_nonzero, grna_n_umis, response_n_nonzero, response_n_umis, response_p_mito)"},{"path":"https://katsevich-lab.github.io/sceptre/articles/sceptre.html","id":"set-analysis-parameters","dir":"Articles","previous_headings":"","what":"2. Set analysis parameters","title":"Get started with sceptre","text":"second step set analysis parameters. important analysis parameters discovery pairs, positive control pairs, sidedness, gRNA grouping strategy. Discovery pairs positive control pairs. primary goal sceptre determine whether perturbation gRNA target (enhancer) leads change expression response (gene). use term target-response pair refer given gRNA target response seek test association (upon perturbation gRNA target). discovery target-response pair target-response pair whose association status know like learn. example, experiment aim link putative enhancers genes, discovery target-response pairs might consist set putative enhancers genes close physical proximity one another. positive control (resp., negative control) target-response pair target-response pair know (resp., ) relationship target response. Positive control target-response pairs often formed coupling transcription start site gene known regulated transcription start site. Negative control target-response pairs, meanwhile, typically constructed pairing negative control gRNAs one responses. (defer detailed discussion negative control pairs later section vignette.) Discovery pairs primary scientific interest, positive control negative control pairs serve mainly technial purpose, helping us verify biological assay statistical methodology working order. sceptre offers several helper functions facilitate construction positive control discovery pairs. function construct_positive_control_pairs() takes argument sceptre_object outputs set positive control pairs formed matching gRNA targets (contained grna_target_data_frame) response IDs. Positive control pairs optional need computed. Next, functions construct_cis_pairs() construct_trans_pairs() facilitate construction cis trans discovery sets, respectively. construct_cis_pairs() takes arguments sceptre_object integer distance_threshold returns set response-target pairs located chromosome within distance_threshold bases one another. positive_control_pairs optionally can passed function, case positive control gRNA targets excluded cis pairs. (Note construct_cis_pairs() assumes responses genes rather , say, proteins chromatin-derived features.) construct_trans_pairs() constructs entire set possible target-response pairs. See Chapter 2 manual information functions. Sidedness. parameter side controls whether run left-tailed (\"left\"), right-tailed (\"right\"), two-tailed (\"\"; default) test. left-tailed (resp., right-tailed) test appropriate testing decrease (resp., increase) expression; two-tailed test, contrast, appropriate testing increase decrease expression. left-tailed test appropriate choice CRISPRi screen enhancers, set side \"left\". gRNA integration strategy. Typically, multiple gRNAs designed target given genomic element. parameter grna_integration_strategy controls gRNAs target genomic element integrated. default option, \"union\", combines gRNAs target element single “grouped gRNA;” “grouped gRNA” tested association responses element paired. grna_integration_strategy also can set “singleton,” case gRNA targeting given element tested individually responses paired element. analysis use default “union” strategy. Finally, set analysis parameters calling function set_analysis_parameters(), passing sceptre_object, discovery_pairs, positive_control_pairs, side arguments. Note sceptre_object discovery_pairs required arguments function. See Chapter 2 manual information setting analysis parameters.","code":"positive_control_pairs <- construct_positive_control_pairs(sceptre_object) head(positive_control_pairs) #>       grna_target     response_id #> 1 ENSG00000069482 ENSG00000069482 #> 2 ENSG00000100316 ENSG00000100316 #> 3 ENSG00000104131 ENSG00000104131 #> 4 ENSG00000122026 ENSG00000122026 #> 5 ENSG00000135821 ENSG00000135821 #> 6 ENSG00000147669 ENSG00000147669 discovery_pairs <- construct_cis_pairs(   sceptre_object = sceptre_object,   positive_control_pairs = positive_control_pairs,   distance_threshold = 5e6 ) discovery_pairs[c(1:4, 101:104),] #>          grna_target     response_id #> 1    candidate_enh_1 ENSG00000174529 #> 2    candidate_enh_1 ENSG00000117222 #> 3    candidate_enh_1 ENSG00000133059 #> 4    candidate_enh_1 ENSG00000133069 #> 101 candidate_enh_10 ENSG00000064490 #> 102 candidate_enh_10 ENSG00000254901 #> 103 candidate_enh_10 ENSG00000184162 #> 104 candidate_enh_10 ENSG00000105705 side <- \"left\" sceptre_object <- set_analysis_parameters(   sceptre_object = sceptre_object,   discovery_pairs = discovery_pairs,   positive_control_pairs = positive_control_pairs,   side = side ) print(sceptre_object) # output suppressed for brevity"},{"path":"https://katsevich-lab.github.io/sceptre/articles/sceptre.html","id":"sec-sceptre_assign_grnas","dir":"Articles","previous_headings":"","what":"3. Assign gRNAs to cells (optional)","title":"Get started with sceptre","text":"third step assign gRNAs cells. step can skipped, case gRNAs assigned cells automatically using default options. gRNA assignment step involves using gRNA UMI counts determine cells contain gRNAs. begin plotting UMI count distribution several randomly selected gRNAs via call function plot_grna_count_distributions(). Histograms gRNA count distributions gRNAs display fairly bimodal count distributions. Consider, example, gRNA_CCTGACA (top left corner). gRNA exhibits UMI count \\(\\leq 1\\) \\(\\geq 5\\) cells UMI count 2, 3, 4 handful cells. vast majority cells UMI count 1 likely actually contain gRNA_CCTGACA. example “background contamination,” phenomenon gRNA transcripts sometimes map cells contain corresponding gRNA. sceptre provides three methods assigning gRNAs cells (“mixture method,” “maximum method,” “thresholding method”), account background contamination. default method high-MOI data “mixture method.” gRNA counts regressed onto (unobserved) gRNA presence/absence indicator cell-specific covariates (e.g., grna_n_umis, batch) via latent variable Poisson GLM. fitted model yields probability cell contains gRNA, probabilities thresholded assign gRNA cells. default method low-MOI simpler “maximum” approach: gRNA accounts greatest number UMIs given cell assigned cell. backup option low- high-MOI “thresholding” approach: given gRNA assigned given cell UMI count gRNA cell exceeds integer threshold. carry gRNA assignment step via call function assign_grnas(). assign_grnas() takes arguments sceptre_object (required) method (optional); latter argument can set \"mixture\", \"maximum\", \"thresholding\". parallelize execution assign_grnas() setting parallel TRUE. (Windows users remove parallel = TRUE argument, parallel execution yet configured Windows.) can call plot() resulting sceptre_object render plot summarizing output gRNA--cell assignment step. gRNA--cell assignments top panel plots gRNA--cell assignments three randomly selected gRNAs. plot points represent cells; vertical axis indicates UMI count gRNA given cell, horizontal axis indicates whether cell classified “perturbed” (.e., contains gRNA) unperturbed (.e., contain gRNA). Perturbed (resp., unperturbed) cells shown left (resp., right) column. bottom left panel barplot number cells gRNA mapped. Finally, bottom right panel histogram number gRNAs contained cell. mean number gRNAs per cell — .e., MOI — displayed purple text. See Chapter 3 manual information assigning gRNAs cells.","code":"plot_grna_count_distributions(sceptre_object) sceptre_object <- assign_grnas(sceptre_object = sceptre_object, parallel = TRUE) print(sceptre_object) # output suppressed for brevity plot(sceptre_object)"},{"path":"https://katsevich-lab.github.io/sceptre/articles/sceptre.html","id":"sec-sceptre_qc","dir":"Articles","previous_headings":"","what":"4. Run quality control (optional)","title":"Get started with sceptre","text":"fourth step run quality control (QC). step likewise can skipped, case QC applied automatically using default options. sceptre implements two kinds QC: cellwise QC pairwise QC. former aims remove low-quality cells, latter aims remove low-quality target-response pairs. cellwise QC sceptre implements standard single-cell analysis. Cells response_n_nonzero (.e., number expressed responses) response_n_umis (.e., number response UMIs) extremely high extremely low removed. Likewise, cells response_p_mito (.e., fraction UMIs mapping mitochondrial genes) excessively high removed. Additionally, low-MOI, cells contain multiple gRNAs (determined RNA--cell assignment step) removed. Finally, users optionally can provide list additional cells remove. sceptre also implements QC level target-response pair. given pair define “treatment cells” contain gRNA targeting given target. Next, define “control cells” cells treatment cells compared carry differential expression test. define “number nonzero treatment cells” (n_nonzero_trt) number treatment cells nonzero expression response; similarly, define “number nonzero control cells” (n_nonzero_cntrl) number control cells nonzero expression response. sceptre filters pairs n_nonzero_trt n_nonzero_cntrl falls threshold (default 7). call function run_qc() sceptre_object carry cellwise pairwise QC. run_qc() several optional arguments control stringency various QC thresholds. example, set p_mito_threshold = 0.075, filters cells whose response_p_mito value exceeds 0.075. (optional arguments set reasonable defaults; default p_mito_threshold 0.2, instance). can visualize output QC step calling plot() updated sceptre_object. Cellwise pairwise quality control top panel depicts outcome cellwise QC. various cellwise QC filters (e.g., “N nonzero responses,” “N response UMIs,” “Percent mito”, etc.) shown horizontal axis, percentage cells removed due application given QC filter shown vertical axis. Note cell can flagged multiple QC filters; example, cell might extremely high response_n_umi value extremely high response_n_nonzero value. Thus, height “filter” bar (indicates percentage cells removed due application filter) need equal sum heights bars. bottom panel depicts outcome pairwise QC. point corresponds target-response pair; vertical axis (resp., horizontal axis) indicates n_nonzero_trt (resp., n_nonzero_cntrl) value pair. Pairs n_nonzero_trt n_nonzero_cntrl fall threshold removed (red), remaining pairs retained (green). See Chapter 4 manual information QC.","code":"sceptre_object <- run_qc(sceptre_object, p_mito_threshold = 0.075) print(sceptre_object) # output suppressed for brevity plot(sceptre_object)"},{"path":"https://katsevich-lab.github.io/sceptre/articles/sceptre.html","id":"sec-sceptre_calibration_check","dir":"Articles","previous_headings":"","what":"5. Run calibration check","title":"Get started with sceptre","text":"fifth step run calibration check. calibration check analysis verifies sceptre controls rate false discoveries dataset analysis. calibration check proceeds follows. First, negative control target-response pairs constructed (automatically) coupling subsets NT gRNAs randomly selected responses. Importantly, negative control pairs constructed way similar discovery pairs, difference negative control pairs devoid biological signal. Next, sceptre applied analyze negative control pairs. Given negative control pairs absent signal, sceptre produce approximately uniformly distributed p-values negative control pairs. Moreover, appropriate multiple testing correction, sceptre make zero () discoveries negative control pairs. Verifying calibration via calibration check increases confidence discovery set sceptre ultimately produces uncontaminated excess false positives. run calibration check calling function run_calibration_check() sceptre_object. can assess outcome calibration check calling plot() resulting sceptre_object. Calibration check results visualization consists four panels, describe . upper left panel QQ plot p-values plotted untransformed scale. p-values lie along diagonal line, indicating uniformity p-values bulk distribution. upper right panel QQ plot p-values plotted negative log-10 transformed scale. p-values lie along diagonal line (majority p-values falling within gray confidence band), indicating uniformity p-values tail distribution. lower left panel histogram estimated log-2 fold changes. histogram roughly symmetric centered around zero. Finally, bottom right panel text box displaying () number false discoveries sceptre made negative control data (ii) mean estimated log-fold change. number false discoveries small integer like zero, one, two, three, zero ideal. mean estimated log-fold change, meanwhile, numeric value close zero; number range [-0.1, 0.1] adequate. sceptre may exhibit good calibration initially, OK. See Chapter 5 manual information calibration check analysis, including concrete strategies improving calibration.","code":"sceptre_object <- run_calibration_check(sceptre_object, parallel = TRUE) print(sceptre_object) # output suppressed for brevity plot(sceptre_object)"},{"path":"https://katsevich-lab.github.io/sceptre/articles/sceptre.html","id":"sec-sceptre_run_power_check","dir":"Articles","previous_headings":"","what":"6. Run power check (optional)","title":"Get started with sceptre","text":"sixth step — optional — run power check. power check involves applying sceptre analyze positive control pairs. Given positive control pairs known contain signal, sceptre produce significant (.e., small) p-values positive control pairs. power check enables us assess sceptre’s power (.e., ability detect true associations) dataset analysis. run power check calling function run_power_check() sceptre_object. can visualize outcome power check calling plot() resulting sceptre_object. Power check results point plot corresponds target-response pair, positive control pairs left column negative control pairs right column. vertical axis indicates p-value given pair; smaller (.e., significant) p-values positioned higher along axis (p-values truncated \\(10^{-20}\\) visualization). positive control p-values small, particular, smaller negative control p-values. See Chapter 6 manual information power check.","code":"sceptre_object <- run_power_check(sceptre_object, parallel = TRUE) print(sceptre_object) # output suppressed for brevity plot(sceptre_object)"},{"path":"https://katsevich-lab.github.io/sceptre/articles/sceptre.html","id":"sec-sceptre_run_discovery_analysis","dir":"Articles","previous_headings":"","what":"7. Run discovery analysis","title":"Get started with sceptre","text":"seventh penultimate step run discovery analysis. discovery analysis entails applying sceptre analyze discovery pairs. run discovery analysis calling function run_discovery_analysis(). can visualize outcome discovery analysis calling plot() resulting sceptre_object. Discovery analysis results visualization consists four panels. upper left plot superimposes discovery p-values (blue) top negative control p-values (red) untransformed scale. upper right plot upper left plot, scale negative log-10 transformed. discovery p-values trend diagonal line, indicating presence signal discovery set. horizontal dashed line indicates multiple testing threshold; discovery pairs whose p-value falls line called significant. bottom left panel volcano plot p-values log fold changes discovery pairs. point corresponds pair; estimated log-2 fold change pair plotted horizontal axis, (negative log-10 transformed) p-value plotted vertical axis. horizontal dashed line indicates multiple testing threshold. Points dashed line (colored purple) called discoveries, points (colored blue) called insignificant. bottom right panel text box displaying number discovery pairs called significant. See Chapter 6 manual information discovery analysis.","code":"sceptre_object <- run_discovery_analysis(sceptre_object, parallel = TRUE) print(sceptre_object) # output suppressed for brevity plot(sceptre_object)"},{"path":"https://katsevich-lab.github.io/sceptre/articles/sceptre.html","id":"sec-sceptre_write_outputs_to_directory","dir":"Articles","previous_headings":"","what":"8. Write outputs to directory","title":"Get started with sceptre","text":"eighth final step write outputs analysis directory disk. call function write_outputs_to_directory(), takes arguments sceptre_object directory; directory string indicating location directory write results contained within sceptre_object. write_outputs_to_directory() writes several files specified directory: text-based summary analysis (“analysis_summary.txt”), various plots (“*.png”), calibration check, power check, discovery analysis results (“results_run_calibration_check.rds,” “results_run_power_check.rds,” “results_run_discovery_analysis.rds,” respectively). also can obtain calibration check, power check, discovery analysis results R via call function get_result(), passing arguments sceptre_object analysis, latter string indicating function whose results querying. variable result data frame, rows correspond target-response pairs, columns follows: response_id, grna_target, n_nonzero_trt, n_nonzero_cntrl, pass_qc (TRUE/FALSE value indicating whether pair passes pairwise QC), p_value, log_2_fold_change, significant (TRUE/FALSE value indicating whether pair called significant).","code":"write_outputs_to_directory(   sceptre_object = sceptre_object,    directory = \"~/sceptre_outputs\" ) list.files(\"~/sceptre_outputs\") #>  [1] \"analysis_summary.txt\"               \"plot_assign_grnas.png\"              #>  [3] \"plot_grna_count_distributions.png\"  \"plot_run_calibration_check.png\"     #>  [5] \"plot_run_discovery_analysis.png\"    \"plot_run_power_check.png\"           #>  [7] \"plot_run_qc.png\"                    \"results_run_calibration_check.rds\"  #>  [9] \"results_run_discovery_analysis.rds\" \"results_run_power_check.rds\" result <- get_result(sceptre_object, analysis = \"run_discovery_analysis\") head(result) #>        response_id      grna_target n_nonzero_trt n_nonzero_cntrl pass_qc #> 1: ENSG00000147454 candidate_enh_19           987           38763    TRUE #> 2: ENSG00000136938 candidate_enh_20           829           43056    TRUE #> 3: ENSG00000165702 candidate_enh_23           421           17129    TRUE #> 4: ENSG00000136929 candidate_enh_20           507           30997    TRUE #> 5: ENSG00000135046 candidate_enh_25           438           32903    TRUE #> 6: ENSG00000106992 candidate_enh_22           693           30172    TRUE #>         p_value log_2_fold_change significant #> 1: 4.132597e-39        -0.7299781        TRUE #> 2: 3.674875e-37        -0.3377841        TRUE #> 3: 2.743547e-31        -0.7788056        TRUE #> 4: 7.498748e-24        -0.6062542        TRUE #> 5: 1.112902e-18        -0.8483076        TRUE #> 6: 1.142874e-14        -0.3438875        TRUE"},{"path":"https://katsevich-lab.github.io/sceptre/articles/sceptre.html","id":"further-reading","dir":"Articles","previous_headings":"","what":"Further reading","title":"Get started with sceptre","text":"step pipeline dedicated chapter manual. encourage interested users read additional chapters one--one learn various options available step pipeline, starting Chapter 1 manual. Also see complete worked examples low-MOI CRISPRko high-MOI CRISPRi data via ?sceptre.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/articles/set-analysis-parameters.html","id":"positive-control-pairs","dir":"Articles","previous_headings":"","what":"Positive control pairs","title":"Set analysis parameters","text":"Positive control pairs target-response pairs know (strong reason believe) regulatory relationship target response. can use positive control pairs verify sceptre (association testing method matter) sensitive (.e., capable detecting true associations) dataset analysis. use function construct_positive_control_pairs() construct positive control pairs. construct_positive_control_pairs() takes argument sceptre_object returns data frame columns grna_target response_id, gRNA targets response IDs matching names paired. call construct_positive_control_pairs() high-MOI CRISPRi dataset low-MOI CRISPRko dataset. cases positive control set consists transcription start sites paired gene regulated transcription start sites. Positive control pairs need consist exclusively gene transcription start sites paired target genes. example, enhancer-gene links validated previously (, e.g., arrayed CRISPR screens) also can serve positive control pairs. Users manually can append additional positive control pairs positive control pair data frame via call rbind(). example, suppose know high-MOI CRISPRi data candidate_enh_1 regulates gene ENSG00000069482 candidate_enh_10 regulates gene ENSG00000135821. can add enhancer-gene links positive control pair data frame follows. supply positive_control_pairs_highmoi_updated instead positive_control_pairs_highmoi set_analysis_parameters().","code":"positive_control_pairs_highmoi <- construct_positive_control_pairs(sceptre_object_highmoi) head(positive_control_pairs_highmoi) # high MOI CRISPRi dataset #>       grna_target     response_id #> 1 ENSG00000069482 ENSG00000069482 #> 2 ENSG00000100316 ENSG00000100316 #> 3 ENSG00000104131 ENSG00000104131 #> 4 ENSG00000122026 ENSG00000122026 #> 5 ENSG00000135821 ENSG00000135821 #> 6 ENSG00000147669 ENSG00000147669 positive_control_pairs_lowmoi <- construct_positive_control_pairs(sceptre_object_lowmoi) head(positive_control_pairs_lowmoi) # low MOI CRISPRko dataset #>   grna_target response_id #> 1       CMTM6       CMTM6 #> 2      IFNGR2      IFNGR2 #> 3        JAK2        JAK2 #> 4      NFKBIA      NFKBIA #> 5       STAT1       STAT1 #> 6       STAT2       STAT2 # construct data frame of additional positive control pairs additional_positive_control_pairs <-   data.frame(grna_target = c(\"candidate_enh_1\", \"candidate_enh_10\"),              response_id = c(\"ENSG00000069482\", \"ENSG00000135821\"))  # append additional pairs to positive control data frame positive_control_pairs_highmoi_updated <- rbind(positive_control_pairs_highmoi,                                                 additional_positive_control_pairs) positive_control_pairs_highmoi_updated #>         grna_target     response_id #> 1   ENSG00000069482 ENSG00000069482 #> 2   ENSG00000100316 ENSG00000100316 #> 3   ENSG00000104131 ENSG00000104131 #> 4   ENSG00000122026 ENSG00000122026 #> 5   ENSG00000135821 ENSG00000135821 #> 6   ENSG00000147669 ENSG00000147669 #> 7   ENSG00000155380 ENSG00000155380 #> 8   ENSG00000176890 ENSG00000176890 #> 9   ENSG00000187840 ENSG00000187840 #> 10  ENSG00000196683 ENSG00000196683 #> 11  candidate_enh_1 ENSG00000069482 #> 12 candidate_enh_10 ENSG00000135821"},{"path":"https://katsevich-lab.github.io/sceptre/articles/set-analysis-parameters.html","id":"discovery-pairs","dir":"Articles","previous_headings":"","what":"Discovery pairs","title":"Set analysis parameters","text":"Discovery pairs target-response pairs whose association status know seek learn. Unlike positive control negative control pairs, serve mainly technical purpose, discovery pairs primary scientific interest. Discovery pairs must supplied set_analysis_parameters(); arguments (aside sceptre_object) optional. sceptre provides two helper functions constructing discovery pairs: construct_cis_pairs() construct_trans_pairs().","code":""},{"path":"https://katsevich-lab.github.io/sceptre/articles/set-analysis-parameters.html","id":"construct-cis-pairs","dir":"Articles","previous_headings":"Discovery pairs","what":"Construct cis pairs","title":"Set analysis parameters","text":"construct_cis_pairs() returns set target-response pairs target response located chromosome close physical proximity one another. construct_cis_pairs() assumes columns chr, start, stop present within grna_target_data_frame. construct_cis_pairs() also assumes responses genes opposed , say, proteins. construct_cis_pairs() useful pair constructor function screens aim map noncoding regulatory elements (e.g., enhancers, silencers, noncoding GWAS variants) target genes cis. construct_cis_pairs() takes several arguments: sceptre_object (required) distance_threshold (optional), positive_control_pairs (optional), ref_genome (optional). target paired set genes within distance_threshold bases target. (default value distance_threshold 500,000 bases, half megabase.) positive_control_pairs data frame optionally can passed construct_cis_pairs(), case positive control targets (.e., entries within grna_target column positive_control_pairs) excluded cis pairs. Finally, ref_genome string indicating reference genome chr, start, stop defined respect . (reference genome currently available “10X_GRCh38_2020,” GRCh38 reference genome shipped CellRanger since 2020.) use construct_cis_pairs() construct discovery pairs high-MOI CRISPRi dataset. set distance_threshold 5e6 (.e., 5 megabases) increase number pairs discovery set illustration purposes. discovery_pairs_highmoi data frame columns grna_target response_id; candidate enhancer mapped set genes close proximity candidate enhancer.","code":"discovery_pairs_highmoi <- construct_cis_pairs(sceptre_object = sceptre_object_highmoi,                                                positive_control_pairs = positive_control_pairs_highmoi,                                                distance_threshold = 5e6) discovery_pairs_highmoi[c(1, 10, 20, 30, 40, 50),] #>        grna_target     response_id #> 1  candidate_enh_1 ENSG00000174529 #> 10 candidate_enh_1 ENSG00000117280 #> 20 candidate_enh_2 ENSG00000143493 #> 30 candidate_enh_2 ENSG00000136643 #> 40 candidate_enh_3 ENSG00000142733 #> 50 candidate_enh_3 ENSG00000117748"},{"path":"https://katsevich-lab.github.io/sceptre/articles/set-analysis-parameters.html","id":"construct-trans-pairs","dir":"Articles","previous_headings":"Discovery pairs","what":"Construct trans pairs","title":"Set analysis parameters","text":"construct_trans_pairs() returns entire set possible target-response pairs. construct_trans_pairs() useful pair constructor function analyses seek conduct trans analysis, testing target response. construct_trans_pairs() takes arguments sceptre_object (required), positive_control_pairs (optional), exclude_positive_control_pairs (optional), exclude_positive_control_targets (optional). default construct_trans_pairs() returns data frame columns grna_target response_id, gRNA target mapped response ID. positive_control_pairs data frame passed exclude_positive_control_pairs set TRUE, positive control target-response pairs excluded trans pairs. Next, positive_control_pairs passed exclude_positive_control_targets set TRUE, pairs containing positive control gRNA target excluded trans pairs. (sense setting exclude_positive_control_targets TRUE stronger setting exclude_positive_control_pairs TRUE.) use construct_trans_pairs() construct discovery set low-MOI CRISPRko dataset, excluding positive control pairs. discovery set consists set genes targeted one gRNAs paired set genes. also can use construct_trans_pairs() construct trans discovery set high-MOI, enhancer-targeting CRISPRi dataset. end call construct_trans_pairs(), setting exclude_positive_control_targets TRUE exclude positive control gRNA targets trans pairs. resulting data frame, discovery_pairs_highmoi_trans, maps candidate enhancer entire set genes. users may wish run cis trans analyses data. recommend users carry sceptre pipeline twice: using cis discovery set using trans discovery set.","code":"discovery_pairs_lowmoi <- construct_trans_pairs(sceptre_object = sceptre_object_lowmoi,                                                 positive_control_pairs = positive_control_pairs_lowmoi,                                                 exclude_positive_control_pairs = TRUE) head(discovery_pairs_lowmoi) #>   grna_target response_id #> 1        ATF2       PCBP3 #> 2        BRD4       PCBP3 #> 3        CAV1       PCBP3 #> 4       CD274       PCBP3 #> 5        CD86       PCBP3 #> 6       CMTM6       PCBP3 discovery_pairs_highmoi_trans <- construct_trans_pairs(sceptre_object = sceptre_object_highmoi,                                                        positive_control_pairs = positive_control_pairs_highmoi,                                                        exclude_positive_control_targets = TRUE) head(discovery_pairs_highmoi_trans) #>        grna_target     response_id #> 1  candidate_enh_1 ENSG00000069275 #> 2 candidate_enh_10 ENSG00000069275 #> 3 candidate_enh_11 ENSG00000069275 #> 4 candidate_enh_12 ENSG00000069275 #> 5 candidate_enh_13 ENSG00000069275 #> 6 candidate_enh_14 ENSG00000069275"},{"path":"https://katsevich-lab.github.io/sceptre/articles/set-analysis-parameters.html","id":"reducing-the-multiplicity-burden","dir":"Articles","previous_headings":"Discovery pairs","what":"Reducing the multiplicity burden","title":"Set analysis parameters","text":"sceptre computes p-value target-response pair discovery set. p-values subjected multiple testing correction procedure (default, Benjamini-Hochberg method) produce discovery set controls notion aggregate type-error (default, false discovery rate). general good restrict one’s attention pairs promising scientifically interesting. Including large number uninteresting “null” pairs (.e., pairs relationship target response) discovery set causes power multiple testing correction procedure decrease, resulting fewer discoveries.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/articles/set-analysis-parameters.html","id":"side","dir":"Articles","previous_headings":"","what":"Side","title":"Set analysis parameters","text":"sceptre can run left-tailed, right-tailed, two-tailed tests association. Left-tailed tests assess decrease expression, right-tailed tests assess increase expression, two-tailed tests assess increase decrease expression. parameter side controls sidedness test can take values \"left\", \"right\", \"\". (\"\" indicates two-tailed test.) Two-tailed tests typically best choice trans analyses, direction trans relationships generally uncertain. cis analyses, hand, sidedness test chosen basis type genomic element targeted CRISPR perturbation modality. following table summarizes whether left- right-tailed test appropriate cis analysis function variables. Recommended sidedness test function target element CRISPR modality cis analyses.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/articles/set-analysis-parameters.html","id":"grna-grouping-strategy","dir":"Articles","previous_headings":"","what":"gRNA grouping strategy","title":"Set analysis parameters","text":"Multiple gRNAs typically designed target given genomic element. parameter grna_grouping_strategy controls gRNAs target genomic element combined. default gRNA grouping strategy \"union\". \"union\" constructs “grouped gRNA” combining gRNAs target given genomic element via union operation; “grouped gRNA” tested association responses element paired. illustrate grouping strategy using example. Suppose “gRNA 1” “gRNA 2” target genomic element. Suppose “gRNA 1” present cells indexed 3, 6, 9 “gRNA 2” present cells indexed 1, 4, 6, 10. “grouped gRNA” formed combining “gRNA 1” “gRNA 2” via union operation defined present cells indexed 1, 3, 4, 6, 9, 10. (See schematic .) “grouped gRNA” tested responses single gRNA. Schematic \"union\" gRNA grouping strategy. Blue (resp., white) squares indicate cells gRNA present (resp., absent). available gRNA grouping strategy \"singleton\". \"singleton\" strategy involves individually testing gRNA targeting given element responses element paired. \"singleton\" may appropriate \"union\" experiments gRNA effectiveness expected vary considerably across gRNAs. However, \"union\" default rather \"singleton\" \"union\" tends yield powerful results.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/articles/set-analysis-parameters.html","id":"control-group","dir":"Articles","previous_headings":"","what":"Control group","title":"Set analysis parameters","text":"primary goal sceptre test association given gRNA target response. control_group parameter controls set cells used carry test association. Suppose simplicity carrying singleton analysis, .e. suppose testing association individual targeting gRNA response. define “treatment group” set cells contain given targeting gRNA, define “control group” set cells treatment group compared conduct association test. two choices control group: “complement set” “non-targeting (NT) cells.” complement set consists cells contain given targeting gRNA; NT cells, contrast, consist cells contain non-targeting gRNA. (See schematic .) sceptre tests association given targeting gRNA response testing differential expression response across treatment group control group. Users can select control group use passing either \"complement\" \"nt_cells\" control_group. schematic illustrating difference “complement set” “NT cells” control groups. single-cell CRISPR screen experiment produces pool cells containing targeting non-targeting gRNAs (top). Suppose seek test association given targeting gRNA (e.g., gRNA \\(T_2\\)) given response. first divide cells two groups: treatment group (.e., cells containing gRNA \\(T_2\\)) control group. control group either can consist cells containing gRNA \\(T_2\\) (“complement set”) cells containing non-targeting gRNA (“NT cells”). sceptre tests differential expression given response across treatment control groups, yielding p-value test association given targeting gRNA given response. choice control group made basis MOI dataset type genomic element targeted. high-MOI screens cell contains multiple gRNAs. () cells contain exclusively NT gRNAs, complement set choice control group. low-MOI screens flexibility. default choice control group NT cells, seek compare effect targeting gRNA “null” gRNA rather average effects gRNAs introduced pooled screen. However, complement set reasonable choice low-MOI enhancer-targeting screens, gRNAs enhancer-targeting screens tend exert small local effects, rendering average effect gRNAs complement set similar “null” gRNA. Thus, recommend trying complement set NT cells control group low-MOI enhancer-targeting screens selecting options basis performance negative control positive control data. decision tree summarizes control group recommend selecting function MOI genomic element targeted. decision tree summarizing control group select function MOI data genomic element targeted. option high-MOI complement set. low-MOI NT cells default option; however, recommend trying complement set NT cells low-MOI enhancer-targeting screens.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/articles/set-analysis-parameters.html","id":"formula","dir":"Articles","previous_headings":"","what":"Formula","title":"Set analysis parameters","text":"parameter formula_object specifies sceptre adjust cell-specific covariates. formula_object optional; provided, set_analysis_parameters() constructs default formula_object. default formula_object formed summing covariates log-transforming count-based covariates. example, high-MOI CRISPRi data contain cell-specific covariates response_n_nonzero, response_n_umis, grna_n_nonzero, grna_n_umis, response_p_mito, batch. first four covariates count-based. Thus, default formula object dataset follows: Similarly, low-MOI CRISPRko data contain covariates response_n_nonzero, response_n_umis, grna_n_nonzero, grna_n_umis, response_p_mito, bio_rep. default formula object CRISPRko dataset follows: (covariates grna_n_nonzero grna_n_umis default included formula object, grna_n_nonzero grna_n_umis typically contain substantial information low MOI quality control.) Users can specify custom formula passing formula object argument formula_object set_analysis_parameters(). User-specified formulas defined terms cell-specific covariates, can viewed evaluating sceptre_object console.","code":"formula(~ log(response_n_nonzero) + log(response_n_umis) +           log(grna_n_nonzero) + log(grna_n_umis) + response_p_mito + batch) formula(~ log(response_n_nonzero) + log(response_n_umis) +           response_p_mito + batch)"},{"path":"https://katsevich-lab.github.io/sceptre/articles/set-analysis-parameters.html","id":"resampling-mechanism","dir":"Articles","previous_headings":"","what":"Resampling mechanism","title":"Set analysis parameters","text":"parameter resampling_mechanism controls inferential procedure sceptre uses compute p-value target-response pair. Suppose simplicity carrying singleton gRNA analysis. three pieces information relevant testing association given gRNA response: (1) vector UMI counts response; (2) “gRNA indicator vector,” given entry vector set “1” corresponding cell part treatment group (.e., contains gRNA) “0” part control group; (3) matrix cell-specific covariates. First, sceptre regresses response vector onto gRNA indicator vector covariate matrix via negative binomial (NB) GLM. sceptre computes z-score \\(z_\\textrm{obs}\\) corresponding test null hypothesis coefficient corresponding gRNA indicator vector fitted GLM zero. Next, sceptre resamples gRNA indicator vector B times, B large integer (e.g., B = 5000). (discuss exactly gRNA indicator vector resampled .) Finally, resampled gRNA indicator vectors, sceptre recomputes z-score, producing B “null” z-scores \\(\\tilde{z_1}, \\dots, \\tilde{z_B}\\). observed z-score \\(z_\\textrm{obs}\\) compared null z-scores \\(\\tilde{z_1}, \\dots, \\tilde{z_B}\\) compute p-value.  sceptre provides two procedures resampling gRNA indicator vector: permutations conditional resampling (also known conditional randomization test). permutation procedure involves randomly permuting gRNA indicator vector B times. conditional resampling procedure slightly complex. Briefly, gRNA indicator vector regressed onto covariate matrix via logistic regression, yielding estimate probability cell contains gRNA function covariates. B synthetic gRNA indicator vectors sampled according estimated probabilities. resampling mechanism can specified passing either permutations crt (conditional resampling) argument resampling_mechanism set_analysis_parameters(). Permutations conditional resampling offer distinct advantages disadvantages, although differences can subtle. permutation approach faster slightly better handling sparsity, conditional resampling approach slightly better handling confounding due cell-specific covariates (see table ). practice two approaches often produce similar results; recommend users try , provided bandwidth compute . permutation (resp., conditional resampling) procedure default option low-MOI (resp., high-MOI). (Note options available MOI settings.) Faster Better handling sparsity Worse handling confounding Better handling confounding Slower Worse handling sparsity Resampling forms foundation statistical inference within sceptre framework. fact, “sceptre” loose acronym “single cell perturbation analysis via resampling.” resampling machinery sceptre reasonably fast due several algorithmic advances, including technique resampling score statistics novel sparsity-exploiting algorithm computing GLM score tests.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/articles/set-analysis-parameters.html","id":"fit-parametric-curve","dir":"Articles","previous_headings":"","what":"Fit parametric curve","title":"Set analysis parameters","text":"described , given gRNA-response pair, sceptre computes “observed” z-score \\(z_\\textrm{obs}\\) set “null” z-scores \\(\\tilde{z_1}, \\dots, \\tilde{z_B}\\) (regardless whether resampling_mechanism set permutations crt). default, sceptre fits parametric density (specifically, skew-normal density) distribution null z-scores computes p-value evaluating tail probability fitted density observed z-score \\(z_\\textrm{obs}\\) (see figure ). parametric density functionality can deactivated setting fit_parametric_curve FALSE set_analysis_parameters(), case p-value computed directly comparing observed z-score null z-scores.  users need worry fit_parametric_curve argument. sceptre provides fit_parametric_curve option facilitate diagnosis miscalibrated results negative control data.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/articles/set-analysis-parameters.html","id":"multiple-testing-method-and-multiple-testing-alpha","dir":"Articles","previous_headings":"","what":"Multiple testing method and multiple testing \\(\\alpha\\)","title":"Set analysis parameters","text":"sceptre deployed analyze discovery pairs negative control pairs, resulting p-values subjected multiplicity adjustment. adjusted p-values thresholded call pair “significant” “significant.” parameter multiple_testing_method controls multiple testing method used adjust p-values. default option Benjamini-Hochberg (\"BH\"); available methods can viewed via call p.adjust.methods. parameter multiple_testing_alpha (default value 0.1) controls level multiple testing procedure. multiple_testing_method set method controls false discovery rate (e.g., \"BH\" \"\"), multiple_testing_alpha nominal false discovery rate. , hand, multiple_testing_method set method controls family-wise error rate (e.g., \"bonferroni\" \"holm\"), multiple_testing_alpha nominal family-wise error rate.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/articles/set-analysis-parameters.html","id":"setting-the-analysis-parameters","dir":"Articles","previous_headings":"","what":"Setting the analysis parameters","title":"Set analysis parameters","text":"set analysis parameters calling set_analysis_parameters() sceptre_objects, passing discovery_pairs positive_control_pairs (, high-MOI CRISPRi data, side). allow arguments take default values. can call print() resulting sceptre_object, prints console summary tracking status analysis. Notice “Analysis parameters” field output contains information analysis parameters selected (set default).","code":"# high-MOI CRISPRi data sceptre_object_highmoi <- set_analysis_parameters(sceptre_object = sceptre_object_highmoi,                                                    discovery_pairs = discovery_pairs_highmoi,                                                    positive_control_pairs = positive_control_pairs_highmoi,                                                   side = \"left\")  # low-MOI CRISPRko data sceptre_object_lowmoi <- set_analysis_parameters(sceptre_object = sceptre_object_lowmoi,                                                  discovery_pairs = discovery_pairs_lowmoi,                                                  positive_control_pairs = positive_control_pairs_lowmoi) print(sceptre_object_highmoi) #> An object of class sceptre_object. #>  #> Attributes of the data: #>  • 45919 cells #>  • 526 responses #>  • High multiplicity-of-infection  #>  • 70 targeting gRNAs (distributed across 35 targets)  #>  • 25 non-targeting gRNAs  #>  • 6 covariates (batch, grna_n_nonzero, grna_n_umis, response_n_nonzero, response_n_umis, response_p_mito) #>  #> Analysis status: #>  ✓ import_data() #>  ✓ set_analysis_parameters() #>  ✗ assign_grnas() #>  ✗ run_qc() #>  ✗ run_calibration_check() #>  ✗ run_power_check() #>  ✗ run_discovery_analysis() #>  #> Analysis parameters:  #>  • Discovery pairs: data frame with 610 pairs #>  • Positive control pairs: data frame with 10 pairs #>  • Sidedness of test: left #>  • N nonzero treatment cells threshold: not specified #>  • N nonzero control cells threshold: not specified #>  • Resampling mechanism: conditional resampling #>  • gRNA grouping strategy: union #>  • Formula object: log(response_n_nonzero) + log(response_n_umis) + log(grna_n_nonzero) + log(grna_n_umis) + batch"},{"path":"https://katsevich-lab.github.io/sceptre/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Barry. Author, maintainer. Joseph Deutsch. Contributor. Eugene Katsevich. Author, thesis advisor.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Barry, T., Wang, X., Morris, J. ., Roeder, K., & Katsevich, E. (2021). SCEPTRE improves calibration sensitivity single-cell CRISPR screen analysis. Genome biology, 22(1), 1-19. Barry, T., Roeder, K., & Katsevich, E. (2022). Exponential family measurement error models single-cell CRISPR screens. Barry, T., Mason, K., Roeder, K., & Katsevich, E. (2023). Robust differential expression analysis single-cell CRISPR screens.","code":"@Article{,   author = {Timothy Barry and Xuran Wang and John A Morris and Kathryn Roeder and Eugene Katsevich},   title = {SCEPTRE improves calibration and sensitivity in single-cell CRISPR screen analysis},   journal = {Genome Biology},   year = {2021},   url = {https://genomebiology.biomedcentral.com/articles/10.1186/s13059-021-02545-2}, } @Article{,   author = {Timothy Barry and Kathryn Roeder and Eugene Katsevich},   title = {Exponential family measurement error models for single-cell CRISPR screens},   journal = {Preprint},   year = {2022}, } @Article{,   author = {Timothy Barry and Kaishu Mason and Kathryn Roeder and Eugene Katsevich},   title = {Robust differential expression analysis for single-cell CRISPR screens},   journal = {Preprint},   year = {2023}, }"},{"path":"https://katsevich-lab.github.io/sceptre/index.html","id":"sceptre","dir":"","previous_headings":"","what":"sceptre","title":"Analysis of Single-Cell CRISPR Screen Data","text":"R package single-cell CRISPR screen data analysis, emphasizing statistical rigor, computational efficiency, ease use.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/index.html","id":"release-of-sceptre-v091","dir":"","previous_headings":"","what":"Release of sceptre v0.9.1","title":"Analysis of Single-Cell CRISPR Screen Data","text":"excited announce release sceptre v0.9.1, substantial update package. milestone includes following developments: reimagined user experience based modular, object-oriented workflow. improvements speed memory efficiency. unified interface low- high-MOI analyses. suite plotting functions facilitating visualization step pipeline. Expanded support gRNA assignment quality control. Interoperability output 10X Cell Ranger Parse Biosciences CRISPR Detect. e-book guiding users entire process analyzing data using sceptre. sceptre v0.9.1 facilitates entire analysis pipeline single-cell CRISPR screens, starting UMI count data obtained tools like 10X Cell Ranger.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/index.html","id":"featured-publications","dir":"","previous_headings":"","what":"Featured publications","title":"Analysis of Single-Cell CRISPR Screen Data","text":"Morris et al., 2023. “Discovery target genes pathways…”. Science. Barry et al., 2021. “SCEPTRE improves calibration sensitivity…”. Genome Biology.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/index.html","id":"bug-reports-feature-requests-and-software-questions","dir":"","previous_headings":"","what":"Bug reports, feature requests, and software questions","title":"Analysis of Single-Cell CRISPR Screen Data","text":"bug reports, please open GitHub issue. feature requests, please start discussion feature requests. questions sceptre functionality, documentation, apply data, please start discussion Q&.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/assign_grnas.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign gRNAs to cells — assign_grnas","title":"Assign gRNAs to cells — assign_grnas","text":"assign_grnas() performs gRNA--cell assignments. See Chapter 3 manual detailed information function.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/assign_grnas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign gRNAs to cells — assign_grnas","text":"","code":"assign_grnas(   sceptre_object,   method = \"default\",   print_progress = TRUE,   parallel = FALSE,   ... )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/assign_grnas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign gRNAs to cells — assign_grnas","text":"sceptre_object sceptre_object method (optional) string indicating method use assign gRNAs cells, one \"mixture\", \"thresholding\", \"maximum\" print_progress (optional; default TRUE) logical indicating whether print progress updates parallel (optional; default FALSE) logical indicating whether run function parallel ... optional method-specific additional arguments","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/assign_grnas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign gRNAs to cells — assign_grnas","text":"updated sceptre_object gRNA assignments carried ","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/assign_grnas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign gRNAs to cells — assign_grnas","text":"","code":"# see example via ?sceptre"},{"path":"https://katsevich-lab.github.io/sceptre/reference/combine_perturbations.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine perturbations — combine_perturbations","title":"Combine perturbations — combine_perturbations","text":"Combines perturbations collapsing gRNAs within group single \"combined\" gRNA.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/combine_perturbations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine perturbations — combine_perturbations","text":"","code":"combine_perturbations(perturbation_matrix, gRNA_groups_table)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/combine_perturbations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine perturbations — combine_perturbations","text":"perturbation_matrix perturbation matrix (.e., binary matrix gRNA--cell assignments) stored sparse matrix (implemented Matrix package) dense matrix (implemented base R); row names gRNA IDs. gRNA_groups_table data frame columns gRNA_id gRNA_group, mapping gRNA gRNA group","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/combine_perturbations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine perturbations — combine_perturbations","text":"\"combined\" perturbation matrix, gRNAs within gRNA group collapsed single row","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/combine_perturbations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine perturbations — combine_perturbations","text":"function combines binary (.e., 0/1) perturbation vectors via \"max\" operation. words, x1, x2, ..., xp binary perturbation vectors, \"combined\" perturbation vector v v = pmax(x1, x2, ..., xp), pmax element-wise maximum function.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/combine_perturbations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine perturbations — combine_perturbations","text":"","code":"library(Matrix) data(\"gRNA_matrix_highmoi\") data(\"gRNA_groups_table_highmoi\") gRNA_matrix <- gRNA_matrix_highmoi gRNA_groups_table <- gRNA_groups_table_highmoi perturbation_matrix <- threshold_gRNA_matrix(gRNA_matrix) combined_perturbation_matrix <- combine_perturbations(perturbation_matrix, gRNA_groups_table)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/compare_calibration_and_discovery_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare calibration and discovery results — compare_calibration_and_discovery_results","title":"Compare calibration and discovery results — compare_calibration_and_discovery_results","text":"compare_calibration_and_discovery_results() function compares two sets p-values: negative control p-values (.e., obtained calibration check) discovery p-values (.e., obtained discovery analysis). two sets p-values plotted Q-Q plot, negative control p-values colored red discovery p-values colored blue. negative control p-values lie along diagonal line fall mostly within gray confidence band, indicating control false discovery rate. contrast, discovery p-values lie diagonal line, indicating presence signal discovery set.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/compare_calibration_and_discovery_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare calibration and discovery results — compare_calibration_and_discovery_results","text":"","code":"compare_calibration_and_discovery_results(   calibration_result,   discovery_result,   alpha = 0.1,   multiple_testing_correction = \"BH\" )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/compare_calibration_and_discovery_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare calibration and discovery results — compare_calibration_and_discovery_results","text":"calibration_result (required) output call run_sceptre_lowmoi (run_sceptre_highmoi_experimental) calibration_check set TRUE discovery_result (required) output call run_sceptre_lowmoi (run_sceptre_highmoi_experimental) calibration_check set FALSE alpha (optional; default 0.1) nominal type-error control level multiple_testing_correction (optional; default \"BH\") multiple testing correction method (one \"BH\", \"bonferroni\", \"\", \"holm\")","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/compare_calibration_and_discovery_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare calibration and discovery results — compare_calibration_and_discovery_results","text":"ggplot2 object containing Q-Q plot.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/compare_calibration_and_discovery_results.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare calibration and discovery results — compare_calibration_and_discovery_results","text":"horizontal dashed line indicates multiple testing threshold. Blue points horizontal dashed line called discoveries.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/compare_calibration_and_discovery_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare calibration and discovery results — compare_calibration_and_discovery_results","text":"","code":"# See the example in the run_sceptre_lowmoi help file. ?run_sceptre_lowmoi"},{"path":"https://katsevich-lab.github.io/sceptre/reference/compute_cell_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute cell covariates — compute_cell_covariates","title":"Compute cell covariates — compute_cell_covariates","text":"compute_cell_covariates() function takes input feature--cell matrix computes cell covariates matrix.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/compute_cell_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute cell covariates — compute_cell_covariates","text":"","code":"compute_cell_covariates(matrix_in)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/compute_cell_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute cell covariates — compute_cell_covariates","text":"matrix_in matrix features (e.g., genes, gRNAs, proteins) rows cells columns. matrix can standard (dense) matrix sparse matrix class dgCMatrix, dgRMatrix, dgTMatrix. Row names optional.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/compute_cell_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute cell covariates — compute_cell_covariates","text":"data frame containing following cell covariates. n_nonzero: number features expressed cell n_umi: total number UMIs sequenced cell p_mito: fraction UMIs sequenced cell maps mitochondrial genes","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/compute_cell_covariates.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute cell covariates — compute_cell_covariates","text":"variable p_mito computed feature names provided feature names begin \"MT-\"; features assumed mitochondrial genes.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/compute_cell_covariates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute cell covariates — compute_cell_covariates","text":"","code":"data(response_matrix_lowmoi) cell_covariates <- compute_cell_covariates(response_matrix_lowmoi)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/construct_cis_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct cis pairs — construct_cis_pairs","title":"Construct cis pairs — construct_cis_pairs","text":"construct_cis_pairs() helper function facilitate construction cis pairs. See Section 2.2.2 manual detailed information function.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/construct_cis_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct cis pairs — construct_cis_pairs","text":"","code":"construct_cis_pairs(   sceptre_object,   positive_control_pairs = data.frame(),   distance_threshold = 500000L,   response_position_data_frame = gene_position_data_frame_grch38 )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/construct_cis_pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct cis pairs — construct_cis_pairs","text":"sceptre_object sceptre_object positive_control_pairs (optional) data frame columns grna_target response_id containing positive control pairs; supplied, positive control targets excluded cis pairs. distance_threshold (optional) target-response pairs located within distance_threshold bases one another chromosome included cis discovery set. response_position_data_frame (optional) data frame columns response_id, chr, position giving genomic coordinate response; default response_position_data_frame set data frame containing genomic coordinate gene human genome relative reference genome GRCh38.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/construct_cis_pairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct cis pairs — construct_cis_pairs","text":"data frame columns grna_target response_id containing cis discovery set","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/construct_positive_control_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct positive control pairs — construct_positive_control_pairs","title":"Construct positive control pairs — construct_positive_control_pairs","text":"construct_positive_control_pairs() helper function facilitate construction positive control pairs. See Section 2.2 manual detailed information function.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/construct_positive_control_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct positive control pairs — construct_positive_control_pairs","text":"","code":"construct_positive_control_pairs(sceptre_object)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/construct_positive_control_pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct positive control pairs — construct_positive_control_pairs","text":"sceptre_object sceptre_object","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/construct_positive_control_pairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct positive control pairs — construct_positive_control_pairs","text":"data frame columns grna_target response_id containing positive control pairs","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/construct_trans_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct trans pairs — construct_trans_pairs","title":"Construct trans pairs — construct_trans_pairs","text":"construct_trans_pairs() helper function facilitate construction set trans pairs. See Section 2.2.2 manual detailed information function.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/construct_trans_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct trans pairs — construct_trans_pairs","text":"","code":"construct_trans_pairs(   sceptre_object,   positive_control_pairs = data.frame(),   pairs_to_exclude = \"none\" )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/construct_trans_pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct trans pairs — construct_trans_pairs","text":"sceptre_object sceptre_object positive_control_pairs (optional) set positive control pairs pairs_to_exclude (optional; default \"none\") string specifying pairs exclude trans pairs, one \"none\", \"pc_pairs\", \"pairs_containing_pc_targets\"","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/construct_trans_pairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct trans pairs — construct_trans_pairs","text":"data frame columns grna_target response_id containing trans discovery set","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/construct_trans_pairs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct trans pairs — construct_trans_pairs","text":"Typically, screens genes (resp., noncoding regulatory elements), set pairs_to_exclude \"pc_pairs\" (resp., \"pairs_containing_pc_targets\").","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/covariate_data_frame_highmoi_experimental.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariate matrix — covariate_data_frame_highmoi_experimental","title":"Covariate matrix — covariate_data_frame_highmoi_experimental","text":"matrix cell-specific technical factors: grna_n_umis (numeric) total number gRNA UMIs sequenced cell gene_n_umis (numeric) total number gene UMIs sequenced cell p_mito (numeric) fraction sequenced gene transcripts map mitochondrial genes batch (factor) sequencing batch (batch_1, batch_2)","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/covariate_data_frame_highmoi_experimental.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariate matrix — covariate_data_frame_highmoi_experimental","text":"","code":"data(covariate_data_frame_highmoi_experimental)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/covariate_data_frame_highmoi_experimental.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Covariate matrix — covariate_data_frame_highmoi_experimental","text":"object class data.frame 40002 rows 6 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/covariate_data_frame_highmoi_experimental.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"Covariate matrix — covariate_data_frame_highmoi_experimental","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data. object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/covariate_data_frame_lowmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariate data frame — covariate_data_frame_lowmoi","title":"Covariate data frame — covariate_data_frame_lowmoi","text":"data frame containing cell-specific technical factors: response_n_umis (numeric) total number gene transcripts sequenced cell response_n_nonzero (numeric) total number genes expressed cell bio_rep (factor) biological replicate cell sequenced (rep_1, rep_2, rep_3) p_mito (numeric) fraction transcripts mapping mitochondrial genes","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/covariate_data_frame_lowmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariate data frame — covariate_data_frame_lowmoi","text":"","code":"data(covariate_data_frame_lowmoi)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/covariate_data_frame_lowmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Covariate data frame — covariate_data_frame_lowmoi","text":"object class data.frame 20729 rows 4 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/covariate_data_frame_lowmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"Covariate data frame — covariate_data_frame_lowmoi","text":"example low MOI data sceptre package taken paper \"Characterizing molecular regulation inhibitory immune checkpoints multimodal single-cell screens\" Papalexi et al., 2021. authors used CRISPRko target 26 genes 20,729 THP-1 cells measured effects perturbations via single-cell sequencing. authors designed three four gRNAs target gene, well library nine non-targeting gRNAs. example data include 290 (2\\","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/covariate_matrix_highmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariate matrix — covariate_matrix_highmoi","title":"Covariate matrix — covariate_matrix_highmoi","text":"matrix cell-specific technical factors: lg_gRNA_lib_size (numeric) log-transformed gRNA library size lg_gene_lib_size (numeric) log-transformed gene library size p_mito (numeric) fraction sequenced gene transcripts map mitochondrial genes batch (factor) sequencing batch (batch_1, batch_2)","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/covariate_matrix_highmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariate matrix — covariate_matrix_highmoi","text":"","code":"data(covariate_matrix_highmoi)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/covariate_matrix_highmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Covariate matrix — covariate_matrix_highmoi","text":"object class data.frame 40000 rows 4 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/covariate_matrix_highmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"Covariate matrix — covariate_matrix_highmoi","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data. object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/discovery_pairs_highmoi_experimental.html","id":null,"dir":"Reference","previous_headings":"","what":"Discovery gene-gRNA group pairs — discovery_pairs_highmoi_experimental","title":"Discovery gene-gRNA group pairs — discovery_pairs_highmoi_experimental","text":"discovery response-gRNA group pairs seek test association, columns response_id (required), grna_group (required), type (optional).","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/discovery_pairs_highmoi_experimental.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discovery gene-gRNA group pairs — discovery_pairs_highmoi_experimental","text":"","code":"data(discovery_pairs_highmoi_experimental)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/discovery_pairs_highmoi_experimental.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Discovery gene-gRNA group pairs — discovery_pairs_highmoi_experimental","text":"object class tbl_df (inherits tbl, data.frame) 358 rows 3 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/discovery_pairs_highmoi_experimental.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"Discovery gene-gRNA group pairs — discovery_pairs_highmoi_experimental","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data. object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/extra_covariates_highmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariate matrix — extra_covariates_highmoi","title":"Covariate matrix — extra_covariates_highmoi","text":"matrix cell-specific technical factors: batch (factor) sequencing batch (batch_1, batch_2)","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/extra_covariates_highmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariate matrix — extra_covariates_highmoi","text":"","code":"data(extra_covariates_highmoi)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/extra_covariates_highmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Covariate matrix — extra_covariates_highmoi","text":"object class data.frame 45919 rows 1 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/extra_covariates_highmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"Covariate matrix — extra_covariates_highmoi","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/extra_covariates_lowmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Extra covariates — extra_covariates_lowmoi","title":"Extra covariates — extra_covariates_lowmoi","text":"data frame containing cell-specific technical factors beyond sceptre can compute: bio_rep (factor) biological replicate cell sequenced (rep_1, rep_2, rep_3)","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/extra_covariates_lowmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extra covariates — extra_covariates_lowmoi","text":"","code":"data(extra_covariates_lowmoi)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/extra_covariates_lowmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Extra covariates — extra_covariates_lowmoi","text":"object class data.frame 20729 rows 1 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/extra_covariates_lowmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"Extra covariates — extra_covariates_lowmoi","text":"example low MOI data sceptre package taken paper \"Characterizing molecular regulation inhibitory immune checkpoints multimodal single-cell screens\" Papalexi et al., 2021. authors used CRISPRko target 26 genes 20,729 THP-1 cells measured effects perturbations via single-cell sequencing. authors designed three four gRNAs target gene, well library nine non-targeting gRNAs. example data include 290 (2\\","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/gRNA_groups_table_highmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"gRNA groups table — gRNA_groups_table_highmoi","title":"gRNA groups table — gRNA_groups_table_highmoi","text":"data frame maps gRNA ID gRNA group gRNA type. columns gRNA_id (required), gRNA_group (required), gRNA_type (optional).","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/gRNA_groups_table_highmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gRNA groups table — gRNA_groups_table_highmoi","text":"","code":"data(gRNA_groups_table_highmoi)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/gRNA_groups_table_highmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gRNA groups table — gRNA_groups_table_highmoi","text":"object class tbl_df (inherits tbl, data.frame) 50 rows 3 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/gRNA_groups_table_highmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"gRNA groups table — gRNA_groups_table_highmoi","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data. object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/gRNA_matrix_highmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"gRNA expression matrix — grna_matrix_highmoi","title":"gRNA expression matrix — grna_matrix_highmoi","text":"gRNA--cell expression matrix.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/gRNA_matrix_highmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gRNA expression matrix — grna_matrix_highmoi","text":"","code":"data(grna_matrix_highmoi)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/gRNA_matrix_highmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gRNA expression matrix — grna_matrix_highmoi","text":"object class dgTMatrix 95 rows 45919 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/gRNA_matrix_highmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"gRNA expression matrix — grna_matrix_highmoi","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/gene_gRNA_group_pairs_highmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene-gRNA group pairs — gene_gRNA_group_pairs_highmoi","title":"Gene-gRNA group pairs — gene_gRNA_group_pairs_highmoi","text":"pairs genes gRNA groups seek test association. Columns gene_id (required), gRNA_group (required), pair_type (optional).","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/gene_gRNA_group_pairs_highmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene-gRNA group pairs — gene_gRNA_group_pairs_highmoi","text":"","code":"data(gene_gRNA_group_pairs_highmoi)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/gene_gRNA_group_pairs_highmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene-gRNA group pairs — gene_gRNA_group_pairs_highmoi","text":"object class tbl_df (inherits tbl, data.frame) 120 rows 3 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/gene_gRNA_group_pairs_highmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"Gene-gRNA group pairs — gene_gRNA_group_pairs_highmoi","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data. object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/gene_matrix_highmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene expression matrix — gene_matrix_highmoi","title":"Gene expression matrix — gene_matrix_highmoi","text":"gene--cell expression matrix.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/gene_matrix_highmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene expression matrix — gene_matrix_highmoi","text":"","code":"data(gene_matrix_highmoi)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/gene_matrix_highmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene expression matrix — gene_matrix_highmoi","text":"object class dgTMatrix 20 rows 40000 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/gene_matrix_highmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"Gene expression matrix — gene_matrix_highmoi","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data. object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/gene_names_highmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"gene names high MOI — gene_names_highmoi","title":"gene names high MOI — gene_names_highmoi","text":"vector giving human-readable \"name\" gene.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/gene_names_highmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gene names high MOI — gene_names_highmoi","text":"","code":"data(gene_names_highmoi)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/gene_names_highmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gene names high MOI — gene_names_highmoi","text":"object class character length 526.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/gene_names_highmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"gene names high MOI — gene_names_highmoi","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/gene_position_data_frame_grch38.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene position data frame — gene_position_data_frame_grch38","title":"Gene position data frame — gene_position_data_frame_grch38","text":"gene_position_data_frame_grch38 maps gene chromosome located position transcription start site chromosome. data frame constructed GRCh38 reference genome shipped CellRanger since 2020.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/gene_position_data_frame_grch38.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene position data frame — gene_position_data_frame_grch38","text":"","code":"data(gene_position_data_frame_grch38)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/gene_position_data_frame_grch38.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene position data frame — gene_position_data_frame_grch38","text":"object class data.table (inherits data.frame) 36572 rows 3 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/gene_position_table_grch38.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene position table — gene_position_table_grch38","title":"Gene position table — gene_position_table_grch38","text":"gene_position_table_grch38 maps gene chromosome located position transcription start site chromosome. data frame constructed GRCh38 reference genome shipped CellRanger since 2020.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/gene_position_table_grch38.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene position table — gene_position_table_grch38","text":"","code":"data(gene_position_table_grch38)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/gene_position_table_grch38.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene position table — gene_position_table_grch38","text":"object class data.table (inherits data.frame) 36572 rows 3 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/generate_all_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate all pairs — generate_all_pairs","title":"Generate all pairs — generate_all_pairs","text":"generate_all_pairs() function generates possible response-gRNA group pairs can constructed given response_matrix grna_group_data_frame.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/generate_all_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate all pairs — generate_all_pairs","text":"","code":"generate_all_pairs(response_matrix, grna_group_data_frame)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/generate_all_pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate all pairs — generate_all_pairs","text":"response_matrix (required) matrix raw expression counts. responses (e.g., genes proteins) rows, cells columns. row names unique IDs responses. matrix can standard (dense) matrix sparse matrix class dgCMatrix, dgRMatrix, dgTMatrix. grna_group_data_frame (required) data frame specifying \"group\" individual gRNA belongs. data frame contain columns grna_id grna_group, grna_group specifying group membership given gRNA grna_id column. Typically, gRNAs target site grouped gRNA group. Non-targeting gRNAs (present) assigned gRNA group label \"non-targeting\".","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/generate_all_pairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate all pairs — generate_all_pairs","text":"data frame containing columns response_id grna_group response mapped entire set targeting gRNA groups.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/generate_all_pairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate all pairs — generate_all_pairs","text":"","code":"data(response_matrix_lowmoi) data(grna_group_data_frame_lowmoi) response_grna_group_pairs <- generate_all_pairs(response_matrix_lowmoi, grna_group_data_frame_lowmoi)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/get_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Get result — get_result","title":"Get result — get_result","text":"get_result() returns data frame containing result calibration check, power analysis, discovery analysis. See Section 8 introductory chapter manual information function.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/get_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get result — get_result","text":"","code":"get_result(sceptre_object, analysis)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/get_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get result — get_result","text":"sceptre_object sceptre_object analysis string indicating name analysis whose results querying, one \"run_calibration_check\", \"run_power_check\", \"run_discovery_analysis\".","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/get_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get result — get_result","text":"data frame containing results analysis","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_group_data_frame_highmoi_experimental.html","id":null,"dir":"Reference","previous_headings":"","what":"gRNA groups table — grna_group_data_frame_highmoi_experimental","title":"gRNA groups table — grna_group_data_frame_highmoi_experimental","text":"data frame maps gRNA ID gRNA group.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_group_data_frame_highmoi_experimental.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gRNA groups table — grna_group_data_frame_highmoi_experimental","text":"","code":"data(grna_group_data_frame_highmoi_experimental)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_group_data_frame_highmoi_experimental.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gRNA groups table — grna_group_data_frame_highmoi_experimental","text":"object class data.frame 79 rows 2 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_group_data_frame_highmoi_experimental.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"gRNA groups table — grna_group_data_frame_highmoi_experimental","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data. object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_group_data_frame_lowmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"gRNA group data frame — grna_group_data_frame_lowmoi","title":"gRNA group data frame — grna_group_data_frame_lowmoi","text":"data frame containing gRNA group information. data frame two columns: grna_id grna_group. former column provides ID individual gRNA, latter specifies group individual gRNA belongs. gRNAs target gene transcription start site assigned group. Non-targeting gRNAs assigned group labeled \"non-targeting\".","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_group_data_frame_lowmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gRNA group data frame — grna_group_data_frame_lowmoi","text":"","code":"data(grna_group_data_frame_lowmoi)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_group_data_frame_lowmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gRNA group data frame — grna_group_data_frame_lowmoi","text":"object class data.frame 110 rows 2 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_group_data_frame_lowmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"gRNA group data frame — grna_group_data_frame_lowmoi","text":"example low MOI data sceptre package taken paper \"Characterizing molecular regulation inhibitory immune checkpoints multimodal single-cell screens\" Papalexi et al., 2021. authors used CRISPRko target 26 genes 20,729 THP-1 cells measured effects perturbations via single-cell sequencing. authors designed three four gRNAs target gene, well library nine non-targeting gRNAs. example data include 290 (2\\","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_matrix_highmoi_experimental.html","id":null,"dir":"Reference","previous_headings":"","what":"gRNA expression matrix — grna_matrix_highmoi_experimental","title":"gRNA expression matrix — grna_matrix_highmoi_experimental","text":"gRNA--cell expression matrix.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_matrix_highmoi_experimental.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gRNA expression matrix — grna_matrix_highmoi_experimental","text":"","code":"data(grna_matrix_highmoi_experimental)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_matrix_highmoi_experimental.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gRNA expression matrix — grna_matrix_highmoi_experimental","text":"object class dgTMatrix 79 rows 40002 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_matrix_highmoi_experimental.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"gRNA expression matrix — grna_matrix_highmoi_experimental","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data. object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_matrix_lowmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"gRNA expression matrix — grna_matrix_lowmoi","title":"gRNA expression matrix — grna_matrix_lowmoi","text":"gRNA--cell expression matrix. row names matrix names individual gRNAs.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_matrix_lowmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gRNA expression matrix — grna_matrix_lowmoi","text":"","code":"data(grna_matrix_lowmoi)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_matrix_lowmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gRNA expression matrix — grna_matrix_lowmoi","text":"object class dgTMatrix 110 rows 20729 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_matrix_lowmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"gRNA expression matrix — grna_matrix_lowmoi","text":"example low MOI data sceptre package taken paper \"Characterizing molecular regulation inhibitory immune checkpoints multimodal single-cell screens\" Papalexi et al., 2021. authors used CRISPRko target 26 genes 20,729 THP-1 cells measured effects perturbations via single-cell sequencing. authors designed three four gRNAs target gene, well library nine non-targeting gRNAs. example data include 290 (2\\","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_target_data_frame_highmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"gRNA target data frame — grna_target_data_frame_highmoi","title":"gRNA target data frame — grna_target_data_frame_highmoi","text":"gRNA target data frame corresponding example high MOI data. data frame containing columns grna_id (ID individual gRNA), grna_target (genomic target gRNA), chr (target chromosome), start (start coordinate target location), end (end coordinate target location).","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_target_data_frame_highmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gRNA target data frame — grna_target_data_frame_highmoi","text":"","code":"data(grna_target_data_frame_highmoi)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_target_data_frame_highmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gRNA target data frame — grna_target_data_frame_highmoi","text":"object class data.frame 95 rows 5 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_target_data_frame_lowmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"gRNA group data frame — grna_target_data_frame_lowmoi","title":"gRNA group data frame — grna_target_data_frame_lowmoi","text":"data frame containing gRNA group information. data frame two columns: grna_id grna_group. former column provides ID individual gRNA, latter specifies group individual gRNA belongs. gRNAs target gene transcription start site assigned group. Non-targeting gRNAs assigned group labeled \"non-targeting\".","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_target_data_frame_lowmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gRNA group data frame — grna_target_data_frame_lowmoi","text":"","code":"data(grna_target_data_frame_lowmoi)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_target_data_frame_lowmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gRNA group data frame — grna_target_data_frame_lowmoi","text":"object class data.frame 110 rows 2 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/grna_target_data_frame_lowmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"gRNA group data frame — grna_target_data_frame_lowmoi","text":"example low MOI data sceptre package taken paper \"Characterizing molecular regulation inhibitory immune checkpoints multimodal single-cell screens\" Papalexi et al., 2021. authors used CRISPRko target 26 genes 20,729 THP-1 cells measured effects perturbations via single-cell sequencing. authors designed three four gRNAs target gene, well library nine non-targeting gRNAs. example data include 290 (2\\","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/highmoi_data.html","id":null,"dir":"Reference","previous_headings":"","what":"sceptre package example high MOI data — highmoi_data","title":"sceptre package example high MOI data — highmoi_data","text":"sceptre package example high MOI data","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/highmoi_data.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"sceptre package example high MOI data — highmoi_data","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/highmoi_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example high-MOI data — highmoi_example_data","title":"Example high-MOI data — highmoi_example_data","text":"example high-MOI data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. genes, gRNAs, cells downsampled inclusion example data.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/highmoi_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example high-MOI data — highmoi_example_data","text":"","code":"data(highmoi_example_data)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/highmoi_example_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example high-MOI data — highmoi_example_data","text":"object class list length 4.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/highmoi_example_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example high-MOI data — highmoi_example_data","text":"example data stored list containing five components: response_matrix: gene--cell expression matrix grna_matrix: gRNA--cell expression matrix extra_covariates: data frame single column, batch, specifying sequencing batch cell (batch_1 batch_2) gene_names: human-readable \"name\" gene","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/import_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Import data — import_data","title":"Import data — import_data","text":"import_data() imports data collection R objects create sceptre_object. See Chapter 1 manual detailed information function.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/import_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import data — import_data","text":"","code":"import_data(   response_matrix,   grna_matrix,   grna_target_data_frame,   moi,   extra_covariates = data.frame(),   response_names = NA_character_ )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/import_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import data — import_data","text":"response_matrix matrix response UMI counts, responses rows cells columns grna_matrix matrix gRNA UMI counts, gRNAs rows cells columns grna_target_data_frame data frame containing columns grna_id grna_target mapping individual gRNA target moi string indicating MOI dataset, either \"low\" \"high\" extra_covariates (optional) data frame containing extra covariates (e.g., batch, biological replicate) beyond sceptre can compute response_names (optional) vector human-readable response names; names prefix \"MT-\" assumed mitochondrial genes used compute covariate response_p_mito.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/import_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import data — import_data","text":"initialized sceptre_object","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/import_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import data — import_data","text":"","code":"# see example via ?sceptre"},{"path":"https://katsevich-lab.github.io/sceptre/reference/import_data_from_cellranger.html","id":null,"dir":"Reference","previous_headings":"","what":"Import data from cellranger — import_data_from_cellranger","title":"Import data from cellranger — import_data_from_cellranger","text":"import_data_from_cellranger() imports data output one calls cellranger count. See Section 1 introductory chapter manual information function.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/import_data_from_cellranger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import data from cellranger — import_data_from_cellranger","text":"","code":"import_data_from_cellranger(   directories,   moi,   grna_target_data_frame,   extra_covariates = data.frame() )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/import_data_from_cellranger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import data from cellranger — import_data_from_cellranger","text":"directories character vector directories containing output one calls cellranger count. directory contain files \"matrix.mtx.gz\" \"features.tsv.gz\" (optionally \"barcodes.tsv.gz\"). moi string indicating MOI dataset, either \"low\" \"high\" grna_target_data_frame data frame containing columns grna_id grna_target mapping individual gRNA target extra_covariates (optional) data frame containing extra covariates (e.g., batch, biological replicate) beyond sceptre can compute","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/import_data_from_cellranger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import data from cellranger — import_data_from_cellranger","text":"initialized sceptre_object","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/import_data_from_cellranger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import data from cellranger — import_data_from_cellranger","text":"","code":"if (FALSE) { # 1. point to directories containing cellranger output directories <- paste0(system.file(\"extdata\", package = \"sceptre\"),                      \"/highmoi_example/gem_group_\", 1:2)  # 2. simulate an additional covariate cell_type <- sample(x = paste0(\"type_\", 1:3),                     size = 45919, replace = TRUE) |> factor() extra_covariates <- data.frame(cell_type = cell_type)  # 3. initialize the sceptre_object data(grna_target_data_frame_highmoi) sceptre_object <- import_data_from_cellranger(   directories = directories,   moi = \"high\",   grna_target_data_frame = grna_target_data_frame_highmoi,   extra_covariates = extra_covariates ) }"},{"path":"https://katsevich-lab.github.io/sceptre/reference/import_data_from_parse.html","id":null,"dir":"Reference","previous_headings":"","what":"Import data from Parse (experimental) — import_data_from_parse","title":"Import data from Parse (experimental) — import_data_from_parse","text":"import_data_from_parse() imports data output Parse count matrix generation program. See Chapter 1 manual information function. assumed data stored single set files (opposed multiple sets files corresponding , e.g., different samples).","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/import_data_from_parse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import data from Parse (experimental) — import_data_from_parse","text":"","code":"import_data_from_parse(   gene_mat_fp,   grna_mat_fp,   all_genes_fp,   all_grnas_fp,   moi,   grna_target_data_frame,   extra_covariates = data.frame() )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/import_data_from_parse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import data from Parse (experimental) — import_data_from_parse","text":"gene_mat_fp file path gene count_matrix.mtx file grna_mat_fp file path gRNA count_matrix.mtx file all_genes_fp file path all_genes.csv file containing gene IDs all_grnas_fp file path all_guides.csv file containing gRNA IDs moi string indicating MOI dataset, either \"low\" \"high\" grna_target_data_frame data frame containing columns grna_id grna_target mapping individual gRNA target extra_covariates (optional) data frame containing extra covariates (e.g., batch, biological replicate) beyond sceptre can compute","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/import_data_from_parse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import data from Parse (experimental) — import_data_from_parse","text":"initialized sceptre_object","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/import_data_from_parse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import data from Parse (experimental) — import_data_from_parse","text":"import_data_from_parse() experimental, API function subject change. expect API solidify learn Parse platform structure Parse count matrix generation program output.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/lowmoi_data.html","id":null,"dir":"Reference","previous_headings":"","what":"sceptre package example low MOI data — lowmoi_data","title":"sceptre package example low MOI data — lowmoi_data","text":"sceptre package example low MOI data","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/lowmoi_data.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"sceptre package example low MOI data — lowmoi_data","text":"example low MOI data sceptre package taken paper \"Characterizing molecular regulation inhibitory immune checkpoints multimodal single-cell screens\" Papalexi et al., 2021. authors used CRISPRko target 26 genes 20,729 THP-1 cells measured effects perturbations via single-cell sequencing. authors designed three four gRNAs target gene, well library nine non-targeting gRNAs. example data include 290 (2\\","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/lowmoi_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example low-MOI data — lowmoi_example_data","title":"Example low-MOI data — lowmoi_example_data","text":"example low MOI data taken paper \"Characterizing molecular regulation inhibitory immune checkpoints multimodal single-cell screens\" Papalexi et al., 2021. authors used CRISPRko target 26 genes 20,729 THP-1 cells measured effects perturbations via single-cell sequencing. authors designed three four gRNAs target gene well library nine non-targeting gRNAs. genes downsampled inclusion example data.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/lowmoi_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example low-MOI data — lowmoi_example_data","text":"","code":"data(lowmoi_example_data)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/lowmoi_example_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example low-MOI data — lowmoi_example_data","text":"object class list length 4.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/lowmoi_example_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example low-MOI data — lowmoi_example_data","text":"example data stored list containing four components: response_matrix: gene--cell expression matrix grna_matrix: gRNA--cell expression matrix grna_target_data_frame:  data frame containing columns grna_id (ID individual gRNA) grna_target (genomic target gRNA) extra_covariates: data frame single column, bio_rep, specifying biological replicate cell (rep_1, rep_2, rep_3)","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/make_qq_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make QQ-plot — make_qq_plot","title":"Make QQ-plot — make_qq_plot","text":"Makes QQ-plot set values hypothesized follow uniform distribution (e.g., p-values).","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/make_qq_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make QQ-plot — make_qq_plot","text":"","code":"make_qq_plot(p_values, ci_level = 0.95, point_col = \"royalblue4\", alpha = 0.9)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/make_qq_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make QQ-plot — make_qq_plot","text":"p_values vector values -- hypothesized follow uniform distribution -- construct QQ-plot. vector typically set p-values. ci_level level pointwise confidence band (default 0.95) point_col color plotted points alpha transparency plotted points","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/make_qq_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make QQ-plot — make_qq_plot","text":"ggplot object containing QQ-plot","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/make_qq_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make QQ-plot — make_qq_plot","text":"","code":"set.seed(4) p_vals <- runif(5000) make_qq_plot(p_vals)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/make_volcano_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make volcano plot — make_volcano_plot","title":"Make volcano plot — make_volcano_plot","text":"make_volcano_plot() function creates volcano plot discovery results. point plot corresponds response-gRNA group pair; estimated log-2 fold change pair plotted x-axis, (negative log-10 transformed) p-value plotted y-axis.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/make_volcano_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make volcano plot — make_volcano_plot","text":"","code":"make_volcano_plot(   discovery_result,   alpha = 0.1,   x_limits = c(-1.5, 1.5),   transparency = 0.5,   point_size = 0.9,   multiple_testing_correction = \"BH\" )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/make_volcano_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make volcano plot — make_volcano_plot","text":"discovery_result (required) output call run_sceptre_lowmoi (run_sceptre_highmoi_experimental) calibration_check set FALSE alpha (optional; default 0.1) nominal type-error control level x_limits vector length two giving lower upper limits volcano plot transparency number range (0, 1) indicating transparency points point_size positive number indicating size points multiple_testing_correction (optional; default \"BH\") multiple testing correction method (one \"BH\", \"bonferroni\", \"\", \"holm\")","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/make_volcano_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make volcano plot — make_volcano_plot","text":"ggplot2 object","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/make_volcano_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make volcano plot — make_volcano_plot","text":"horizontal dashed line indicates multiple testing threshold. Points dashed line (colored purple) called discoveries; points dashed line (colored blue), meanwhile, called insignificant.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/make_volcano_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make volcano plot — make_volcano_plot","text":"","code":"# See the example in the run_sceptre_lowmoi help file. ?run_sceptre_lowmoi"},{"path":"https://katsevich-lab.github.io/sceptre/reference/obtain_discovery_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain discovery set — obtain_discovery_set","title":"Obtain discovery set — obtain_discovery_set","text":"obtain_discovery_set() function returns discovery set input discovery result.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/obtain_discovery_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain discovery set — obtain_discovery_set","text":"","code":"obtain_discovery_set(   discovery_result,   alpha = 0.1,   multiple_testing_correction = \"BH\" )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/obtain_discovery_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain discovery set — obtain_discovery_set","text":"discovery_result (required) output call run_sceptre_lowmoi (run_sceptre_highmoi_experimental) calibration_check set FALSE alpha (optional; default 0.1) nominal type-error control level multiple_testing_correction (optional; default \"BH\") multiple testing correction method (one \"BH\", \"bonferroni\", \"\", \"holm\")","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/obtain_discovery_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain discovery set — obtain_discovery_set","text":"subset discovery_result containing discoveries.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/obtain_discovery_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain discovery set — obtain_discovery_set","text":"","code":"# See the example in the run_sceptre_lowmoi help file. ?run_sceptre_lowmoi"},{"path":"https://katsevich-lab.github.io/sceptre/reference/pc_pairs_highmoi_experimental.html","id":null,"dir":"Reference","previous_headings":"","what":"Positive control gene-gRNA group pairs — pc_pairs_highmoi_experimental","title":"Positive control gene-gRNA group pairs — pc_pairs_highmoi_experimental","text":"positive control response-gRNA group pairs, columns response_id (required), grna_group (required), type (optional).","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/pc_pairs_highmoi_experimental.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Positive control gene-gRNA group pairs — pc_pairs_highmoi_experimental","text":"","code":"data(discovery_pairs_highmoi_experimental)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/pc_pairs_highmoi_experimental.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Positive control gene-gRNA group pairs — pc_pairs_highmoi_experimental","text":"object class tbl_df (inherits tbl, data.frame) 10 rows 3 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/pc_pairs_highmoi_experimental.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"Positive control gene-gRNA group pairs — pc_pairs_highmoi_experimental","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data. object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/pc_pairs_lowmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"gRNA group data frame — pc_pairs_lowmoi","title":"gRNA group data frame — pc_pairs_lowmoi","text":"data frame containing positive control response-gRNA group pairs.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/pc_pairs_lowmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gRNA group data frame — pc_pairs_lowmoi","text":"","code":"data(pc_pairs_lowmoi)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/pc_pairs_lowmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gRNA group data frame — pc_pairs_lowmoi","text":"object class data.frame 9 rows 2 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/pc_pairs_lowmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"gRNA group data frame — pc_pairs_lowmoi","text":"example low MOI data sceptre package taken paper \"Characterizing molecular regulation inhibitory immune checkpoints multimodal single-cell screens\" Papalexi et al., 2021. authors used CRISPRko target 26 genes 20,729 THP-1 cells measured effects perturbations via single-cell sequencing. authors designed three four gRNAs target gene, well library nine non-targeting gRNAs. example data include 290 (2\\","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot-sceptre_object-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot — plot,sceptre_object-method","title":"Plot — plot,sceptre_object-method","text":"plot() creates plot depicting current state sceptre_object.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot-sceptre_object-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot — plot,sceptre_object-method","text":"","code":"# S4 method for sceptre_object plot(x, y, ...)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot-sceptre_object-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot — plot,sceptre_object-method","text":"x sceptre_object y ignored argument ... arguments passed plotting function dispatched plot()","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot-sceptre_object-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot — plot,sceptre_object-method","text":"single cowplot object containing combined panels (return_indiv_plots set TRUE) list individual panels (return_indiv_plots set FALSE)","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot-sceptre_object-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot — plot,sceptre_object-method","text":"plot() \"generic\" sense dispatches specific plotting function based pipeline function recently called sceptre_object. example, run_assign_grnas() recently called pipeline function, plot() dispatches plot_run_assign_grnas(). Similarly, run_power_check() recently called pipeline function, plot() dispatches plot_run_power_check(), . Users can pass arguments function dispatched plot() named arguments plot().","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot-sceptre_object-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot — plot,sceptre_object-method","text":"","code":"# A full example can be found at ?sceptre"},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_assign_grnas.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot assign gRNAs — plot_assign_grnas","title":"Plot assign gRNAs — plot_assign_grnas","text":"plot_assign_grnas() plots outcome gRNA--cell assignment step. See Section 3 introductory chapter manual guidance interpreting visual.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_assign_grnas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot assign gRNAs — plot_assign_grnas","text":"","code":"plot_assign_grnas(   sceptre_object,   n_grnas_to_plot = 3L,   grnas_to_plot = NULL,   point_size = 0.9,   transparency = 0.8,   n_max_0_grna_unprtb_plot = 1000,   return_indiv_plots = FALSE )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_assign_grnas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot assign gRNAs — plot_assign_grnas","text":"sceptre_object sceptre_object assign_grnas() called n_grnas_to_plot (optional; default 3) number gRNAs display plots gRNA count versus cell assignment grnas_to_plot (optional; default NULL) character vector giving names specific gRNAs plot; NULL, gRNAs chosen random. point_size (optional; default 0.9) size individual points plot transparency (optional; default 0.8) transparency individual points plot n_max_0_grna_unprtb_plot (optional; default 1000) may many cells gRNA count 0 unperturbed group. can slow plotting without adding useful information, n_max_0_grna_unprtb_plot points group plotted. Setting Inf guarantee downsampling occurs. return_indiv_plots (optional; default FALSE) FALSE, list ggplot objects returned; TRUE single cowplot object returned.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_assign_grnas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot assign gRNAs — plot_assign_grnas","text":"single cowplot object containing combined panels (return_indiv_plots set TRUE) list individual panels (return_indiv_plots set FALSE)","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_assign_grnas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot assign gRNAs — plot_assign_grnas","text":"","code":"# A full example can be found at ?sceptre; # `plot_assign_grnas()` is dispatched when # `plot()` is called on the `sceptre_object` # in step 3 (the gRNA assignment step)."},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_calibration_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot calibration result — plot_calibration_result","title":"Plot calibration result — plot_calibration_result","text":"plot_calibration_result() function helps visualize results calibration check.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_calibration_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot calibration result — plot_calibration_result","text":"","code":"plot_calibration_result(   calibration_result,   alpha = 0.1,   multiple_testing_correction = \"BH\",   return_indiv_plots = FALSE )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_calibration_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot calibration result — plot_calibration_result","text":"calibration_result (required) output call run_sceptre_lowmoi (run_sceptre_highmoi_experimental) calibration_check set TRUE alpha (optional; default 0.1) nominal type-error control level multiple_testing_correction (optional; default \"BH\") multiple testing correction method (one \"BH\", \"bonferroni\", \"\", \"holm\") return_indiv_plots (optional; default FALSE) return single combined plot (TRUE) individual plots list (FALSE)?","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_calibration_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot calibration result — plot_calibration_result","text":"single cowplot object containing combined panels (return_indiv_plots set TRUE) list individual panels (return_indiv_plots set FALSE).","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_calibration_result.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot calibration result — plot_calibration_result","text":"plot contains four panels. upper left: Q-Q plot p-values untransformed scale. p-values lie along diagonal line. upper right: Q-Q plot p-values negative log-10 transformed scale. p-values lie along diagonal line, majority p-values fall within gray confidence band. bottom left: histogram estimated log-2 fold changes expression. histogram roughly symmetric centered zero. bottom right: text box displaying () number false discoveries made negative control pairs (ii) mean estimated log-fold change. number false discoveries ideally zero, although small, positive integer (1, 2, 3) also OK. mean estimated log-fold change numeric value close zero.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_calibration_result.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot calibration result — plot_calibration_result","text":"untransformed transformed Q-Q plots informative: former enables us see bulk p-value distribution, latter enables visualize tail. number false discoveries depends alpha multiple_testing_correction. default value arguments 0.1 \"BH\". corresponds BH correction nominal false discovery rate (FDR) 0.1. Technical point: applying BH level 0.1 collection strictly null p-values, BH controls family-wise error rate (FWER) level 0.1 well FDR level 0.1. FWER probability making one false discoveries. Thus, probability 0.9, number rejections BH makes (well-calibrated) null p-values level 0.1 0. implies sceptre (method matter) make zero false discoveries negative control p-values data applying BH correction level 0.1.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_calibration_result.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot calibration result — plot_calibration_result","text":"","code":"# See the example in the run_sceptre_lowmoi help file. ?run_sceptre_lowmoi"},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot covariates — plot_covariates","title":"Plot covariates — plot_covariates","text":"plot_covariates() creates histograms several cell-specific covariates: response_n_nonzero, response_n_umis, (applicable) response_p_mito. help guide selection QC thresholds, plot_covariates() plots candidate QC thresholds vertical lines histograms.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot covariates — plot_covariates","text":"","code":"plot_covariates(   sceptre_object,   response_n_umis_range = c(0.01, 0.99),   response_n_nonzero_range = c(0.01, 0.99),   p_mito_threshold = 0.2,   return_indiv_plots = FALSE )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot covariates — plot_covariates","text":"sceptre_object initialized sceptre_object. plot_covariates() can called point pipeline import_data(). response_n_umis_range (optional; default c(0.01, 0.99)) length-2 vector quantiles indicating location draw vertical lines response_n_umis histogram response_n_nonzero_range (optional; default c(0.01, 0.99)) length-2 vector quantiles indicating location draw vertical lines response_n_nonzero histogram p_mito_threshold (optional; default 0.2) single numeric value interval [0,1] specifying location draw vertical line response_p_mito histogram. Note p_mito_threshold absolute number rather percentile. return_indiv_plots (optional; default FALSE) FALSE, list ggplot objects returned; TRUE single cowplot object returned.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot covariates — plot_covariates","text":"single cowplot object containing combined panels (return_indiv_plots set TRUE) list individual panels (return_indiv_plots set FALSE)","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_covariates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot covariates — plot_covariates","text":"","code":"# A full example can be found at ?sceptre"},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_grna_count_distributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot gRNA count distributions — plot_grna_count_distributions","title":"Plot gRNA count distributions — plot_grna_count_distributions","text":"plot_grna_count_distributions() plots empirical UMI count distribution one gRNAs.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_grna_count_distributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot gRNA count distributions — plot_grna_count_distributions","text":"","code":"plot_grna_count_distributions(   sceptre_object,   n_grnas_to_plot = 4L,   grnas_to_plot = NULL,   threshold = NULL )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_grna_count_distributions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot gRNA count distributions — plot_grna_count_distributions","text":"sceptre_object initialized sceptre_object. plot_grna_count_distributions() can called point pipeline import_data(). n_grnas_to_plot (optional; default 4) integer specifying number randomly selected gRNAs plot grnas_to_plot (optional; default NULL) character vector giving names one specific gRNAs plot. NULL, n_grnas_to_plot random gRNAs plotted. threshold (optional; default NULL) integer representing gRNA count cut-; provided, bins length 1 go include value, exponentially growing bins begin. vertical line also drawn value. NULL, 10 largest gRNA count bin. Non-integer values rounded.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_grna_count_distributions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot gRNA count distributions — plot_grna_count_distributions","text":"single ggplot2 plot","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_grna_count_distributions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot gRNA count distributions — plot_grna_count_distributions","text":"x-axis piecewise linear-log scale, bins size 1 going gRNA counts 0 max(10, threshold), bin widths grow exponentially size. number bar indicates first value counted bar, bar includes integers label integer immediately preceding label next bar right. example, one bar label \"23\" next bar right label \"26\" bar label \"23\" counts values 23, 24, 25 data.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_grna_count_distributions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot gRNA count distributions — plot_grna_count_distributions","text":"","code":"# A full example can be found at ?sceptre"},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_resampling_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot resampling distribution — plot_resampling_distribution","title":"Plot resampling distribution — plot_resampling_distribution","text":"Plots resampling distribution null test statistics given response-gRNA group pair.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_resampling_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot resampling distribution — plot_resampling_distribution","text":"","code":"plot_resampling_distribution(result_df, row_number)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_resampling_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot resampling distribution — plot_resampling_distribution","text":"result_df output call run_sceptre_lowmoi (run_sceptre_highmoi_experimental). NOTE: argument output_amount set 3 null statistics returned. row_number integer identifying row results data frame visualize","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_resampling_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot resampling distribution — plot_resampling_distribution","text":"plot resampling distribution null test statistics.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_resampling_distribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot resampling distribution — plot_resampling_distribution","text":"fitted parametric curve superimposed histogram purple (applicable). original test statistic, meanwhile, plotted vertical blue line.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_resampling_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot resampling distribution — plot_resampling_distribution","text":"","code":"library(Matrix) set.seed(5)  if (FALSE) { # 0. load the data associated with the experiment data(response_matrix_lowmoi) # response-by-cell expression matrix data(grna_matrix_lowmoi) # gRNA-by-cell expression matrix data(covariate_data_frame_lowmoi) # cell-by-covariate data frame data(grna_group_data_frame_lowmoi) # gRNA group information response_grna_group_pairs <- generate_all_pairs(response_matrix_lowmoi, grna_group_data_frame_lowmoi) |> dplyr::sample_n(30) formula_object <- formula(~log(response_n_umis) + log(response_n_nonzero) + bio_rep + p_mito)  # 1. apply sceptre discovery_result <- run_sceptre_lowmoi(response_matrix = response_matrix_lowmoi, grna_matrix = grna_matrix_lowmoi, covariate_data_frame = covariate_data_frame_lowmoi, grna_group_data_frame = grna_group_data_frame_lowmoi, formula_object = formula_object, response_grna_group_pairs = response_grna_group_pairs, calibration_check = FALSE, output_amount = 3)  # 2. visualize a resampling distribution plot_resampling_distribution(discovery_result, 2) }"},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_calibration_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot run calibration check — plot_run_calibration_check","title":"Plot run calibration check — plot_run_calibration_check","text":"plot_run_calibration_check() creates visualization outcome calibration check. See Section 5 introductory chapter manual guidance interpreting visual.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_calibration_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot run calibration check — plot_run_calibration_check","text":"","code":"plot_run_calibration_check(   sceptre_object,   point_size = 0.55,   transparency = 0.8,   return_indiv_plots = FALSE )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_calibration_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot run calibration check — plot_run_calibration_check","text":"sceptre_object sceptre_object run_calibration_check called point_size (optional; default 0.55) size individual points plot transparency (optional; default 0.8) transparency individual points plot return_indiv_plots (optional; default FALSE) FALSE list ggplot returned; TRUE single cowplot object returned.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_calibration_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot run calibration check — plot_run_calibration_check","text":"single cowplot object containing combined panels (return_indiv_plots set TRUE) list individual panels (return_indiv_plots set FALSE)","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_calibration_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot run calibration check — plot_run_calibration_check","text":"","code":"# A full example can be found at ?sceptre; # `plot_run_calibration_check()` is dispatched when # `plot()` is called on the `sceptre_object` # in step 5 (the run calibration check step)."},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_discovery_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot run discovery analysis — plot_run_discovery_analysis","title":"Plot run discovery analysis — plot_run_discovery_analysis","text":"plot_run_discovery_analysis() creates visualization outcome discovery analysis. See Section 7 introductory chapter manual guidance interpreting visual.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_discovery_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot run discovery analysis — plot_run_discovery_analysis","text":"","code":"plot_run_discovery_analysis(   sceptre_object,   x_limits = c(-1.5, 1.5),   point_size = 0.55,   transparency = 0.8,   return_indiv_plots = FALSE )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_discovery_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot run discovery analysis — plot_run_discovery_analysis","text":"sceptre_object sceptre_object run_discovery_analysis called x_limits (optional; default c(-1.5, 1.5)) numeric vector length 2 giving lower upper limits x-axis (corresponding log-2 fold change) \"Discovery volcano plot\" panel point_size (optional; default 0.55) size individual points plot transparency (optional; default 0.8) transparency individual points plot return_indiv_plots (optional; default FALSE) FALSE list ggplot returned; TRUE single cowplot object returned.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_discovery_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot run discovery analysis — plot_run_discovery_analysis","text":"single cowplot object containing combined panels (return_indiv_plots set TRUE) list individual panels (return_indiv_plots set FALSE)","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_discovery_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot run discovery analysis — plot_run_discovery_analysis","text":"","code":"# A full example can be found at ?sceptre; # `plot_run_discovery_analysis()` is dispatched when # `plot()` is called on the `sceptre_object` # in step 7 (the run discovery analysis step)."},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_power_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot run power check — plot_run_power_check","title":"Plot run power check — plot_run_power_check","text":"plot_run_power_check() creates visualization outcome power check analysis. Positive (resp., negative) control p-values plotted left (resp., right) column negative log scale.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_power_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot run power check — plot_run_power_check","text":"","code":"plot_run_power_check(   sceptre_object,   point_size = 1,   transparency = 0.8,   clip_to = 1e-20 )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_power_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot run power check — plot_run_power_check","text":"sceptre_object sceptre_object run_power_check() called point_size (optional; default 1) size individual points plot transparency (optional; default 0.8) transparency individual points plot clip_to (optional; default 1e-20) p-values smaller value set clip_to better visualization. clip_to=0 used clipping done.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_power_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot run power check — plot_run_power_check","text":"single ggplot2 plot","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_power_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot run power check — plot_run_power_check","text":"","code":"# A full example can be found at ?sceptre; # `plot_run_power_check()` is dispatched when # `plot()` is called on the `sceptre_object` # in step 6 (the run power check step)."},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_qc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot run QC — plot_run_qc","title":"Plot run QC — plot_run_qc","text":"plot_run_qc() creates visualization outcome QC step. See Section 4 introductory chapter manual guidance interpreting visual.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_qc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot run QC — plot_run_qc","text":"","code":"plot_run_qc(   sceptre_object,   downsample_pairs = 10000L,   point_size = 0.55,   transparency = 0.8,   return_indiv_plots = FALSE )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_qc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot run QC — plot_run_qc","text":"sceptre_object sceptre_object run_qc() called downsample_pairs (optional; default 10000) maximum number points plot lower panel figure (.e., \"pairwise QC\" plot) point_size (optional; default 0.55) size individual points plot transparency (optional; default 0.8) transparency individual points plot return_indiv_plots (optional; default FALSE) FALSE list ggplot returned; TRUE single cowplot object returned.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_qc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot run QC — plot_run_qc","text":"single cowplot object containing combined panels (return_indiv_plots set TRUE) list individual panels (return_indiv_plots set FALSE)","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/plot_run_qc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot run QC — plot_run_qc","text":"","code":"# A full example can be found at ?sceptre; # `plot_run_qc()` is dispatched when # `plot()` is called on the `sceptre_object` # in step 4 (the run qc step)."},{"path":"https://katsevich-lab.github.io/sceptre/reference/print-sceptre_object-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Print — print,sceptre_object-method","title":"Print — print,sceptre_object-method","text":"print() prints information dataset status analysis console.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/print-sceptre_object-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print — print,sceptre_object-method","text":"","code":"# S4 method for sceptre_object print(x)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/print-sceptre_object-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print — print,sceptre_object-method","text":"x sceptre_object","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/response_matrix_highmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene expression matrix — response_matrix_highmoi","title":"Gene expression matrix — response_matrix_highmoi","text":"gene--cell expression matrix.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/response_matrix_highmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene expression matrix — response_matrix_highmoi","text":"","code":"data(response_matrix_highmoi)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/response_matrix_highmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene expression matrix — response_matrix_highmoi","text":"object class dgTMatrix 526 rows 45919 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/response_matrix_highmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"Gene expression matrix — response_matrix_highmoi","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/response_matrix_highmoi_experimental.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene expression matrix — response_matrix_highmoi_experimental","title":"Gene expression matrix — response_matrix_highmoi_experimental","text":"gene--cell expression matrix.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/response_matrix_highmoi_experimental.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene expression matrix — response_matrix_highmoi_experimental","text":"","code":"data(response_matrix_highmoi_experimental)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/response_matrix_highmoi_experimental.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene expression matrix — response_matrix_highmoi_experimental","text":"object class dgTMatrix 366 rows 40002 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/response_matrix_highmoi_experimental.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"Gene expression matrix — response_matrix_highmoi_experimental","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data. object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/response_matrix_lowmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Response expression matrix — response_matrix_lowmoi","title":"Response expression matrix — response_matrix_lowmoi","text":"gene--cell expression matrix. row names matrix names genes.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/response_matrix_lowmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Response expression matrix — response_matrix_lowmoi","text":"","code":"data(response_matrix_lowmoi)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/response_matrix_lowmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Response expression matrix — response_matrix_lowmoi","text":"object class dgTMatrix 299 rows 20729 columns.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/response_matrix_lowmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"Response expression matrix — response_matrix_lowmoi","text":"example low MOI data sceptre package taken paper \"Characterizing molecular regulation inhibitory immune checkpoints multimodal single-cell screens\" Papalexi et al., 2021. authors used CRISPRko target 26 genes 20,729 THP-1 cells measured effects perturbations via single-cell sequencing. authors designed three four gRNAs target gene, well library nine non-targeting gRNAs. example data include 290 (2\\","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_calibration_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Run calibration check — run_calibration_check","title":"Run calibration check — run_calibration_check","text":"run_calibration_check() runs calibration check. See Chapter 5 manual detailed information function.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_calibration_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run calibration check — run_calibration_check","text":"","code":"run_calibration_check(   sceptre_object,   output_amount = 1,   n_calibration_pairs = NULL,   calibration_group_size = NULL,   print_progress = TRUE,   parallel = FALSE )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_calibration_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run calibration check — run_calibration_check","text":"sceptre_object sceptre_object output_amount (optional; default 1) integer taking values 1, 2, 3 specifying amount information return n_calibration_pairs (optional) number negative control pairs construct test association calibration_group_size (optional) number negative control gRNAs put negative control target print_progress (optional; default TRUE) logical indicating whether print progress updates parallel (optional; default FALSE) logical indicating whether run function parallel","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_calibration_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run calibration check — run_calibration_check","text":"updated sceptre_object calibration check carried ","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_calibration_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run calibration check — run_calibration_check","text":"","code":"# see example via ?sceptre"},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_discovery_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Run discovery analysis — run_discovery_analysis","title":"Run discovery analysis — run_discovery_analysis","text":"run_discovery_analysis() runs discovery analysis. See Chapter 6 manual detailed information function.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_discovery_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run discovery analysis — run_discovery_analysis","text":"","code":"run_discovery_analysis(   sceptre_object,   output_amount = 1,   print_progress = TRUE,   parallel = FALSE )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_discovery_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run discovery analysis — run_discovery_analysis","text":"sceptre_object sceptre_object output_amount (optional; default 1) integer taking values 1, 2, 3 specifying amount information return print_progress (optional; default TRUE) logical indicating whether print progress updates parallel (optional; default FALSE) logical indicating whether run function parallel","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_discovery_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run discovery analysis — run_discovery_analysis","text":"updated sceptre_object discovery analysis carried ","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_discovery_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run discovery analysis — run_discovery_analysis","text":"","code":"# see example via ?sceptre"},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_power_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Run power check — run_power_check","title":"Run power check — run_power_check","text":"run_power_check() runs power check. See Chapter 6 manual detailed information function.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_power_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run power check — run_power_check","text":"","code":"run_power_check(   sceptre_object,   output_amount = 1,   print_progress = TRUE,   parallel = FALSE )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_power_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run power check — run_power_check","text":"sceptre_object sceptre_object output_amount (optional; default 1) integer taking values 1, 2, 3 specifying amount information return print_progress (optional; default TRUE) logical indicating whether print progress updates parallel (optional; default FALSE) logical indicating whether run function parallel","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_power_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run power check — run_power_check","text":"updated sceptre_object power check carried ","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_power_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run power check — run_power_check","text":"","code":"# see example via ?sceptre"},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_qc.html","id":null,"dir":"Reference","previous_headings":"","what":"Run QC — run_qc","title":"Run QC — run_qc","text":"run_qc() runs cellwise pairwise QC data. See Chapter 4 manual detailed information function.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_qc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run QC — run_qc","text":"","code":"run_qc(   sceptre_object,   n_nonzero_trt_thresh = 7L,   n_nonzero_cntrl_thresh = 7L,   response_n_umis_range = c(0.01, 0.99),   response_n_nonzero_range = c(0.01, 0.99),   p_mito_threshold = 0.2,   additional_cells_to_remove = integer() )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_qc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run QC — run_qc","text":"sceptre_object sceptre_object n_nonzero_trt_thresh (optional; default 7L) integer specifying number nonzero treatment cells pair must contain retained n_nonzero_cntrl_thresh (optional; default 7L) integer specifying number nonzero control cells pair must contain retained response_n_umis_range (optional; default c(0.01, 0.99)) length-two vector percentiles specifying location clip left right tails response_n_umis distribution response_n_nonzero_range (optional; default c(0.01, 0.99)) length-two vector percentiles specifying location clip left right tails response_n_nonzero distribution p_mito_threshold (optional; default 0.2) numeric value specifying location clip right tail response_p_mito distribution additional_cells_to_remove (optional) vector integer indices specifying additional cells remove","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_qc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run QC — run_qc","text":"updated sceptre_object QC carried ","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_qc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run QC — run_qc","text":"","code":"# see example via ?sceptre"},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre.html","id":null,"dir":"Reference","previous_headings":"","what":"Run sceptre — run_sceptre","title":"Run sceptre — run_sceptre","text":"Applies sceptre analyze single-cell CRISPR screen dataset.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run sceptre — run_sceptre","text":"","code":"run_sceptre(   response_matrix,   grna_matrix,   covariate_data_frame,   grna_group_data_frame,   moi,   formula_object,   calibration_check,   response_grna_group_pairs = NULL,   control_group = \"default\",   resampling_mechanism = \"default\",   side = \"both\",   fit_parametric_curve = TRUE,   n_nonzero_trt_thresh = 7L,   n_nonzero_cntrl_thresh = 7L,   grna_assign_threshold = 5L,   calibration_group_size = NULL,   n_calibration_pairs = NULL,   B1 = 499L,   B2 = 4999L,   B3 = 24999L,   print_progress = TRUE,   output_amount = 1L )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run sceptre — run_sceptre","text":"response_matrix (required) matrix raw expression counts. responses (e.g., genes proteins) rows, cells columns. row names unique IDs responses. matrix can standard (dense) matrix sparse matrix class dgCMatrix, dgRMatrix, dgTMatrix. grna_matrix (required) matrix gRNA expression counts. gRNAs rows, cells columns. row names unique IDs gRNAs. matrix can standard (dense) matrix sparse matrix class dgCMatrix, dgRMatrix, dgTMatrix. (See \"Notes\" details passing gRNA matrix containing user-specified gRNA--cell assignments.) covariate_data_frame (required) data frame containing cell-specific covariates (e.g., sequencing batch, total UMI count, etc.), cells rows covariates columns. grna_group_data_frame (required) data frame specifying \"group\" individual gRNA belongs. data frame contain columns grna_id grna_group, grna_group specifying group membership given gRNA grna_id column. Typically, gRNAs target site grouped gRNA group. Non-targeting gRNAs (present) assigned gRNA group label \"non-targeting\". moi MOI dataset, either \"low\" \"high\". formula_object (required) R formula object specifying adjust covariates covariate_data_frame. calibration_check (required) logical (.e., TRUE/FALSE) value indicating whether run calibration check (TRUE) discovery analysis (FALSE). See \"Details\" section complete description calibration discovery analyses. response_grna_group_pairs (required) data frame specifying set response-gRNA group pairs test association. data frame contain columns response_id grna_group. control_group (optional; moderate importance; default depends MOI) set cells cells received given targeting gRNA group compared, either \"complement\" (complement set) \"nt\" (cells containing non-targeting gRNA). valid option high MOI data \"complement\", () cells contain exclusively non-targeting gRNAs high MOI. default low MOI data \"nt\". resampling_mechanism (optional; moderate importance; default depends MOI) resampling mechanism used carry inference, either \"crt\" (conditional randomization test) \"permutations\" (permutation test). default use \"crt\" high MOI \"permutations\" low MOI. side (optional; moderate importance; default \"\") sidedness test, either two-sided (\"\"), left-tailed (\"left\"), right-tailed (\"right\"). fit_parametric_curve (optional; moderate importance; default TRUE) logical (.e., TRUE/FALSE) indicating whether fit parametric curve distribution null test statistics compute p-value using fitted parametric curve. Setting argument TRUE (default) enables sceptre return small p-values. n_nonzero_trt_thresh (optional; moderate importance; default 7) given response-gRNA group pair, n_nonzero_trt number \"treatment cells\" (.e., cells received given targeting gRNA group) nonzero expression. sceptre filters response-gRNA group pairs n_nonzero_trt value equal greater n_nonzero_trt_thresh. n_nonzero_cntrl_thresh (optional; moderate importance; default 7) given response-gRNA group pair, n_nonzero_cntrl number \"control cells\" (.e., cells treatment cells compared) nonzero expression. sceptre filters pairs n_nonzero_control value equal greater n_nonzero_control_thresh. grna_assign_threshold (optional; lower importance; default 5) threshold used assign gRNAs cells high MOI data. given gRNA assigned cell UMI count gRNA within cell greater equal threshold. (low MOI, argument ignored, gRNAs assigned cells via maximum opposed thresholding operation.) calibration_group_size (optional; lower importance; default NULL) number NT gRNAs assign negative control gRNA group calibration check. default, calibration_group_size set equal median group size targeting gRNA groups. n_calibration_pairs (optional; lower importance; default NULL) number negative control pairs analyze calibration check. default, argument set equal number discovery pairs (.e., pairs specified data frame response_grna_group_pairs) passes pairwise QC. B1 (optional; lower importance; default 499) number null test statistics compute first stage permutation test. B2 (optional; lower importance; default 4999) number null test statistics compute second stage permutation test. B3 (optional; lower importance; default 24999) number null test statistics compute third stage permutation test. print_progress (optional; lower importance; default TRUE) logical (.e., TRUE/FALSE value) indicating whether print progress function. output_amount (optional; lower importance; default 1) integer specifying amount information return part output, either 1 (least), 2 (intermediate), 3 (). (See \"Value\".)","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run sceptre — run_sceptre","text":"data frame containing following columns: response_id, grna_group, n_nonzero_trt, n_nonzero_cntrl, p_value. response_id: ID response grna_group: gRNA group response tested. running calibration check, grna_group negative control gRNA group constructed grouping together individual NT gRNAs. running discovery analysis, contrast, grna_group targeting gRNA group. n_nonzero_trt: number treatment cells (.e., cells received targeting gRNA) nonzero expression n_nonzero_cntrl: number control cells (.e., cells received non-targeting gRNA) nonzero expression p_value: sceptre p-value log_2_fold_change: sceptre-estimated log (base 2) fold change expression, controlling covariates Rows ordered according p_value. Response-gRNA group pairs fail pass pairwise QC assigned p-value log fold change estimate NA. output_amount set 2, following additional columns returned: stage: stage p-value computed, one 1, 2, 3 (See Notes) z_orig: original z-score computed raw data xi, omega, alpha: fitted parameters skew-normal distribution. (columns set NA parametric curve fitted null distribution test statistics.) output_amount set 3, resampling distribution test statistics also returned, stored columns z_null_1, z_null_2, z_null_3, ... .","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run sceptre — run_sceptre","text":"typical sceptre analysis consists three main steps. First, user sets analysis, entails specifying () response expression matrix, (ii) gRNA expression matrix, (iii) cell covariate data frame, (iv) gRNA group data frame, (v) formula object, (vi) set response-gRNA group pairs test association. Second, user carries calibration check passing objects function run_sceptre, setting calibration_check TRUE. carrying calibration check, sceptre automatically constructs set negative control response-gRNA group pairs test association; pairs \"matched\" discovery pairs several respects. user verifies calibration negative control p-values plotting calibration results via plot_calibration_result. Finally, user runs discovery analysis calling function run_sceptre, time setting calibration_check FALSE. user visualizes discovery results via calls compare_calibration_and_discovery_results make_volcano_plot obtains final set discoveries via call obtain_discovery_set.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Run sceptre — run_sceptre","text":"notes arranged roughly order important least important. function compute_cell_covariates can used help compute covariate_data_frame, function generate_all_pairs can used help compute response_grna_group_pairs. constructing formula_object, best practice log-transform integer count-based variables (e.g., total UMI count, number expressed responses). default, sceptre assigns gRNAs cells users. Users instead may assign gRNAs cells , passing logical (.e., TRUE/FALSE)  grna_matrix sceptre. logical matrix standard (dense) R matrix sparse matrix type lgCMatrix, lgRMatrix, lgTMatrix. low MOI column contain single TRUE value, indicates gRNA infected given cell. sceptre tests given pair association three stages. First, sceptre computes B1 null statistics calculates initial empirical p-value p1 using null statistics. p1 promising (.e., p1 < 0.02), sceptre proceeds stage 2; otherwise, sceptre returns p1. stage 2, sceptre computes B2 null statistics fits parametric curve (default, skew normal distribution) null statistics. fit parametric curve good, sceptre returns p2. Otherwise, sceptre proceeds stage 3. stage 3, sceptre computes B3 null statistics calculates empirical p-value p3 using null statistics. sceptre returns p3. resampling_mechanism set \"crt\" (default high MOI data), stage 3 empirical p-value computed using null test statistics stage 2 (save compute).","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_highmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Run sceptre on high MOI data — run_sceptre_highmoi","title":"Run sceptre on high MOI data — run_sceptre_highmoi","text":"function applies SCEPTRE test association set gRNA groups genes high MOI experiment. function returns p-value log fold change estimate pairwise test association.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_highmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run sceptre on high MOI data — run_sceptre_highmoi","text":"","code":"run_sceptre_highmoi(   gene_matrix,   combined_perturbation_matrix,   covariate_matrix,   gene_gRNA_group_pairs,   side = \"both\",   storage_dir = tempdir(),   regularization_amount = 0,   B = 1000,   full_output = FALSE,   parallel = FALSE,   seed = 4 )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_highmoi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run sceptre on high MOI data — run_sceptre_highmoi","text":"gene_matrix gene--cell expression matrix; rows (.e., gene IDs) columns (.e., cell barcodes) named combined_perturbation_matrix binary matrix perturbations (.e., gRNA group--cell assignments); rows (.e., gRNA groups) columns (.e., cell barcodes) named. covariate_matrix cell-specific matrix technical factors, ideally containing following covariates: log-transformed gene library size (numeric), log-transformed gRNA library size (numeric), percent mitochondrial reads (numeric), batch (factor). rows (.e., cell barcodes) named gene_gRNA_group_pairs data frame specifying gene-gRNA group pairs test association; data frame contain columns named gene_id gRNA_group. side sidedness test; one \",\" \"left,\" \"right\". (default \"\") storage_dir directory store intermediate computations (default tempdir) regularization_amount non-negative number specifying amount regularization apply negative binomial dispersion parameter estimates (default 0) B number resamples draw conditional randomization test. (default 1000) full_output return full output (TRUE) simplified, reduced output (FALSE)? (default FALSE) parallel parallelize execution? (default TRUE) seed seed random number generator (default 4)","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_highmoi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run sceptre on high MOI data — run_sceptre_highmoi","text":"gene_gRNA_group_pairs data frame new columns p_value, z_value, log_fold_change appended. See \"details\" description output full_output set TRUE.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_highmoi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run sceptre on high MOI data — run_sceptre_highmoi","text":"Details arranged least important. gene_matrix raw (.e., un-normalized) matrix UMI (unique molecular identifier) counts. combined_perturbation_matrix \"combined perturbation matrix\", can obtained applying functions threshold_gRNA_matrix combine_perturbations (order) raw gRNA count matrix. combined_perturbation_matrix optionally can raw gRNA expression matrix uncombined perturbation matrix, case gRNA treated group one. See tutorial details. gene IDs (respectively, gRNA groups) within gene_gRNA_group_pairs must subset row names gene_matrix (respectively, combined_perturbation_matrix). side parameter controls sidedness test. arguments \"left\" \"right\" appropriate testing decrease increase gene expression, respectively. default argument -- \"\" -- appropriate testing increase decrease gene expression. default value regularization_amount 0.0, meaning zero regularization applied estimated negative binomial size parameters. One can increase value parameter protect overfitting, can useful many genes. full_output set TRUE (opposed FALSE, default), output data frame following columns: gene_id, gRNA_id, p_value, skew_t_fit_success (TRUE, p-value based tail probability fitted skew-t distribution returned; FALSE, empirical p-value returned), xi, omega, alpha, nu (fitted parameters skew-t distribution; NA fit failed), z_value (z-value obtained \"ground truth\" data), z_null_1, ..., z_null_B (z-values obtained resampled datasets).","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_highmoi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run sceptre on high MOI data — run_sceptre_highmoi","text":"","code":"if (FALSE) { library(dplyr) # 1. load the data data(gene_matrix_highmoi) # i. gene expression matrix data(gRNA_matrix_highmoi) # ii. gRNA expression matrix data(covariate_matrix_highmoi) # iii. covariate matrix data(gRNA_groups_table_highmoi) # iv. gRNAs grouped by target site data(gene_gRNA_group_pairs_highmoi) # v. gene-gRNA group pairs to analyze  # 2. threshold and combine gRNA matrix combined_perturbation_matrix <- threshold_gRNA_matrix(gRNA_matrix_highmoi) |> combine_perturbations(gRNA_groups_table_highmoi)  # 3. select the gene-gRNA group pairs to analyze set.seed(4) gene_gRNA_group_pairs_highmoi <- gene_gRNA_group_pairs_highmoi |> sample_n(25)  # 4. run method (takes ~40s on an 8-core Macbook Pro) result <- run_sceptre_highmoi(gene_matrix = gene_matrix_highmoi, combined_perturbation_matrix = combined_perturbation_matrix, covariate_matrix = covariate_matrix_highmoi, gene_gRNA_group_pairs = gene_gRNA_group_pairs_highmoi, side = \"left\") }"},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_highmoi_experimental.html","id":null,"dir":"Reference","previous_headings":"","what":"Run sceptre (high MOI; experimental) — run_sceptre_highmoi_experimental","title":"Run sceptre (high MOI; experimental) — run_sceptre_highmoi_experimental","text":"new, experimental high MOI function. user interface function nearly identical low MOI function. Therefore, recommend users work low MOI tutorial using function.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_highmoi_experimental.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run sceptre (high MOI; experimental) — run_sceptre_highmoi_experimental","text":"","code":"run_sceptre_highmoi_experimental(   response_matrix,   grna_matrix,   covariate_data_frame,   grna_group_data_frame,   formula_object,   calibration_check,   response_grna_group_pairs = NULL,   resampling_mechanism = \"default\",   n_nonzero_trt_thresh = 7L,   n_nonzero_cntrl_thresh = 7L,   side = \"both\",   grna_assign_threshold = 5L,   output_amount = 1L,   fit_parametric_curve = TRUE,   calibration_group_size = NULL,   n_calibration_pairs = NULL,   B1 = 499L,   B2 = 4999L,   B3 = 24999L,   print_progress = TRUE )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_highmoi_experimental.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run sceptre (high MOI; experimental) — run_sceptre_highmoi_experimental","text":"response_matrix (required) matrix raw expression counts. responses (e.g., genes proteins) rows, cells columns. row names unique IDs responses. matrix can standard (dense) matrix sparse matrix class dgCMatrix, dgRMatrix, dgTMatrix. grna_matrix (required) matrix gRNA expression counts. gRNAs rows, cells columns. row names unique IDs gRNAs. matrix can standard (dense) matrix sparse matrix class dgCMatrix, dgRMatrix, dgTMatrix. (See \"Notes\" details passing gRNA matrix containing user-specified gRNA--cell assignments.) covariate_data_frame (required) data frame containing cell-specific covariates (e.g., sequencing batch, total UMI count, etc.), cells rows covariates columns. grna_group_data_frame (required) data frame specifying \"group\" individual gRNA belongs. data frame contain columns grna_id grna_group, grna_group specifying group membership given gRNA grna_id column. Typically, gRNAs target site grouped gRNA group. Non-targeting gRNAs (present) assigned gRNA group label \"non-targeting\". formula_object (required) R formula object specifying adjust covariates covariate_data_frame. calibration_check (required) logical (.e., TRUE/FALSE) value indicating whether run calibration check (TRUE) discovery analysis (FALSE). See \"Details\" section complete description calibration discovery analyses. response_grna_group_pairs (required) data frame specifying set response-gRNA group pairs test association. data frame contain columns response_id grna_group. resampling_mechanism (optional; moderate importance; default depends MOI) resampling mechanism used carry inference, either \"crt\" (conditional randomization test) \"permutations\" (permutation test). default use \"crt\" high MOI \"permutations\" low MOI. n_nonzero_trt_thresh (optional; moderate importance; default 7) given response-gRNA group pair, n_nonzero_trt number \"treatment cells\" (.e., cells received given targeting gRNA group) nonzero expression. sceptre filters response-gRNA group pairs n_nonzero_trt value equal greater n_nonzero_trt_thresh. n_nonzero_cntrl_thresh (optional; moderate importance; default 7) given response-gRNA group pair, n_nonzero_cntrl number \"control cells\" (.e., cells treatment cells compared) nonzero expression. sceptre filters pairs n_nonzero_control value equal greater n_nonzero_control_thresh. side (optional; moderate importance; default \"\") sidedness test, either two-sided (\"\"), left-tailed (\"left\"), right-tailed (\"right\"). grna_assign_threshold (optional; lower importance; default 5) threshold used assign gRNAs cells high MOI data. given gRNA assigned cell UMI count gRNA within cell greater equal threshold. (low MOI, argument ignored, gRNAs assigned cells via maximum opposed thresholding operation.) output_amount (optional; lower importance; default 1) integer specifying amount information return part output, either 1 (least), 2 (intermediate), 3 (). (See \"Value\".) fit_parametric_curve (optional; moderate importance; default TRUE) logical (.e., TRUE/FALSE) indicating whether fit parametric curve distribution null test statistics compute p-value using fitted parametric curve. Setting argument TRUE (default) enables sceptre return small p-values. calibration_group_size (optional; lower importance; default NULL) number NT gRNAs assign negative control gRNA group calibration check. default, calibration_group_size set equal median group size targeting gRNA groups. n_calibration_pairs (optional; lower importance; default NULL) number negative control pairs analyze calibration check. default, argument set equal number discovery pairs (.e., pairs specified data frame response_grna_group_pairs) passes pairwise QC. B1 (optional; lower importance; default 499) number null test statistics compute first stage permutation test. B2 (optional; lower importance; default 4999) number null test statistics compute second stage permutation test. B3 (optional; lower importance; default 24999) number null test statistics compute third stage permutation test. print_progress (optional; lower importance; default TRUE) logical (.e., TRUE/FALSE value) indicating whether print progress function.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_highmoi_experimental.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run sceptre (high MOI; experimental) — run_sceptre_highmoi_experimental","text":"data frame containing following columns: response_id, grna_group, n_nonzero_trt, n_nonzero_cntrl, p_value. response_id: ID response grna_group: gRNA group response tested. running calibration check, grna_group negative control gRNA group constructed grouping together individual NT gRNAs. running discovery analysis, contrast, grna_group targeting gRNA group. n_nonzero_trt: number treatment cells (.e., cells received targeting gRNA) nonzero expression n_nonzero_cntrl: number control cells (.e., cells received non-targeting gRNA) nonzero expression p_value: sceptre p-value log_2_fold_change: sceptre-estimated log (base 2) fold change expression, controlling covariates Rows ordered according p_value. Response-gRNA group pairs fail pass pairwise QC assigned p-value log fold change estimate NA. output_amount set 2, following additional columns returned: stage: stage p-value computed, one 1, 2, 3 (See Notes) z_orig: original z-score computed raw data xi, omega, alpha: fitted parameters skew-normal distribution. (columns set NA parametric curve fitted null distribution test statistics.) output_amount set 3, resampling distribution test statistics also returned, stored columns z_null_1, z_null_2, z_null_3, ... .","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_highmoi_experimental.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run sceptre (high MOI; experimental) — run_sceptre_highmoi_experimental","text":"typical sceptre analysis consists three main steps. First, user sets analysis, entails specifying () response expression matrix, (ii) gRNA expression matrix, (iii) cell covariate data frame, (iv) gRNA group data frame, (v) formula object, (vi) set response-gRNA group pairs test association. Second, user carries calibration check passing objects function run_sceptre, setting calibration_check TRUE. carrying calibration check, sceptre automatically constructs set negative control response-gRNA group pairs test association; pairs \"matched\" discovery pairs several respects. user verifies calibration negative control p-values plotting calibration results via plot_calibration_result. Finally, user runs discovery analysis calling function run_sceptre, time setting calibration_check FALSE. user visualizes discovery results via calls compare_calibration_and_discovery_results make_volcano_plot obtains final set discoveries via call obtain_discovery_set.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_highmoi_experimental.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Run sceptre (high MOI; experimental) — run_sceptre_highmoi_experimental","text":"notes arranged roughly order important least important. function compute_cell_covariates can used help compute covariate_data_frame, function generate_all_pairs can used help compute response_grna_group_pairs. constructing formula_object, best practice log-transform integer count-based variables (e.g., total UMI count, number expressed responses). default, sceptre assigns gRNAs cells users. Users instead may assign gRNAs cells , passing logical (.e., TRUE/FALSE)  grna_matrix sceptre. logical matrix standard (dense) R matrix sparse matrix type lgCMatrix, lgRMatrix, lgTMatrix. low MOI column contain single TRUE value, indicates gRNA infected given cell. sceptre tests given pair association three stages. First, sceptre computes B1 null statistics calculates initial empirical p-value p1 using null statistics. p1 promising (.e., p1 < 0.02), sceptre proceeds stage 2; otherwise, sceptre returns p1. stage 2, sceptre computes B2 null statistics fits parametric curve (default, skew normal distribution) null statistics. fit parametric curve good, sceptre returns p2. Otherwise, sceptre proceeds stage 3. stage 3, sceptre computes B3 null statistics calculates empirical p-value p3 using null statistics. sceptre returns p3. resampling_mechanism set \"crt\" (default high MOI data), stage 3 empirical p-value computed using null test statistics stage 2 (save compute).","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_highmoi_experimental.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run sceptre (high MOI; experimental) — run_sceptre_highmoi_experimental","text":"","code":"if (FALSE) { library(Matrix)  # 0. load the data data(response_matrix_highmoi_experimental)       # response-by-cell expression matrix data(grna_matrix_highmoi_experimental)           # gRNA-by-cell expression matrix data(covariate_data_frame_highmoi_experimental)  # cell-by-covariate data frame data(grna_group_data_frame_highmoi_experimental) # gRNA group information data(discovery_pairs_highmoi_experimental)       # discovery gRNA group / gene pairs  # 1. set the formula object formula_object <- formula(~log(grna_n_umis) + log(grna_n_nonzero) + log(gene_n_umis) + log(gene_n_nonzero) + batch + p_mito)  # 2. run the calibration check calibration_result <- run_sceptre_highmoi_experimental(   response_matrix = response_matrix_highmoi_experimental,   grna_matrix = grna_matrix_highmoi_experimental,   covariate_data_frame = covariate_data_frame_highmoi_experimental,   grna_group_data_frame = grna_group_data_frame_highmoi_experimental,   response_grna_group_pairs = discovery_pairs_highmoi_experimental,   formula_object = formula_object,   side = \"left\",   calibration_check = TRUE )  # 3. verify calibration plot_calibration_result(calibration_result)  # 4. run discovery analysis discovery_result <- run_sceptre_highmoi_experimental(   response_matrix = response_matrix_highmoi_experimental,   grna_matrix = grna_matrix_highmoi_experimental,   covariate_data_frame = covariate_data_frame_highmoi_experimental,   grna_group_data_frame = grna_group_data_frame_highmoi_experimental,   response_grna_group_pairs = discovery_pairs_highmoi_experimental,   formula_object = formula_object,   side = \"left\",   calibration_check = FALSE )  # 5. compare discovery p-values to the negative control p-values; make a volcano plot compare_calibration_and_discovery_results(calibration_result, discovery_result) make_volcano_plot(discovery_result)  # 6. obtain the discovery set discovery_set <- obtain_discovery_set(discovery_result)  # 7. optional: positive control analysis pc_result <- run_sceptre_highmoi_experimental(   response_matrix = response_matrix_highmoi_experimental,   grna_matrix = grna_matrix_highmoi_experimental,   covariate_data_frame = covariate_data_frame_highmoi_experimental,   grna_group_data_frame = grna_group_data_frame_highmoi_experimental,   response_grna_group_pairs = pc_pairs_highmoi_experimental,   formula_object = formula_object,   side = \"left\",   calibration_check = FALSE ) }"},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_lowmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Run sceptre (low MOI) — run_sceptre_lowmoi","title":"Run sceptre (low MOI) — run_sceptre_lowmoi","text":"Applies sceptre analyze single-cell CRISPR screen dataset.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_lowmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run sceptre (low MOI) — run_sceptre_lowmoi","text":"","code":"run_sceptre_lowmoi(   response_matrix,   grna_matrix,   covariate_data_frame,   grna_group_data_frame,   response_grna_group_pairs,   formula_object,   calibration_check,   control_group = \"nt_cells\",   resampling_mechanism = \"permutations\",   n_nonzero_trt_thresh = 7L,   n_nonzero_cntrl_thresh = 7L,   side = \"both\",   output_amount = 1L,   fit_parametric_curve = TRUE,   calibration_group_size = NULL,   n_calibration_pairs = NULL,   B1 = 499L,   B2 = 4999L,   B3 = 24999L,   print_progress = TRUE )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_lowmoi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run sceptre (low MOI) — run_sceptre_lowmoi","text":"response_matrix (required) matrix raw expression counts. responses (e.g., genes proteins) rows, cells columns. row names unique IDs responses. matrix can standard (dense) matrix sparse matrix class dgCMatrix, dgRMatrix, dgTMatrix. grna_matrix (required) matrix gRNA expression counts. gRNAs rows, cells columns. row names unique IDs gRNAs. matrix can standard (dense) matrix sparse matrix class dgCMatrix, dgRMatrix, dgTMatrix. (See \"Notes\" details passing gRNA matrix containing user-specified gRNA--cell assignments.) covariate_data_frame (required) data frame containing cell-specific covariates (e.g., sequencing batch, total UMI count, etc.), cells rows covariates columns. grna_group_data_frame (required) data frame specifying \"group\" individual gRNA belongs. data frame contain columns grna_id grna_group, grna_group specifying group membership given gRNA grna_id column. Typically, gRNAs target site grouped gRNA group. Non-targeting gRNAs (present) assigned gRNA group label \"non-targeting\". response_grna_group_pairs (required) data frame specifying set response-gRNA group pairs test association. data frame contain columns response_id grna_group. formula_object (required) R formula object specifying adjust covariates covariate_data_frame. calibration_check (required) logical (.e., TRUE/FALSE) value indicating whether run calibration check (TRUE) discovery analysis (FALSE). See \"Details\" section complete description calibration discovery analyses. control_group (optional; moderate importance; default depends MOI) set cells cells received given targeting gRNA group compared, either \"complement\" (complement set) \"nt\" (cells containing non-targeting gRNA). valid option high MOI data \"complement\", () cells contain exclusively non-targeting gRNAs high MOI. default low MOI data \"nt\". resampling_mechanism (optional; moderate importance; default depends MOI) resampling mechanism used carry inference, either \"crt\" (conditional randomization test) \"permutations\" (permutation test). default use \"crt\" high MOI \"permutations\" low MOI. n_nonzero_trt_thresh (optional; moderate importance; default 7) given response-gRNA group pair, n_nonzero_trt number \"treatment cells\" (.e., cells received given targeting gRNA group) nonzero expression. sceptre filters response-gRNA group pairs n_nonzero_trt value equal greater n_nonzero_trt_thresh. n_nonzero_cntrl_thresh (optional; moderate importance; default 7) given response-gRNA group pair, n_nonzero_cntrl number \"control cells\" (.e., cells treatment cells compared) nonzero expression. sceptre filters pairs n_nonzero_control value equal greater n_nonzero_control_thresh. side (optional; moderate importance; default \"\") sidedness test, either two-sided (\"\"), left-tailed (\"left\"), right-tailed (\"right\"). output_amount (optional; lower importance; default 1) integer specifying amount information return part output, either 1 (least), 2 (intermediate), 3 (). (See \"Value\".) fit_parametric_curve (optional; moderate importance; default TRUE) logical (.e., TRUE/FALSE) indicating whether fit parametric curve distribution null test statistics compute p-value using fitted parametric curve. Setting argument TRUE (default) enables sceptre return small p-values. calibration_group_size (optional; lower importance; default NULL) number NT gRNAs assign negative control gRNA group calibration check. default, calibration_group_size set equal median group size targeting gRNA groups. n_calibration_pairs (optional; lower importance; default NULL) number negative control pairs analyze calibration check. default, argument set equal number discovery pairs (.e., pairs specified data frame response_grna_group_pairs) passes pairwise QC. B1 (optional; lower importance; default 499) number null test statistics compute first stage permutation test. B2 (optional; lower importance; default 4999) number null test statistics compute second stage permutation test. B3 (optional; lower importance; default 24999) number null test statistics compute third stage permutation test. print_progress (optional; lower importance; default TRUE) logical (.e., TRUE/FALSE value) indicating whether print progress function.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_lowmoi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run sceptre (low MOI) — run_sceptre_lowmoi","text":"data frame containing following columns: response_id, grna_group, n_nonzero_trt, n_nonzero_cntrl, p_value. response_id: ID response grna_group: gRNA group response tested. running calibration check, grna_group negative control gRNA group constructed grouping together individual NT gRNAs. running discovery analysis, contrast, grna_group targeting gRNA group. n_nonzero_trt: number treatment cells (.e., cells received targeting gRNA) nonzero expression n_nonzero_cntrl: number control cells (.e., cells received non-targeting gRNA) nonzero expression p_value: sceptre p-value log_2_fold_change: sceptre-estimated log (base 2) fold change expression, controlling covariates Rows ordered according p_value. Response-gRNA group pairs fail pass pairwise QC assigned p-value log fold change estimate NA. output_amount set 2, following additional columns returned: stage: stage p-value computed, one 1, 2, 3 (See Notes) z_orig: original z-score computed raw data xi, omega, alpha: fitted parameters skew-normal distribution. (columns set NA parametric curve fitted null distribution test statistics.) output_amount set 3, resampling distribution test statistics also returned, stored columns z_null_1, z_null_2, z_null_3, ... .","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_lowmoi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run sceptre (low MOI) — run_sceptre_lowmoi","text":"typical sceptre analysis consists three main steps. First, user sets analysis, entails specifying () response expression matrix, (ii) gRNA expression matrix, (iii) cell covariate data frame, (iv) gRNA group data frame, (v) formula object, (vi) set response-gRNA group pairs test association. Second, user carries calibration check passing objects function run_sceptre, setting calibration_check TRUE. carrying calibration check, sceptre automatically constructs set negative control response-gRNA group pairs test association; pairs \"matched\" discovery pairs several respects. user verifies calibration negative control p-values plotting calibration results via plot_calibration_result. Finally, user runs discovery analysis calling function run_sceptre, time setting calibration_check FALSE. user visualizes discovery results via calls compare_calibration_and_discovery_results make_volcano_plot obtains final set discoveries via call obtain_discovery_set.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_lowmoi.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Run sceptre (low MOI) — run_sceptre_lowmoi","text":"notes arranged roughly order important least important. function compute_cell_covariates can used help compute covariate_data_frame, function generate_all_pairs can used help compute response_grna_group_pairs. constructing formula_object, best practice log-transform integer count-based variables (e.g., total UMI count, number expressed responses). default, sceptre assigns gRNAs cells users. Users instead may assign gRNAs cells , passing logical (.e., TRUE/FALSE)  grna_matrix sceptre. logical matrix standard (dense) R matrix sparse matrix type lgCMatrix, lgRMatrix, lgTMatrix. low MOI column contain single TRUE value, indicates gRNA infected given cell. sceptre tests given pair association three stages. First, sceptre computes B1 null statistics calculates initial empirical p-value p1 using null statistics. p1 promising (.e., p1 < 0.02), sceptre proceeds stage 2; otherwise, sceptre returns p1. stage 2, sceptre computes B2 null statistics fits parametric curve (default, skew normal distribution) null statistics. fit parametric curve good, sceptre returns p2. Otherwise, sceptre proceeds stage 3. stage 3, sceptre computes B3 null statistics calculates empirical p-value p3 using null statistics. sceptre returns p3. resampling_mechanism set \"crt\" (default high MOI data), stage 3 empirical p-value computed using null test statistics stage 2 (save compute).","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/run_sceptre_lowmoi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run sceptre (low MOI) — run_sceptre_lowmoi","text":"","code":"if (FALSE) { library(Matrix)  # 0. load the data associated with the experiment data(response_matrix_lowmoi) # response-by-cell expression matrix data(grna_matrix_lowmoi) # gRNA-by-cell expression matrix data(covariate_data_frame_lowmoi) # cell-by-covariate data frame data(grna_group_data_frame_lowmoi) # gRNA group information  # 1. obtain the set of pairs to analyze response_grna_group_pairs <- generate_all_pairs(response_matrix_lowmoi, grna_group_data_frame_lowmoi)  # 2. set the formula object formula_object <- formula(~log(response_n_umis) + log(response_n_nonzero) + bio_rep + p_mito)  # 3. run the calibration check analysis (NOTE: calibration_check set to TRUE) calibration_result <- run_sceptre_lowmoi(response_matrix = response_matrix_lowmoi, grna_matrix = grna_matrix_lowmoi, covariate_data_frame = covariate_data_frame_lowmoi, grna_group_data_frame = grna_group_data_frame_lowmoi, formula_object = formula_object, response_grna_group_pairs = response_grna_group_pairs, calibration_check = TRUE)  # 4. plot the calibration result to ensure adequate calibration plot_calibration_result(calibration_result)  # 5. run the discovery analysis (NOTE: calibration_check set to FALSE) discovery_result <- run_sceptre_lowmoi(response_matrix = response_matrix_lowmoi, grna_matrix = grna_matrix_lowmoi, covariate_data_frame = covariate_data_frame_lowmoi, grna_group_data_frame = grna_group_data_frame_lowmoi, formula_object = formula_object, response_grna_group_pairs = response_grna_group_pairs, calibration_check = FALSE)  # 6. compare discovery p-values to the negative control p-values; make a volcano plot compare_calibration_and_discovery_results(calibration_result, discovery_result) make_volcano_plot(discovery_result)  # 7. obtain the discovery set for downstream analysis discovery_set <- obtain_discovery_set(discovery_result) }"},{"path":"https://katsevich-lab.github.io/sceptre/reference/sceptre.html","id":null,"dir":"Reference","previous_headings":"","what":"sceptre — sceptre","title":"sceptre — sceptre","text":"sceptre R package single-cell CRISPR screen data analysis emphasizes statistical rigor, computational efficiency, ease use.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/sceptre.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sceptre — sceptre","text":"","code":"if (FALSE) { ########################## # Low-MOI CRISPRko example ########################## # 1. create the sceptre object data(\"lowmoi_example_data\") sceptre_object <- import_data( response_matrix = lowmoi_example_data$response_matrix, grna_matrix = lowmoi_example_data$grna_matrix, extra_covariates = lowmoi_example_data$extra_covariates, grna_target_data_frame = lowmoi_example_data$grna_target_data_frame, moi = \"low\") print(sceptre_object)  # 2. set the analysis parameters positive_control_pairs <- construct_positive_control_pairs(sceptre_object) discovery_pairs <- construct_trans_pairs(sceptre_object = sceptre_object, positive_control_pairs = positive_control_pairs, pairs_to_exclude = \"pc_pairs\")  sceptre_object <- set_analysis_parameters( sceptre_object = sceptre_object, discovery_pairs = discovery_pairs, positive_control_pairs = positive_control_pairs) print(sceptre_object)  # 3. assign grnas plot_grna_count_distributions(sceptre_object) sceptre_object <- sceptre_object |> assign_grnas() plot(sceptre_object) print(sceptre_object)  # 4. run qc plot_covariates(sceptre_object) sceptre_object <- sceptre_object |> run_qc(p_mito_threshold = 0.075) plot(sceptre_object) print(sceptre_object)  # 5. run the calibration check sceptre_object <- run_calibration_check(sceptre_object, parallel = TRUE) plot(sceptre_object) print(sceptre_object)  # 6. run power check sceptre_object <- run_power_check(sceptre_object, parallel = TRUE) plot(sceptre_object) print(sceptre_object)  # 7. run discovery analysis sceptre_object <- run_discovery_analysis(sceptre_object, parallel = TRUE) plot(sceptre_object) print(sceptre_object)  # 8. write results write_outputs_to_directory(sceptre_object = sceptre_object, \"~/sceptre_outputs_lowmoi/\")  ########################## # High-MOI CRISPRi example ########################## # 1. create the sceptre object from cellranger output directories <- paste0(system.file(\"extdata\", package = \"sceptre\"), \"/highmoi_example/gem_group_\", 1:2) data(grna_target_data_frame_highmoi) sceptre_object <- import_data_from_cellranger(directories = directories, moi = \"high\", grna_target_data_frame = grna_target_data_frame_highmoi) print(sceptre_object)  # 2. set the analysis parameters positive_control_pairs <- construct_positive_control_pairs(sceptre_object) discovery_pairs <- construct_cis_pairs(sceptre_object, positive_control_pairs = positive_control_pairs, distance_threshold = 5e6)  sceptre_object <- set_analysis_parameters( sceptre_object = sceptre_object, discovery_pairs = discovery_pairs, positive_control_pairs = positive_control_pairs, side = \"left\") print(sceptre_object)  # 3. assign grnas plot_grna_count_distributions(sceptre_object) sceptre_object <- sceptre_object |> assign_grnas(parallel = TRUE) plot(sceptre_object) print(sceptre_object)  # 4. run qc plot_covariates(sceptre_object) sceptre_object <- sceptre_object |> run_qc(p_mito_threshold = 0.075) plot(sceptre_object) print(sceptre_object)  # 5. run the calibration check sceptre_object <- run_calibration_check(sceptre_object, parallel = TRUE) plot(sceptre_object) print(sceptre_object)  # 6. run the power check sceptre_object <- run_power_check(sceptre_object, parallel = TRUE) plot(sceptre_object) print(sceptre_object)  # 7. run discovery analysis sceptre_object <- run_discovery_analysis(sceptre_object, parallel = TRUE) plot(sceptre_object) print(sceptre_object)  # 8. write results write_outputs_to_directory(sceptre_object = sceptre_object, \"~/sceptre_outputs_highmoi/\") }"},{"path":"https://katsevich-lab.github.io/sceptre/reference/set_analysis_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Set analysis parameters — set_analysis_parameters","title":"Set analysis parameters — set_analysis_parameters","text":"set_analysis_parameters() sets analysis parameters control statistical analysis conducted. See Chapter 2 manual detailed information function.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/set_analysis_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set analysis parameters — set_analysis_parameters","text":"","code":"set_analysis_parameters(   sceptre_object,   discovery_pairs,   positive_control_pairs = data.frame(grna_target = character(0), response_id =     character(0)),   side = \"both\",   grna_integration_strategy = \"union\",   formula_object = \"default\",   fit_parametric_curve = TRUE,   control_group = \"default\",   resampling_mechanism = \"default\",   multiple_testing_method = \"BH\",   multiple_testing_alpha = 0.1 )"},{"path":"https://katsevich-lab.github.io/sceptre/reference/set_analysis_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set analysis parameters — set_analysis_parameters","text":"sceptre_object sceptre_object discovery_pairs data frame columns grna_target response_id specifying discovery pairs analyze positive_control_pairs (optional) data frame columns grna_target response_id specifying positive control pairs analyze side (optional; default \"\") sidedness test, one \"left\", \"right\", \"\" grna_integration_strategy (optional; default \"union\") string specifying gRNA integration strategy, either \"singleton\" \"union\" formula_object (optional) formula object specifying adjust covariates model fit_parametric_curve (optional; default TRUE) logical indicating whether fit parametric curve null distribution test statistics control_group (optional) string specifying control group use, either \"complement\" \"nt_cells\" resampling_mechanism (optional) string specifying resampling mechanism use, either \"permutations\" \"crt\" multiple_testing_method (optional; default \"BH\") string specifying multiple testing correction method use; see p.adjust.methods options multiple_testing_alpha (optional; default 0.1) numeric specifying nominal level multiple testing correction method","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/set_analysis_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set analysis parameters — set_analysis_parameters","text":"updated sceptre_object analysis parameters set","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/set_analysis_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set analysis parameters — set_analysis_parameters","text":"","code":"# see example via ?sceptre"},{"path":"https://katsevich-lab.github.io/sceptre/reference/threshold_gRNA_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Threshold gRNA count matrix — threshold_gRNA_matrix","title":"Threshold gRNA count matrix — threshold_gRNA_matrix","text":"Thresholds gRNA count matrix, producing perturbation matrix.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/threshold_gRNA_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Threshold gRNA count matrix — threshold_gRNA_matrix","text":"","code":"threshold_gRNA_matrix(gRNA_matrix, threshold = 3)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/threshold_gRNA_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Threshold gRNA count matrix — threshold_gRNA_matrix","text":"gRNA_matrix gRNA--cell expression matrix; matrix can represented sparse matrix (implemented Matrix package) dense matrix (implemented base R) threshold threshold used assign perturbation indicators cells; counts threshold set 1 (indicating \"perturbed\"), counts threshold set 0 (indicating \"unperturbed\")","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/threshold_gRNA_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Threshold gRNA count matrix — threshold_gRNA_matrix","text":"binary matrix perturbation assignments","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/threshold_gRNA_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Threshold gRNA count matrix — threshold_gRNA_matrix","text":"","code":"data(gRNA_matrix_highmoi) gRNA_matrix <- gRNA_matrix_highmoi perturbation_matrix <- threshold_gRNA_matrix(gRNA_matrix)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/write_outputs_to_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Write outputs to directory — write_outputs_to_directory","title":"Write outputs to directory — write_outputs_to_directory","text":"write_outputs_to_directory() writes outputs sceptre analysis directory disk. See Section 8 introductory chapter manual information function.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/reference/write_outputs_to_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write outputs to directory — write_outputs_to_directory","text":"","code":"write_outputs_to_directory(sceptre_object, directory)"},{"path":"https://katsevich-lab.github.io/sceptre/reference/write_outputs_to_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write outputs to directory — write_outputs_to_directory","text":"sceptre_object sceptre_object directory string giving file path directory disk write results","code":""},{"path":"https://katsevich-lab.github.io/sceptre/news/index.html","id":"sceptre-091-2023-10-24","dir":"Changelog","previous_headings":"","what":"sceptre 0.9.1 (2023-10-24)","title":"sceptre 0.9.1 (2023-10-24)","text":"Version 0.9.1 minor update version 0.9.0. added experimental import_data_from_parse() function import data output Parse Biosciences CRISPR Detect. added support \"bonferroni\" gRNA integration strategy.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/news/index.html","id":"sceptre-090-2023-10-20","dir":"Changelog","previous_headings":"","what":"sceptre 0.9.0 (2023-10-20)","title":"sceptre 0.9.0 (2023-10-20)","text":"Version 0.9.0 total rework sceptre package. new version package fresh user interface faster, memory-efficient, fully featured previous versions. summarize key updates . added sceptre_object class represent single-cell CRISPR screen data. unified low-MOI high-MOI analysis single interface. written manual guide users entire process analyzing single-cell CRISPR screen data. added new mixture model method assigning gRNAs cells principled way. made experimental high-MOI functionality (version 0.3.0) default functionality high-MOI analysis. added functionality carry cell-wise QC. Mac Linux users now can run sceptre parallel. added suite plotting functions help users visualize output different steps sceptre pipeline. added helper functions facilitate construction cis trans discovery sets. added function import data sceptre output one calls CellRanger count.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/news/index.html","id":"sceptre-030-2023-07-13","dir":"Changelog","previous_headings":"","what":"sceptre 0.3.0 (2023-07-13)","title":"sceptre 0.3.0 (2023-07-13)","text":"Version 0.3.0 introduces new, experimental high MOI function. expect experimental high MOI function faster, memory efficient, powerful current high MOI function datasets. current high MOI function likely deprecated next version package favor experimental function. Please let us know experience using experimental high MOI function, particular whether run bugs. also added new plotting function, namely plot_resampling_distribution. Small changes API run_sceptre_lowmoi function detailed function documentation.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/news/index.html","id":"sceptre-020-2023-04-03","dir":"Changelog","previous_headings":"","what":"sceptre 0.2.0 (2023-04-03)","title":"sceptre 0.2.0 (2023-04-03)","text":"Version 0.2.0 biggest update yet. added functionality low MOI analysis! low MOI module based new statistical methods computational algorithms.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/news/index.html","id":"sceptre-010-2022-03-10","dir":"Changelog","previous_headings":"","what":"sceptre 0.1.0 (2022-03-10)","title":"sceptre 0.1.0 (2022-03-10)","text":"Version 0.1.0 major update sceptre. Usability speed improved considerably.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/news/index.html","id":"usability-0-1-0","dir":"Changelog","previous_headings":"","what":"Usability","title":"sceptre 0.1.0 (2022-03-10)","text":"function run_sceptre_gRNA_gene_pair, redundant, now deprecated. run_sceptre_high_moi(previously called run_sceptre_in_memory) simpler use: function now four required arguments: gene_matrix (previously called expression_matrix), gRNA_matrix (previously called expression_matrix), covariate_matrix, gene_gRNA_pairs. formerly required arguments storage_dir side now set tempdir() “” default. Additionally, argument pod_sizes removed entirely (handled internally). run_sceptre_high_moi additional optional arguments full_output parallel. full_output controls complexity data frame outputted method. full_output set FALSE (default), run_sceptre_high_moi outputs data frame four columns , easy interpret: gene_id, gRNA_id, p_value, z_value. parallel controls whether function parallelized (TRUE; default) (FALSE). run_sceptre_high_moi now accepts raw (.e., unthresholded) gRNA matrix user-thresholded gRNA matrix. new auxiliary function combine_gRNAs combines gRNAs target chromosomal site. Numerous checks added run_sceptre_high_moi ensure input valid. example, run_sceptre_high_moi checks gene IDs gRNA IDs gene_gRNA_pairs fact subsets row names gene_matrix gRNA_matrix, respectively.","code":""},{"path":"https://katsevich-lab.github.io/sceptre/news/index.html","id":"speed-0-1-0","dir":"Changelog","previous_headings":"","what":"Speed","title":"sceptre 0.1.0 (2022-03-10)","text":"Two accelerations implemented improve speed. accelerations affect API package. First, test statistic used conditional randomization test changed. Previously, test statistic z-score derived Wald test fitted negative binomial GLM. Now, test statistic z-score derived score test negative binomial GLM, asymptotically equivalent former robust finite samples. Additionally, score test-based z-score computed via explicit formula, sidestepping need fit GLM, done previously. Overall, new test statistic faster compute robust previous test statistic. synthetic perturbation indicators now generated part gRNA precomputation, factoring somewhat time-intensive step pairwise tests association.","code":""},{"path":[]}]
