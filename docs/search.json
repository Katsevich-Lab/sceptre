[{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"timothy-barry.github.io/sceptre/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"timothy-barry.github.io/sceptre/articles/highmoi_tutorial.html","id":"step-1-prepare-the-data","dir":"Articles","previous_headings":"","what":"Step 1: Prepare the data","title":"High MOI sceptre tutorial","text":"first step prepare data pass sceptre. must prepare three separate data objects: gene--cell expression matrix, gRNA--cell expression matrix, cell-specific matrix covariates.","code":""},{"path":"timothy-barry.github.io/sceptre/articles/highmoi_tutorial.html","id":"gene-and-grna-expression-matrices","dir":"Articles","previous_headings":"Step 1: Prepare the data","what":"Gene and gRNA expression matrices","title":"High MOI sceptre tutorial","text":"load example gene--cell gRNA--cell expression matrices included sceptre package. Briefly, gene_matrix (respectively, gRNA_matrix) 20 x 40,000 (respectively, 50 x 40,000) matrix gene (respectively, gRNA) unique molecular identifier (UMI) counts. data taken paper “genome-wide framework mapping gene regulation via cellular genetic screens” Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data. One can use commands ?gene_matrix ?gRNA_matrix read data. row names gene_matrix gRNA_matrix gene IDs gRNA IDs, respectively. gRNA IDs gRNA-specific oligonucleotide barcodes. general gRNA IDs must strings uniquely identify gRNA. column names, meanwhile, cell barcodes. Next, gene_matrix gRNA_matrix sparse matrices (implemented Matrix package). general matrices can either sparse matrices standard (dense) R matrices. print rows columns gene_matrix gRNA_matrix get sense data look like. also plot histogram counts arbitrarily selected gene (“ENSG00000111057”) gRNA (“TGTCAGTCCTCCCTCCCCCA”) visualize data.  expected, data highly discrete counts. Note normalize either gene gRNA expression matrices, opting instead work directly raw counts.","code":"data(gene_matrix_highmoi) gene_matrix <- gene_matrix_highmoi data(gRNA_matrix_highmoi) gRNA_matrix <- gRNA_matrix_highmoi options(width = 300) # gene_matrix; rows are genes, columns are cells gene_matrix[1:10, 1:3] #> 10 x 3 sparse Matrix of class \"dgTMatrix\" #>                 CTCGAAAGTCCATGAT-1_2B_7 GACACGCTCAAAGACA-1_2B_4 GGCTCGATCTGTGCAA-1_1B_1 #> ENSG00000111057                       1                       5                       1 #> ENSG00000121211                       .                       1                       . #> ENSG00000134809                       3                      10                       1 #> ENSG00000166902                       1                       3                       . #> ENSG00000172809                      12                      19                      33 #> ENSG00000105298                       .                       .                       . #> ENSG00000108389                       .                       1                       . #> ENSG00000157985                       .                       .                       . #> ENSG00000107731                       .                       .                       . #> ENSG00000184357                       .                       1                       .  # gRNA matrix; rows are gRNAs, columns are cells gRNA_matrix[1:10, 1:3] #> 10 x 3 sparse Matrix of class \"dgTMatrix\" #>                      CTCGAAAGTCCATGAT-1_2B_7 GACACGCTCAAAGACA-1_2B_4 GGCTCGATCTGTGCAA-1_1B_1 #> TGTCAGTCCTCCCTCCCCCA                       .                       .                       . #> CTAAACAGTGAAAGTCACAG                       .                       .                       . #> GCTCCAATCATATTCTAGAG                       .                       .                       . #> GATGAAACCTAAGGGCACAC                       .                       .                       . #> TGCAGACGAGTGTCTCAGAG                       .                       .                       . #> TCATCTTGAAGTCAGCTCCA                       .                       .                       3 #> GAGAATGGCATGGAGCTCAA                       .                       .                       . #> AGAGCAAGAGAGCAACTCCG                       .                       .                       . #> CAGCAATTCTACCTTCAGGT                       .                       .                       . #> TTTGGTTGTTGCAAATGAGG                       .                       .                       . example_gene <- gene_matrix[\"ENSG00000111057\",] example_gRNA <- gRNA_matrix[\"TGTCAGTCCTCCCTCCCCCA\",]  hist_gene <- ggplot(data = tibble(count = example_gene) |> dplyr::filter(count >= 1, count <= 40), mapping = aes(x = count)) +   geom_histogram(binwidth = 3, col = \"black\", fill = \"dodgerblue3\", alpha = 0.7) +   scale_y_continuous(trans='log10', expand = c(0, NA)) + xlab(\"Gene expressions\") + ylab(\"\") + theme_bw(base_size = 10)  hist_gRNA <- ggplot(data = tibble(count = example_gRNA) |> dplyr::filter(count >= 1, count <= 40), mapping = aes(x = count)) +   geom_histogram(binwidth = 3, col = \"black\", fill = \"orchid4\", alpha = 0.7) +   scale_y_continuous(trans='log10', expand = c(0, NA)) + xlab(\"gRNA expressions\") + ylab(\"\") + theme_bw(base_size = 10)  plot_grid(hist_gene, hist_gRNA, labels = c(\"a\", \"b\"))"},{"path":"timothy-barry.github.io/sceptre/articles/highmoi_tutorial.html","id":"cell-wise-covariate-matrix","dir":"Articles","previous_headings":"Step 1: Prepare the data","what":"Cell-wise covariate matrix","title":"High MOI sceptre tutorial","text":"Next, load cell-wise covariate matrix, covariate_matrix. covariate_matrix 40,000 x 4 data frame “technical factors,” covariates. row names data frame cell barcodes. covariates follows: Log-transformed gene library size (lg_gene_lib_size); vector can computed via log(colSums(gene_matrix)) Log-transformed gRNA library size (lg_gRNA_lib_size); vector can computed via log(colSums(gRNA_matrix)) Sequencing batch (batch) Percentage gene transcripts map mitochondrial genes (p_mito) strongly recommend users include four covariates (.e., lg_gene_lib_size, lg_gRNA_lib_size, batch, p_mito) cell-wise covariate matrix.","code":"data(covariate_matrix_highmoi) covariate_matrix <- covariate_matrix_highmoi head(covariate_matrix) #>                         lg_gRNA_lib_size lg_gene_lib_size     p_mito        batch #> CTCGAAAGTCCATGAT-1_2B_7         6.023448         9.276783 0.03861979 prep_batch_2 #> GACACGCTCAAAGACA-1_2B_4         6.561031        10.274982 0.04499379 prep_batch_2 #> GGCTCGATCTGTGCAA-1_1B_1         8.196988         9.744375 0.02460745 prep_batch_1 #> CTGGTCTGTGGGTATG-1_2B_7         5.929589         9.260368 0.03326996 prep_batch_2 #> TCTGGAAGTACATGTC-1_2A_5         7.134094        10.002880 0.07319942 prep_batch_2 #> AACTGGTGTAGAGCTG-1_1A_4         5.655992         8.875567 0.01327186 prep_batch_1"},{"path":"timothy-barry.github.io/sceptre/articles/highmoi_tutorial.html","id":"step-2-assign-perturbation-identities-to-cells","dir":"Articles","previous_headings":"","what":"Step 2: Assign perturbation identities to cells","title":"High MOI sceptre tutorial","text":"second step impute perturbation assignments onto cells. given gRNA cell, label cell perturbed gRNA UMI count gRNA within cell exceeds user-specified, integer-valued threshold; otherwise, label cell unperturbed gRNA. default threshold use purpose 3, found work well practice. simple thresholding routine implemented function threshold_gRNA_matrix. Note: draw terminological distinction “gRNA count” “perturbation.” “gRNA count” number transcripts (UMIs) observe given gRNA given cell; “perturbation” assignment gRNA cell, obtained thresholding gRNA count. “perturbation matrix” binary matrix gRNA--cell assignments. Note: Step 2 optional; users instead can pass raw gRNA count matrix sceptre function, case matrix thresholded internally produce perturbation matrix. (option, though convenient, precludes possibility combining gRNAs thus recommended; see .) Note: Users optionally can implement strategy converting gRNA count matrix perturbation matrix.","code":"perturbation_matrix <- threshold_gRNA_matrix(gRNA_matrix)  # `perturbation_matrix` is a thresholded version of `gRNA_matrix` perturbation_matrix[1:10, 1:3] #> 10 x 3 sparse Matrix of class \"lgTMatrix\" #>                      CTCGAAAGTCCATGAT-1_2B_7 GACACGCTCAAAGACA-1_2B_4 GGCTCGATCTGTGCAA-1_1B_1 #> TGTCAGTCCTCCCTCCCCCA                       .                       .                       . #> CTAAACAGTGAAAGTCACAG                       .                       .                       . #> GCTCCAATCATATTCTAGAG                       .                       .                       . #> GATGAAACCTAAGGGCACAC                       .                       .                       . #> TGCAGACGAGTGTCTCAGAG                       .                       .                       . #> TCATCTTGAAGTCAGCTCCA                       .                       .                       | #> GAGAATGGCATGGAGCTCAA                       .                       .                       . #> AGAGCAAGAGAGCAACTCCG                       .                       .                       . #> CAGCAATTCTACCTTCAGGT                       .                       .                       . #> TTTGGTTGTTGCAAATGAGG                       .                       .                       ."},{"path":"timothy-barry.github.io/sceptre/articles/highmoi_tutorial.html","id":"step-3-combine-perturbations","dir":"Articles","previous_headings":"","what":"Step 3: Combine perturbations","title":"High MOI sceptre tutorial","text":"third step combine gRNAs target chromosomal location. Information genomic position gRNA targets available gRNA_groups_table, explore . gRNA_groups_table data frame three columns: gRNA_id: ID individual gRNA gRNA_group: “group” given gRNA belongs. Gasperini et al. designed exactly two gRNAs target putative enhancer TSS; gRNAs target putative enhancer TSS paired form groups size two. Nontargeting gRNAs, meanwhile, paired randomly, also forming groups size two. Note general, gRNA group can contain nonzero number gRNAs. target_type: one enh_target, tss_target, non_target, indicating whether given gRNA enhancer-targeting, TSS-targeting, non-targeting. example, gRNAs “GCTCTTGGCTGGAGAATGCA” “GTTGCAGATGAGGCAACCGA” target putative enhancer located chr10.1318 grouped. Similarly, gRNAs “CCCGCGCGCCGCACGGACGG” “GCGGATCGGGGCAAGGCTCG” target TSS gene HDGF grouped. Finally, non-targeting gRNAs “AATATTCTCCCTCATTCTGG” “TTAAAATTGATTCTGCCACT” paired randomly form group called “NTC_2.” function combine_perturbations takes arguments perturbation_matrix (.e., thresholded gRNA_matrix) gRNA_groups_table collapses gRNAs group single “combined” gRNA. data frame gRNA_groups_table must columns gRNA_id gRNA_group, . ouput matrix, combined_perturbation_matrix, 25 x 40,000 binary matrix, rows corresponding 25 “gRNA groups” within gRNA_groups_table. column names (.e., cell barcodes) remain unchanged. Note: Step 3 optional recommended; sceptre works either combined uncombined perturbation matrices. Note: gRNA_type column gRNA_groups_table optional useful bookkeeping purposes.","code":"data(gRNA_groups_table_highmoi) gRNA_groups_table <- gRNA_groups_table_highmoi gRNA_groups_table[c(1, 2, 31, 32, 41, 42),]  #> # A tibble: 6 × 3 #>   gRNA_id              gRNA_group gRNA_type  #>   <chr>                <chr>      <chr>      #> 1 TGTCAGTCCTCCCTCCCCCA chr10.2250 enh_target #> 2 CTAAACAGTGAAAGTCACAG chr10.2250 enh_target #> 3 AGAGGTAACCAAAATAGCAA NTC_2      non_target #> 4 ATATGTAACCTCCAGAATGA NTC_2      non_target #> 5 CAGGCTTTGCGGACGACGGG KRT18_TSS  tss_target #> 6 GCTTTGCGGACGACGGTGGG KRT18_TSS  tss_target gRNA_groups_table[1:2,] #> # A tibble: 2 × 3 #>   gRNA_id              gRNA_group gRNA_type  #>   <chr>                <chr>      <chr>      #> 1 TGTCAGTCCTCCCTCCCCCA chr10.2250 enh_target #> 2 CTAAACAGTGAAAGTCACAG chr10.2250 enh_target gRNA_groups_table[41:42,] #> # A tibble: 2 × 3 #>   gRNA_id              gRNA_group gRNA_type  #>   <chr>                <chr>      <chr>      #> 1 CAGGCTTTGCGGACGACGGG KRT18_TSS  tss_target #> 2 GCTTTGCGGACGACGGTGGG KRT18_TSS  tss_target gRNA_groups_table[31:32,] #> # A tibble: 2 × 3 #>   gRNA_id              gRNA_group gRNA_type  #>   <chr>                <chr>      <chr>      #> 1 AGAGGTAACCAAAATAGCAA NTC_2      non_target #> 2 ATATGTAACCTCCAGAATGA NTC_2      non_target combined_perturbation_matrix <- combine_perturbations(perturbation_matrix = perturbation_matrix,                                                       gRNA_groups_table = gRNA_groups_table) dim(combined_perturbation_matrix) #> [1]    25 40000 combined_perturbation_matrix[1:10,1:3] #> 10 x 3 sparse Matrix of class \"lgCMatrix\" #>            CTCGAAAGTCCATGAT-1_2B_7 GACACGCTCAAAGACA-1_2B_4 GGCTCGATCTGTGCAA-1_1B_1 #> chr10.2250                       .                       .                       . #> chr14.2077                       .                       .                       . #> chr1.6211                        .                       .                       | #> chr17.1748                       .                       .                       . #> chr17.3995                       .                       .                       . #> chr17.5367                       .                       .                       . #> chr17.875                        .                       .                       . #> chr18.248                        .                       .                       . #> chr19.2680                       .                       .                       . #> chr19.633                        .                       .                       ."},{"path":"timothy-barry.github.io/sceptre/articles/highmoi_tutorial.html","id":"step-4-determine-which-pairs-to-analyze","dir":"Articles","previous_headings":"","what":"Step 4: Determine which pairs to analyze","title":"High MOI sceptre tutorial","text":"Step 4 determine pairs genes gRNA groups analyze. common analyze pairs genes gRNA groups close physical proximity uncover cis-regulatory relationships. data frame gene_gRNA_group_pairs contains 120 pairs genes gRNA groups analyze analysis. gene_gRNA_group_pairs data frame contains three columns: gene_id, gRNA_group, pair_type. gene IDs (respectively, gRNA groups) gene_gRNA_group_pairs must subset gene IDs (respectively, gRNA groups) gene_matrix (respectively, combined_perturbation_matrix). pair_type column gives “type” pair, one positive_control (TSS-targeting gRNA groups paired target gene), candidate (putative enhancer-targeting gRNA groups paired nearby gene), negative_control (pairs genes gRNA groups consist non-targeting gRNA group). negative control pairs constructed pairing non-targeting gRNA group entire set genes, standard. large number genes non-targeting gRNA groups available, common analyze random subset non-targeting gRNA group-gene pairs reduce computational cost. recommend analyzing least many negative control pairs candidate pairs. Note: pair_type column, helpful bookkeeping purposes, optional. Note: Negative control positive control pairs required run sceptre; however, negative positive control pairs extremely useful checking calibration power sceptre (see Step 7, ) therefore strongly recommended.","code":"data(gene_gRNA_group_pairs_highmoi) gene_gRNA_group_pairs <- gene_gRNA_group_pairs_highmoi nrow(gene_gRNA_group_pairs) #> [1] 120 gene_gRNA_group_pairs[c(1:2, 6:7, 21:22),] #> # A tibble: 6 × 3 #>   gene_id         gRNA_group pair_type        #>   <chr>           <chr>      <fct>            #> 1 ENSG00000111057 KRT18_TSS  positive_control #> 2 ENSG00000121211 MND1_TSS   positive_control #> 3 ENSG00000105298 chr19.633  candidate        #> 4 ENSG00000108389 chr17.3995 candidate        #> 5 ENSG00000111057 NTC_2      negative_control #> 6 ENSG00000121211 NTC_2      negative_control"},{"path":"timothy-barry.github.io/sceptre/articles/highmoi_tutorial.html","id":"step-5-determine-the-sidedness-of-the-test","dir":"Articles","previous_headings":"","what":"Step 5: Determine the sidedness of the test","title":"High MOI sceptre tutorial","text":"fourth step determine sideness statistical test. testing increase (respectively, decrease) gene expression response perturbation, use right-sided (respectively, left-sided) test. hand, testing increase decrease gene expression, use two-sided test. Whether seek test increase decrease gene expression (either increase decrease) depends () genomic element targeted, (ii) CRISPR modality used, (iii) whether testing association cis trans. example, perturb putative enhancer via CRISPRi test association enhancer gene cis, test decrease expression therefore use left-sided test. following table summarizes whether left-, right-, two-tailed tailed test appropriate function aforementioned variables. direction trans relationships less certain cis relationships, trans relationships typically mediated one transcription factors. therefore recommend using two-sided test tests trans relationships. use left-tailed test example data, suggested first row table.","code":"side <- \"left\""},{"path":"timothy-barry.github.io/sceptre/articles/highmoi_tutorial.html","id":"step-6-run-the-method","dir":"Articles","previous_headings":"","what":"Step 6: Run the method","title":"High MOI sceptre tutorial","text":"sixth step call function run_sceptre_highmoi data. important arguments function gene_matrix, combined_perturbation_matrix, covariate_matrix, gene_gRNA_group_pairs, side, prepared . run_sceptre_highmoi several additional, optional arguments, set reasonable defaults. One can read run_sceptre_highmoi checking documentation (?run_sceptre_highmoi). function takes 40 second run example data 8-core Macbook Pro. Note: Users can supply raw gRNA expression matrix obtained Step 1 perturbation matrix obtained Step 2 combined_perturbation_matrix argument, case sceptre treats gRNA group one. recommend usage unless data consist single gRNA per target.","code":"result <- run_sceptre_highmoi(gene_matrix = gene_matrix,                                combined_perturbation_matrix = combined_perturbation_matrix,                                covariate_matrix = covariate_matrix,                                gene_gRNA_group_pairs = gene_gRNA_group_pairs,                                side = side)"},{"path":"timothy-barry.github.io/sceptre/articles/highmoi_tutorial.html","id":"step-7--analyze-the-results","dir":"Articles","previous_headings":"","what":"Step 7. Analyze the results","title":"High MOI sceptre tutorial","text":"output run_sceptre_highmoi data frame called result, simply gene_gRNA_pairs two additional columns: p_value, z_value. p_value SCEPTRE p-value given pair, z_value z-value negative binomial GLM fitted data given pair. Positive z-values indicate increased expression, negative z-values indicate decreased expression. examine several rows result .","code":"head(result, 10) #> # A tibble: 10 × 6 #>    gene_id         gRNA_id    pair_type         p_value z_value log_fold_change #>    <chr>           <chr>      <fct>               <dbl>   <dbl>           <dbl> #>  1 ENSG00000111057 KRT18_TSS  positive_control 2.22e-16 -12.5           -1.21   #>  2 ENSG00000121211 MND1_TSS   positive_control 2.22e-16  -9.74          -1.26   #>  3 ENSG00000134809 TIMM10_TSS positive_control 2.22e-16 -14.0           -0.980  #>  4 ENSG00000166902 MRPL16_TSS positive_control 2.22e-16  -9.80          -1.15   #>  5 ENSG00000172809 RPL38_TSS  positive_control 2.23e-13 -14.3           -0.641  #>  6 ENSG00000105298 chr19.633  candidate        4.29e- 1  -0.217         -0.0452 #>  7 ENSG00000108389 chr17.3995 candidate        8.36e- 1   0.936          0.131  #>  8 ENSG00000157985 chr2.7132  candidate        1.62e- 1  -0.984         -0.218  #>  9 ENSG00000107731 chr10.2250 candidate        4.39e- 2  -1.27        -Inf      #> 10 ENSG00000184357 chr6.1291  candidate        8.49e- 1   0.797          0.0364"},{"path":"timothy-barry.github.io/sceptre/articles/highmoi_tutorial.html","id":"negative-control-pairs","dir":"Articles","previous_headings":"Step 7. Analyze the results","what":"Negative control pairs","title":"High MOI sceptre tutorial","text":"must verify test correctly calibrated. end create QQ-plot p-values corresponding negative control pairs. extract negative control p-values result data frame pass function make_qq_plot.  QQ-plot visual diagnostic displays extent negative control p-values deviate expected uniform distribution. points, represents p-value, lie roughly along diagonal line. points lie along diagonal, test poorly calibrated results unreliable. gray region 95% pointwise confidence band. reasonable rule thumb interpreting QQ-plot follows: (nearly ) points expected null p-value 0.1 less fall within confidence band, can confident test correctly calibrated. words, nearly points right 0.1 (dashed red line) x-axis fall within gray region, good reason trust results. rule thumb satisfied example data, seen . forthcoming article give recommendations QQ-plot reveals test miscalibrated. expect happen commonly.","code":"neg_control_p_vals <- result |> dplyr::filter(pair_type == \"negative_control\") |> pull(p_value) qq_plot <- make_qq_plot(neg_control_p_vals) plot(qq_plot)"},{"path":"timothy-barry.github.io/sceptre/articles/highmoi_tutorial.html","id":"positive-control-pairs","dir":"Articles","previous_headings":"Step 7. Analyze the results","what":"Positive control pairs","title":"High MOI sceptre tutorial","text":"Next, verify test powerful (.e., test capable detecting true relationships), assess power test positive control pairs. extract positive control p-values examine values. positive control p-values small, indicating test powerful.","code":"pos_control_p_vals <- result |> filter(pair_type == \"positive_control\") |> pull(p_value) pos_control_p_vals #> [1] 2.220446e-16 2.220446e-16 2.220446e-16 2.220446e-16 2.232103e-13"},{"path":"timothy-barry.github.io/sceptre/articles/highmoi_tutorial.html","id":"candidate-pairs","dir":"Articles","previous_headings":"Step 7. Analyze the results","what":"Candidate pairs","title":"High MOI sceptre tutorial","text":"Finally, produce discovery set. extract p-values corresponding candidate pairs apply Benjamini-Hochberg (BH) correction adjust multiple testing. call pairs adjusted p-value less equal 0.1 significant; discovery set (.e., set significant pairs) false discovery rate (FDR) 10%. discovery set case empty, tested fifteen candidate pairs. Note: crucial apply BH pairs discovery set (.e., candidate pairs). Including positive control negative control pairs discovery set causes BH become excessively liberal conservative, respectively.","code":"candidate_pair_results <- result |> filter(pair_type == \"candidate\") candidate_pair_results_p_adj <- candidate_pair_results |>   mutate(p_val_adj = p.adjust(p_value, method = \"BH\")) head(candidate_pair_results_p_adj) #> # A tibble: 6 × 7 #>   gene_id         gRNA_id    pair_type p_value z_value log_fold_change p_val_adj #>   <chr>           <chr>      <fct>       <dbl>   <dbl>           <dbl>     <dbl> #> 1 ENSG00000105298 chr19.633  candidate  0.429   -0.217         -0.0452     0.737 #> 2 ENSG00000108389 chr17.3995 candidate  0.836    0.936          0.131      0.906 #> 3 ENSG00000157985 chr2.7132  candidate  0.162   -0.984         -0.218      0.537 #> 4 ENSG00000107731 chr10.2250 candidate  0.0439  -1.27        -Inf          0.431 #> 5 ENSG00000184357 chr6.1291  candidate  0.849    0.797          0.0364     0.906 #> 6 ENSG00000090060 chr14.2077 candidate  0.179   -1.02          -0.0487     0.537 discovery_set <- candidate_pair_results_p_adj |> filter(p_val_adj <= 0.1)"},{"path":"timothy-barry.github.io/sceptre/articles/lowmoi_tutorial.html","id":"initial-code-demonstration","dir":"Articles","previous_headings":"","what":"Initial code demonstration","title":"Low MOI sceptre tutorial","text":"code self-contained complete application sceptre example data. Users can copy, paste, execute code Rstudio get sense sceptre works. entire script takes three minutes run standard laptop. sceptre analyses follow general template. Setup: begin setting analysis. entails (1) loading data; (2) constructing set CRISPR perturbation-gene pairs seek test association; (3) defining formula object specifies sceptre adjust cell-specific covariates (e.g., sequencing depth, batch, etc.). Calibration check: carry “calibration check,” involves applying sceptre set automatically-generated negative control CRISPR perturbation-gene pairs (.e., perturbation-gene pairs know regulatory relationship). calibration check enables us verify sceptre controls number false discoveries dataset analysis, ultimately ensures discovery set sceptre returns high-quality. calibration check step entails (4) carrying calibration check (5) visualizing calibration check results. Discovery analysis: finally conduct “discovery analysis,” consists applying sceptre analyze set perturbation-gene pairs whose regulatory relationships seek learn. discovery analysis step entails (6) carrying discovery analysis , (7) visualizing discovery analysis results, (8) obtaining final discovery set. , describe step analysis procedure greater detail.","code":"# load package library(sceptre)  # load the data associated with the experiment data(response_matrix_lowmoi) # gene-by-cell expression matrix data(grna_matrix_lowmoi) # gRNA-by-cell expression matrix data(covariate_data_frame_lowmoi) # cell-by-covariate data frame data(grna_group_data_frame_lowmoi) # gRNA group information  # obtain the set of pairs to analyze response_grna_group_pairs <- generate_all_pairs(response_matrix_lowmoi,                                                 grna_group_data_frame_lowmoi)  # set the formula object formula_object <- formula(~log(response_n_umis) + log(response_n_nonzero) +                             bio_rep + p_mito)  # run the calibration check analysis (NOTE: `calibration_check` set to `TRUE`) calibration_result <- run_sceptre_lowmoi(response_matrix = response_matrix_lowmoi, grna_matrix = grna_matrix_lowmoi, covariate_data_frame = covariate_data_frame_lowmoi, grna_group_data_frame = grna_group_data_frame_lowmoi, formula_object = formula_object, response_grna_group_pairs = response_grna_group_pairs, calibration_check = TRUE)  # plot the calibration result to ensure adequate calibration of the p-values plot_calibration_result(calibration_result)  # run the discovery analysis (NOTE: `calibration_check` set to `FALSE`) discovery_result <- run_sceptre_lowmoi(response_matrix = response_matrix_lowmoi, grna_matrix = grna_matrix_lowmoi, covariate_data_frame = covariate_data_frame_lowmoi, grna_group_data_frame = grna_group_data_frame_lowmoi, formula_object = formula_object, response_grna_group_pairs = response_grna_group_pairs, calibration_check = FALSE)  # compare discovery p-values to the negative control p-values; make a volcano plot compare_calibration_and_discovery_results(calibration_result, discovery_result) make_volcano_plot(discovery_result)  # obtain the discovery set for downstream analysis discovery_set <- obtain_discovery_set(discovery_result)"},{"path":"timothy-barry.github.io/sceptre/articles/lowmoi_tutorial.html","id":"part-i-setup","dir":"Articles","previous_headings":"","what":"Part I: Setup","title":"Low MOI sceptre tutorial","text":"begin setting analysis. Setup consists three steps: preparing data pass sceptre, determining set CRISPR perturbation-gene pairs test association, defining formula object specifies adjust covariates.","code":""},{"path":"timothy-barry.github.io/sceptre/articles/lowmoi_tutorial.html","id":"step-1-prepare-the-data-objects","dir":"Articles","previous_headings":"Part I: Setup","what":"Step 1: Prepare the data objects","title":"Low MOI sceptre tutorial","text":"single-cell CRISPR screen analysis involves four fundamental data objects: () response--cell expression matrix, (ii) gRNA--cell expression matrix, (iii) cell covariate matrix, (iv) gRNA group information table. (use term “response” refer outcome variable single-cell CRISPR screen experiment; typically, responses genes cell surface proteins.) describe objects, using Papalexi data running example. four fundamental data objects single-cell CRISPR screen analysis. . response--cell matrix matrix records expression response cell. example response--cell matrix included sceptre package stored variable response_matrix_lowmoi. response_matrix_lowmoi expression matrix consisting 290 genes 20,729 cells. matrix constructed sampling 290 genes original expression matrix. responses (.e., genes) rows, cells columns. print entries response_matrix_lowmoi get sense data look like. gene IDs, uniquely identify gene, stored row names. response_matrix_lowmoi sparse R matrix. general response--cell matrix standard (.e., dense) R matrix sparse R matrix (type dgCMatrix, dgTMatrix, dgRMatrix). Note response--cell matrix un-normalized (.e., raw) matrix counts. ii. gRNA--cell matrix records expression gRNA cell. example gRNA--cell matrix stored variable grna_matrix_lowmoi. grna_matrix_lowmoi consists 110 gRNAs 20,729 cells. gRNAs stored rows cells columns. print entries matrix get sense looks like. gRNA IDs, uniquely identify individual gRNA, stored row names. Like gene expression matrix, gRNA--cell matrix either standard R matrix sparse R matrix. Users optionally can pass logical (.e., TRUE/FALSE) matrix cell--gRNA assignments; see documentation run_sceptre_lowmoi via (?run_sceptre_lowmoi) details. iii. cell covariate matrix records value cell-specific covariate (e.g., sequencing batch, sequencing depth) cell. example cell covariate matrix stored variable covariate_data_frame_lowmoi. cells rows covariates columns. print first rows data frame . four covariates: response_n_umis (.e., total number gene UMIs sequenced cell), response_n_nonzero (.e., total number genes expressed cell), bio_rep (.e., biological replicate cell sequenced, one rep_1, rep_2, rep_3) p_mito (.e., proportion sequenced gene transcripts map mitochondrial genes). strongly recommend users include variables response_n_umis, response_n_nonzero, p_mito cell covariate matrix. applicable, sequencing batch /biological replicate also included. Categorical variables (e.g., bio_rep) stored factors strings rather integers. Users can compute variables response_n_umis, response_n_nonzero, p_mito input matrix using sceptre function compute_cell_covariates. demonstration function : Users manually can append batch /biological replicate information via dollar sign ($) operator. use covariate_data_frame_lowmoi instead -computed covariate_data_frame_reduced throughout rest tutorial, former computed using entire set genes, latter computed using reduced set 290 genes. iv. gRNA group table records “gRNA group” individual gRNA belongs. Typically, gRNAs target genomic location assigned gRNA group. example gRNA group table included sceptre package stored variable grna_group_data_frame_lowmoi. grna_group_data_frame_lowmoi data frame containing two columns: grna_id grna_group. example data, gRNAs grouped according gene target. example, gRNAs ATF2g1, ATF2g2, ATF2g3, ATF2g4 target gene ATF2. Importantly, non-targeting (NT) gRNAs (case, NTg1-NTg10) assigned grna_group label “non-targeting.” sceptre tests association responses targeting gRNA groups (opposed individual gRNAs). sceptre tests given response-gRNA group pair association comparing expression level response across cells infected (gRNA within) given gRNA group cells infected non-targeting gRNA.","code":"data(response_matrix_lowmoi) response_matrix_lowmoi[1:5, 1:5] #> 5 x 5 sparse Matrix of class \"dgTMatrix\" #>                    #> PCBP3    . . . . . #> ITGB1BP1 3 2 . 1 3 #> SERTAD1  3 . 1 . 1 #> CHEK2    . . . . . #> DUSP15   . . . . . rownames(response_matrix_lowmoi) |> head() #> [1] \"PCBP3\"    \"ITGB1BP1\" \"SERTAD1\"  \"CHEK2\"    \"DUSP15\"   \"IFT46\" data(grna_matrix_lowmoi) grna_matrix_lowmoi[25:30, 1:5] #> 6 x 5 sparse Matrix of class \"dgTMatrix\" #>                     #> CAV1g2 .  . .   . . #> CAV1g3 .  . .   . . #> CAV1g4 . 66 .   . . #> CD86g1 .  . . 119 . #> CD86g2 .  . .   . . #> CD86g3 .  . .   . . rownames(grna_matrix_lowmoi) |> head() #> [1] \"CUL3g1\"  \"CUL3g2\"  \"CUL3g3\"  \"CMTM6g1\" \"CMTM6g2\" \"CMTM6g3\" data(covariate_data_frame_lowmoi) head(covariate_data_frame_lowmoi) #>   response_n_umis response_n_nonzero bio_rep     p_mito #> 1           17207               3942   rep_1 0.02295577 #> 2            9506               2948   rep_1 0.04512939 #> 3           15256               4258   rep_1 0.04116413 #> 4            5135               1780   rep_1 0.05491723 #> 5            9673               2671   rep_1 0.03359868 #> 6           14941               3918   rep_1 0.03379961 covariate_data_frame_reduced <- compute_cell_covariates(response_matrix_lowmoi) head(covariate_data_frame_reduced) #>   n_nonzero n_umis    p_mito #> 1        72    339 0.4631268 #> 2        65    328 0.5731707 #> 3        85    520 0.6115385 #> 4        36    195 0.7589744 #> 5        58    242 0.5495868 #> 6        70    466 0.5128755 covariate_data_frame_reduced$bio_rep <- c(rep(\"rep_1\", 9428),                                           rep(\"rep_2\", 6001),                                           rep(\"rep_3\", 5300)) |> factor() data(grna_group_data_frame_lowmoi) head(grna_group_data_frame_lowmoi, 8) #>   grna_id grna_group #> 1  ATF2g1       ATF2 #> 2  ATF2g2       ATF2 #> 3  ATF2g3       ATF2 #> 4  ATF2g4       ATF2 #> 5  BRD4g1       BRD4 #> 6  BRD4g2       BRD4 #> 7  BRD4g3       BRD4 #> 8  BRD4g4       BRD4 grna_group_data_frame_lowmoi |> dplyr::filter(grna_group == \"non-targeting\") #>   grna_id    grna_group #> 1    NTg1 non-targeting #> 2    NTg2 non-targeting #> 3    NTg3 non-targeting #> 4    NTg4 non-targeting #> 5    NTg5 non-targeting #> 6    NTg7 non-targeting #> 7    NTg8 non-targeting #> 8    NTg9 non-targeting #> 9   NTg10 non-targeting"},{"path":"timothy-barry.github.io/sceptre/articles/lowmoi_tutorial.html","id":"step-2-determine-the-set-of-response-grna-group-pairs-to-analyze-","dir":"Articles","previous_headings":"Part I: Setup","what":"Step 2: Determine the set of response-gRNA group pairs to analyze.","title":"Low MOI sceptre tutorial","text":"preparing data objects, determine set response-gRNA group pairs test association. determination typically made basis biological question investigation. example, experiment seeks map enhancers unknown function target genes, might pair given enhancer-targeting gRNA group set genes close physical proximity targeted enhancer. absence specific biological question, reasonable strategy conduct unbiased screen response-gRNA group pairs. function generate_all_pairs couples response gRNA group, taking input response matrix gRNA group table. outputted data frame, response_grna_group_pairs, two columns: response_id grna_group. general response_grna_group_pairs data frame specify set response-gRNA group pairs test association.","code":"response_grna_group_pairs <- generate_all_pairs(response_matrix_lowmoi,                                                 grna_group_data_frame_lowmoi) head(response_grna_group_pairs) # each gRNA group is mapped to each gene #>   response_id grna_group #> 1       PCBP3       ATF2 #> 2    ITGB1BP1       ATF2 #> 3     SERTAD1       ATF2 #> 4       CHEK2       ATF2 #> 5      DUSP15       ATF2 #> 6       IFT46       ATF2"},{"path":"timothy-barry.github.io/sceptre/articles/lowmoi_tutorial.html","id":"step-3-set-the-formula-object-","dir":"Articles","previous_headings":"Part I: Setup","what":"Step 3: Set the formula object.","title":"Low MOI sceptre tutorial","text":"third step construct formula object specifies adjust cell-specific covariates. recommend including following covariates formula object: response_n_umis, response_n_nonzero, p_mito, (applicable) sequencing batch /biological replicate. best practice log-transform integer count variables (e.g., response_n_umis, response_n_nonzero).","code":"formula_object <- formula(~log(response_n_umis) + log(response_n_nonzero) +                             bio_rep + p_mito)"},{"path":"timothy-barry.github.io/sceptre/articles/lowmoi_tutorial.html","id":"part-ii-calibration-check","dir":"Articles","previous_headings":"Part I: Setup","what":"Part II: Calibration check","title":"Low MOI sceptre tutorial","text":"Now completed setup, ready begin data analysis.","code":""},{"path":"timothy-barry.github.io/sceptre/articles/lowmoi_tutorial.html","id":"step-4--run-the-calibration-check-","dir":"Articles","previous_headings":"Part I: Setup > Part II: Calibration check","what":"Step 4. Run the calibration check.","title":"Low MOI sceptre tutorial","text":"begin running “calibration check.” calibration check analysis verifies sceptre able control rate false discoveries dataset analysis. calibration check consists randomly grouping together NT gRNAs form “negative control” gRNA groups. negative control gRNA groups paired large set randomly-selected responses, forming “negative control” response-gRNA group pairs. sceptre applied analyze negative control response-gRNA group pairs. negative control pairs devoid biological signal, p-values sceptre produces negative control pairs uniformly distributed. Moreover, appropriate multiple testing correction, sceptre make zero () discoveries negative control pairs. Verifying sceptre satisfies properties ensures discovery set sceptre ultimately produces uncontaminated excess false positives. run calibration check calling run_sceptre_lowmoi, passing arguments () response matrix, (ii) gRNA matrix, (iii) covariate data frame, (iv) gRNA group data frame, (v) formula object, (vi) (discovery) response-gRNA group pairs. also set calibration_check argument TRUE. example invocation takes 30 seconds run. output, calibration_result, data frame containing p-values negative control response-gRNA group pairs. calibration_result data frame containing 6,327 rows six columns. row corresponds negative control response-gRNA group pair. columns follows: response_id: response given negative control response-gRNA group pair. grna_group: gRNA group given negative control response-gRNA group pair. individual NT gRNAs constitute gRNA group listed, concatenated string via ampersand (“&”) separator. n_nonzero_trt: number “treatment cells” (.e., cells perturbed negative control gRNA group) nonzero response expression (see quality control). n_nonzero_cntrl: number “control cells” (.e., NT-receiving cells perturbed negative control gRNA group) nonzero response expression (see quality control). p_value: sceptre p-value test association gRNA group response. log_2_fold_change: sceptre-estimated log-2 fold change expression response. describe negative control pairs constructed. Recall ultimate aim conduct “discovery analysis,” entails applying sceptre discovery response-gRNA group pairs specified response_grna_group_pairs. calibration check “matched” discovery analysis three important ways. First, number gRNAs assigned negative control gRNA group equal median number gRNAs per targeting gRNA group (four, case example data). Second, negative control pairs subjected pairwise QC discovery pairs subjected. particular, minimum number treatment cells nonzero expression (n_nonzero_trt) minimum number control cells nonzero expression (n_nonzero_cntrl) greater equal seven, default QC threshold. Finally, number negative control pairs analyzed (.e., 6,327) equal number discovery pairs passes pairwise QC. summary, calibration check closely mirrors discovery analysis, difference calibration check carried “matched” pairs devoid biological signal.","code":"calibration_result <- run_sceptre_lowmoi(response_matrix = response_matrix_lowmoi, grna_matrix = grna_matrix_lowmoi, covariate_data_frame = covariate_data_frame_lowmoi, grna_group_data_frame = grna_group_data_frame_lowmoi, formula_object = formula_object, response_grna_group_pairs = response_grna_group_pairs, calibration_check = TRUE) # calibration_check TRUE head(calibration_result) #>      response_id           grna_group n_nonzero_trt n_nonzero_cntrl #> 1:        SLC8B1 NTg2&NTg3&NTg5&NTg10           153             356 #> 2: RP11-708J19.1  NTg1&NTg2&NTg3&NTg7            35              13 #> 3: RP11-708J19.1  NTg1&NTg3&NTg7&NTg8            35              13 #> 4:          TIA1  NTg3&NTg7&NTg8&NTg9           371             408 #> 5:        ANTXR1  NTg1&NTg2&NTg7&NTg9           277             279 #> 6:        SLC8B1 NTg3&NTg5&NTg8&NTg10           149             360 #>         p_value log_2_fold_change #> 1: 0.0002350391        -0.3079779 #> 2: 0.0005058863         0.6106884 #> 3: 0.0005499262         0.6381855 #> 4: 0.0005822327         0.1751009 #> 5: 0.0006522506         0.2180436 #> 6: 0.0013039292        -0.2703491 min(calibration_result$n_nonzero_trt) #> [1] 7 min(calibration_result$n_nonzero_cntrl) #> [1] 7"},{"path":"timothy-barry.github.io/sceptre/articles/lowmoi_tutorial.html","id":"step-5-assess-calibration-","dir":"Articles","previous_headings":"Part I: Setup > Part II: Calibration check","what":"Step 5: Assess calibration.","title":"Low MOI sceptre tutorial","text":"next assess whether negative control results well-calibrated. , call function plot_calibration_result(), creates visualization facilitates calibration assessment. visualization consists four panels, describe .  upper left panel Q-Q plot p-values untransformed scale. p-values lie along diagonal line, indicating uniformity p-values bulk distribution. upper right panel Q-Q plot p-values negative log-10 transformed scale. p-values lie along diagonal line (majority p-values falling within gray confidence band), indicating uniformity p-values tail distribution. lower left panel histogram estimated log-2 fold changes. histogram roughly symmetric centered around zero. Finally, bottom right panel text box displaying () number false discoveries sceptre makes negative control data (BH correction level 0.1) (ii) mean estimated log-fold change. number false discoveries small integer like zero, one, two, three. (Zero ideal.) mean estimated log-fold change, meanwhile, numeric value close zero; number range [-0.1, 0.1] adequate. sceptre may exhibit good calibration initially. OK. several strategies user can employ improve calibration sceptre. First, one can increase QC thresholds (see quality control), specified set sensible default values. Second, one can deactivate asymptotic inference module sceptre setting fit_skew_normal FALSE. Third, one can add additional, potentially relevant covariates formula_object. complete article discussing strategies improving calibration sceptre forthcoming.","code":"plot_calibration_result(calibration_result)"},{"path":[]},{"path":"timothy-barry.github.io/sceptre/articles/lowmoi_tutorial.html","id":"step-6--run-the-discovery-analysis-","dir":"Articles","previous_headings":"Part I: Setup > Part III: Discovery analysis","what":"Step 6. Run the discovery analysis.","title":"Low MOI sceptre tutorial","text":"verified sceptre adequately calibrated, ready carry discovery analysis. run discovery analysis calling run_sceptre_lowmoi, passing arguments passed calibration check setting calibration_check FALSE. run_sceptre_lowmoi (calibration_check set FALSE) computes p-value estimates log-fold change response-gRNA group pair specified response_grna_group_pairs (passes QC). output data frame discovery_result, response_id grna_group response gRNA group given pair; n_nonzero_trt n_nonzero_cntrl quality control metrics; p_value log_2_fold_change p-value estimated log-2 fold change pair. Rows sorted p_value. Pairs fail pass QC (default, pairs either n_nonzero_trt n_nonzero_cntrl falling 7) assigned p_value log_2_fold_change NA appear bottom rows discovery_result data frame.","code":"discovery_result <- run_sceptre_lowmoi(response_matrix = response_matrix_lowmoi, grna_matrix = grna_matrix_lowmoi, covariate_data_frame = covariate_data_frame_lowmoi, grna_group_data_frame = grna_group_data_frame_lowmoi, formula_object = formula_object, response_grna_group_pairs = response_grna_group_pairs, calibration_check = FALSE) # calibration check FALSE head(discovery_result) #>    response_id grna_group n_nonzero_trt n_nonzero_cntrl       p_value #> 1:       PSMB9     IFNGR2          1061            2350 5.037028e-173 #> 2:       PSMB9       JAK2           890            2350 4.325720e-159 #> 3:       PSMB9     IFNGR1          1184            2350 9.583334e-159 #> 4:       PSMB9      STAT1           341            2350 2.213593e-116 #> 5:      ANTXR1     IFNGR1           565             556  3.577309e-44 #> 6:      ANTXR1       JAK2           486             556  1.825734e-40 #>    log_2_fold_change #> 1:         -1.234883 #> 2:         -1.410967 #> 3:         -1.203587 #> 4:         -1.596683 #> 5:          1.168111 #> 6:          1.295196 tail(discovery_result) #>    response_id grna_group n_nonzero_trt n_nonzero_cntrl p_value #> 1:      ZNF699      CD274             0             141      NA #> 2:      ZNF699        MYC             5             141      NA #> 3:      ZNF699       SPI1             1             141      NA #> 4:       ZNF74      CD274             0              67      NA #> 5:       ZNF74        MYC             3              67      NA #> 6:       ZNF74       SPI1             2              67      NA #>    log_2_fold_change #> 1:                NA #> 2:                NA #> 3:                NA #> 4:                NA #> 5:                NA #> 6:                NA"},{"path":"timothy-barry.github.io/sceptre/articles/lowmoi_tutorial.html","id":"step-7--visualize-the-discovery-analysis-results-","dir":"Articles","previous_headings":"Part I: Setup > Part III: Discovery analysis","what":"Step 7. Visualize the discovery analysis results.","title":"Low MOI sceptre tutorial","text":"Next, create couple plots help us visualize discovery results. plot negative control p-values discovery p-values Q-Q plot via call compare_calibration_and_discovery_results. negative control p-values plotted red discovery p-values blue. horizontal dashed line indicates multiple testing threshold (, default, BH threshold level 0.1). Blue points horizontal dashed line called discoveries. negative control p-values lie along diagonal line fall mostly within gray confidence band. discovery p-values, contrast, trend diagonal line, indicating presence signal discovery set.  Next, create volcano plot discovery results via call make_volcano_plot. point plot corresponds response-gRNA group pair; estimated log-2 fold change pair plotted x-axis, (negative log-10 transformed) p-value plotted y-axis. horizontal dashed line indicates multiple testing threshold. Points dashed line (colored purple) called discoveries, points (colored blue) called insignificant.","code":"compare_calibration_and_discovery_results(   calibration_result = calibration_result,   discovery_result = discovery_result) make_volcano_plot(discovery_result = discovery_result)"},{"path":"timothy-barry.github.io/sceptre/articles/lowmoi_tutorial.html","id":"step-9-obtain-the-discovery-set-for-downstream-analysis-","dir":"Articles","previous_headings":"Part I: Setup > Part III: Discovery analysis","what":"Step 9: Obtain the discovery set for downstream analysis.","title":"Low MOI sceptre tutorial","text":"Finally, obtain discovery set. pass discovery_result obtain_discovery_set, returns subset response-gRNA group pairs called discoveries. can use discovery_set various downstream analyses. used BH correction level 0.1 throughout analysis. One can change multiple testing correction procedure level setting arguments multiple_testing_correction alpha different values functions plot_calibration_result, compare_calibration_and_discovery_results, make_volcano_plot, obtain_discovery_set. See documentation functions information.","code":"discovery_set <- obtain_discovery_set(discovery_result)"},{"path":"timothy-barry.github.io/sceptre/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Barry. Author, maintainer. Eugene Katsevich. Author, thesis advisor. John Morris. Contributor. Xuran Wang. Contributor. Kaishu Mason. Contributor. Kathryn Roeder. Thesis advisor.","code":""},{"path":"timothy-barry.github.io/sceptre/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Barry, T., Mason, K., Roeder, K., Katsevich, E. (2023) Robust differential expression analysis single-cell CRISPR screens. Barry, T., Wang, X., Morris, J. ., Roeder, K., & Katsevich, E. (2021). SCEPTRE improves calibration sensitivity single-cell CRISPR screen analysis. Genome biology, 22(1), 1-19.","code":"@Article{,   author = {Timothy Barry and Kaishu Mason and Kathryn Roeder and Eugene Katsevich},   title = {Robust differential expression analysis for single-cell CRISPR screens},   journal = {Preprint},   year = {2023}, } @Article{,   author = {Timothy Barry and Xuran Wang and John A Morris and Kathryn Roeder and Eugene Katsevich},   title = {SCEPTRE improves calibration and sensitivity in single-cell CRISPR screen analysis},   journal = {Genome Biology},   year = {2021},   url = {https://genomebiology.biomedcentral.com/articles/10.1186/s13059-021-02545-2}, }"},{"path":"timothy-barry.github.io/sceptre/index.html","id":"sceptre-robust-single-cell-crispr-screen-analysis","dir":"","previous_headings":"","what":"Robust Differential Expression Analysis for Single-Cell CRISPR Screens","title":"Robust Differential Expression Analysis for Single-Cell CRISPR Screens","text":"Single-cell CRISPR screens provide unprecedented insights gene regulation facets human genome biology. However, analysis screens poses significant statistical computational challenges. sceptre (pronounced “scepter”) statistically principled, fast, memory-light, user-friendly software single-cell CRISPR screen analysis. sceptre achieves state---art calibration power single-cell CRISPR screen data leveraging several methodological algorithmic advances assumption-lean computationally efficient differential expression analysis.","code":""},{"path":"timothy-barry.github.io/sceptre/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Robust Differential Expression Analysis for Single-Cell CRISPR Screens","text":"can install sceptre Github following command: Bioconductor upload forthcoming. sceptre tested R versions >= 4.1 macOS Linux systems.","code":"install.packages(\"devtools\") devtools::install_github(\"katsevich-lab/sceptre\")"},{"path":"timothy-barry.github.io/sceptre/index.html","id":"using-the-software","dir":"","previous_headings":"","what":"Using the software","title":"Robust Differential Expression Analysis for Single-Cell CRISPR Screens","text":"sceptre includes separate modules low multiplicity--infection (MOI) high MOI single-cell CRISPR screen analysis. Low MOI: working low MOI data (< 2 gRNAs per cell), see low MOI tutorial. High MOI: working high MOI data (> 5 gRNAs per cell), see high MOI tutorial. Large-scale analysis low high MOI: running large-scale analysis (.e., data easily fit memory using high-performance cluster cloud), see sceptre Nextflow pipeline. pipeline currently active development yet stable; please open Github issue send email interested.","code":""},{"path":"timothy-barry.github.io/sceptre/index.html","id":"associated-papers","dir":"","previous_headings":"","what":"Associated papers","title":"Robust Differential Expression Analysis for Single-Cell CRISPR Screens","text":"following series papers introduces sceptre methodology, applies sceptre discover new biology, — broadly — interrogates aims resolve statistical computational challenges play single-cell CRISPR screen analysis. (Low MOI analyis) T Barry, K Mason, K Roeder, E Katsevich. “Robust differential expression analysis single-cell CRISPR screens.” BioRxiv preprint forthcoming. (High MOI analysis) T Barry, X Wang, J Morris, K Roeder, E Katsevich. “SCEPTRE improves calibration sensitivity single-cell CRISPR screen analysis.” Genome Biology. (Application sceptre GWAS loci) J Morris, C Caragine, Z Daniloski, J Domingo, T Barry, L Lu, K Davis, M Ziosi, D Glinos, S Hao, E Mimitou, P Smibert, K Roeder, E Katsevich, T Lappalainen, N Sanjana. “Discovery target genes pathways GWAS loci pooled single-cell CRISPR screens.” Science. (Effect size estimation) T Barry, K Roeder, E Katsevich. “Exponential family measurement error models single-cell CRISPR screens.” arXiv preprint. Please consider citing relevant among papers find sceptre helpful research. Please also consider starring repository increase visibility.","code":""},{"path":"timothy-barry.github.io/sceptre/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Robust Differential Expression Analysis for Single-Cell CRISPR Screens","text":"grateful Analytics Wharton supporting development software.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/combine_perturbations.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine perturbations — combine_perturbations","title":"Combine perturbations — combine_perturbations","text":"Combines perturbations collapsing gRNAs within group single \"combined\" gRNA.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/combine_perturbations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine perturbations — combine_perturbations","text":"","code":"combine_perturbations(perturbation_matrix, gRNA_groups_table)"},{"path":"timothy-barry.github.io/sceptre/reference/combine_perturbations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine perturbations — combine_perturbations","text":"perturbation_matrix perturbation matrix (.e., binary matrix gRNA--cell assignments) stored sparse matrix (implemented Matrix package) dense matrix (implemented base R); row names gRNA IDs. gRNA_groups_table data frame columns gRNA_id gRNA_group, mapping gRNA gRNA group","code":""},{"path":"timothy-barry.github.io/sceptre/reference/combine_perturbations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine perturbations — combine_perturbations","text":"\"combined\" perturbation matrix, gRNAs within gRNA group collapsed single row","code":""},{"path":"timothy-barry.github.io/sceptre/reference/combine_perturbations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine perturbations — combine_perturbations","text":"function combines binary (.e., 0/1) perturbation vectors via \"max\" operation. words, x1, x2, ..., xp binary perturbation vectors, \"combined\" perturbation vector v v = pmax(x1, x2, ..., xp), pmax element-wise maximum function.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/combine_perturbations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine perturbations — combine_perturbations","text":"","code":"library(Matrix) data(\"gRNA_matrix_highmoi\") data(\"gRNA_groups_table_highmoi\") gRNA_matrix <- gRNA_matrix_highmoi gRNA_groups_table <- gRNA_groups_table_highmoi perturbation_matrix <- threshold_gRNA_matrix(gRNA_matrix) combined_perturbation_matrix <- combine_perturbations(perturbation_matrix, gRNA_groups_table)"},{"path":"timothy-barry.github.io/sceptre/reference/compare_calibration_and_discovery_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare calibration and discovery results — compare_calibration_and_discovery_results","title":"Compare calibration and discovery results — compare_calibration_and_discovery_results","text":"compare_calibration_and_discovery_results() function compares two sets p-values: negative control p-values (.e., obtained calibration check) discovery p-values (.e., obtained discovery analysis). two sets p-values plotted Q-Q plot, negative control p-values colored red discovery p-values colored blue. negative control p-values lie along diagonal line fall mostly within gray confidence band, indicating control false discovery rate. contrast, discovery p-values lie diagonal line, indicating presence signal discovery set.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/compare_calibration_and_discovery_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare calibration and discovery results — compare_calibration_and_discovery_results","text":"","code":"compare_calibration_and_discovery_results(   calibration_result,   discovery_result,   alpha = 0.1,   multiple_testing_correction = \"BH\" )"},{"path":"timothy-barry.github.io/sceptre/reference/compare_calibration_and_discovery_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare calibration and discovery results — compare_calibration_and_discovery_results","text":"calibration_result (required) output call run_sceptre_lowmoi calibration_check set TRUE discovery_result (required) output call run_sceptre_lowmoi calibration_check set FALSE alpha (optional; default 0.1) nominal type-error control level multiple_testing_correction (optional; default \"BH\") multiple testing correction method (one \"BH\", \"bonferroni\", \"\", \"holm\")","code":""},{"path":"timothy-barry.github.io/sceptre/reference/compare_calibration_and_discovery_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare calibration and discovery results — compare_calibration_and_discovery_results","text":"ggplot2 object containing Q-Q plot.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/compare_calibration_and_discovery_results.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare calibration and discovery results — compare_calibration_and_discovery_results","text":"horizontal dashed line indicates multiple testing threshold. Blue points horizontal dashed line called discoveries.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/compare_calibration_and_discovery_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare calibration and discovery results — compare_calibration_and_discovery_results","text":"","code":"# See the example in the run_sceptre_lowmoi help file. ?run_sceptre_lowmoi"},{"path":"timothy-barry.github.io/sceptre/reference/compute_cell_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute cell covariates — compute_cell_covariates","title":"Compute cell covariates — compute_cell_covariates","text":"compute_cell_covariates() function takes input feature--cell matrix computes cell covariates matrix.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/compute_cell_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute cell covariates — compute_cell_covariates","text":"","code":"compute_cell_covariates(matrix_in)"},{"path":"timothy-barry.github.io/sceptre/reference/compute_cell_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute cell covariates — compute_cell_covariates","text":"matrix_in matrix features (e.g., genes, gRNAs, proteins) rows cells columns. matrix can standard (dense) matrix sparse matrix class dgCMatrix, dgRMatrix, dgTMatrix. Row names optional.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/compute_cell_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute cell covariates — compute_cell_covariates","text":"data frame containing following cell covariates. n_nonzero: number features expressed cell n_umi: total number UMIs sequenced cell p_mito: fraction UMIs sequenced cell maps mitochondrial genes","code":""},{"path":"timothy-barry.github.io/sceptre/reference/compute_cell_covariates.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute cell covariates — compute_cell_covariates","text":"variable p_mito computed feature names provided feature names begin \"MT-\"; features assumed mitochondrial genes.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/compute_cell_covariates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute cell covariates — compute_cell_covariates","text":"","code":"data(response_matrix_lowmoi) cell_covariates <- compute_cell_covariates(response_matrix_lowmoi)"},{"path":"timothy-barry.github.io/sceptre/reference/covariate_data_frame_lowmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariate data frame — covariate_data_frame_lowmoi","title":"Covariate data frame — covariate_data_frame_lowmoi","text":"data frame containing cell-specific technical factors: response_n_umis (numeric) total number gene transcripts sequenced cell response_n_nonzero (numeric) total number genes expressed cell bio_rep (factor) biological replicate cell sequenced (rep_1, rep_2, rep_3) p_mito (numeric) fraction transcripts mapping mitochondrial genes","code":""},{"path":"timothy-barry.github.io/sceptre/reference/covariate_data_frame_lowmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariate data frame — covariate_data_frame_lowmoi","text":"","code":"data(covariate_data_frame_lowmoi)"},{"path":"timothy-barry.github.io/sceptre/reference/covariate_data_frame_lowmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Covariate data frame — covariate_data_frame_lowmoi","text":"object class data.frame 20729 rows 4 columns.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/covariate_data_frame_lowmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"Covariate data frame — covariate_data_frame_lowmoi","text":"example low MOI data sceptre package taken paper \"Characterizing molecular regulation inhibitory immune checkpoints multimodal single-cell screens\" Papalexi et al., 2021. authors used CRISPRko target 26 genes 20,729 THP-1 cells measured effects perturbations via single-cell sequencing. authors designed three four gRNAs target gene, well library nine non-targeting gRNAs. example data include 290 (2\\","code":""},{"path":"timothy-barry.github.io/sceptre/reference/covariate_matrix_highmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariate matrix — covariate_matrix_highmoi","title":"Covariate matrix — covariate_matrix_highmoi","text":"matrix cell-specific technical factors: lg_gRNA_lib_size (numeric) log-transformed gRNA library size lg_gene_lib_size (numeric) log-transformed gene library size p_mito (numeric) fraction sequenced gene transcripts map mitochondrial genes batch (factor) sequencing batch (batch_1, batch_2)","code":""},{"path":"timothy-barry.github.io/sceptre/reference/covariate_matrix_highmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariate matrix — covariate_matrix_highmoi","text":"","code":"data(covariate_matrix_highmoi)"},{"path":"timothy-barry.github.io/sceptre/reference/covariate_matrix_highmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Covariate matrix — covariate_matrix_highmoi","text":"object class data.frame 40000 rows 4 columns.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/covariate_matrix_highmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"Covariate matrix — covariate_matrix_highmoi","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/gRNA_groups_table_highmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"gRNA groups table — gRNA_groups_table_highmoi","title":"gRNA groups table — gRNA_groups_table_highmoi","text":"data frame maps gRNA ID gRNA group gRNA type. columns gRNA_id (required), gRNA_group (required), gRNA_type (optional).","code":""},{"path":"timothy-barry.github.io/sceptre/reference/gRNA_groups_table_highmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gRNA groups table — gRNA_groups_table_highmoi","text":"","code":"data(gRNA_groups_table_highmoi)"},{"path":"timothy-barry.github.io/sceptre/reference/gRNA_groups_table_highmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gRNA groups table — gRNA_groups_table_highmoi","text":"object class tbl_df (inherits tbl, data.frame) 50 rows 3 columns.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/gRNA_groups_table_highmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"gRNA groups table — gRNA_groups_table_highmoi","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/gRNA_matrix_highmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"gRNA expression matrix — gRNA_matrix_highmoi","title":"gRNA expression matrix — gRNA_matrix_highmoi","text":"gRNA--cell expression matrix.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/gRNA_matrix_highmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gRNA expression matrix — gRNA_matrix_highmoi","text":"","code":"data(gRNA_matrix_highmoi)"},{"path":"timothy-barry.github.io/sceptre/reference/gRNA_matrix_highmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gRNA expression matrix — gRNA_matrix_highmoi","text":"object class dgTMatrix 50 rows 40000 columns.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/gRNA_matrix_highmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"gRNA expression matrix — gRNA_matrix_highmoi","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/gene_gRNA_group_pairs_highmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene-gRNA group pairs — gene_gRNA_group_pairs_highmoi","title":"Gene-gRNA group pairs — gene_gRNA_group_pairs_highmoi","text":"pairs genes gRNA groups seek test association. Columns gene_id (required), gRNA_group (required), pair_type (optional).","code":""},{"path":"timothy-barry.github.io/sceptre/reference/gene_gRNA_group_pairs_highmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene-gRNA group pairs — gene_gRNA_group_pairs_highmoi","text":"","code":"data(gene_gRNA_group_pairs_highmoi)"},{"path":"timothy-barry.github.io/sceptre/reference/gene_gRNA_group_pairs_highmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene-gRNA group pairs — gene_gRNA_group_pairs_highmoi","text":"object class tbl_df (inherits tbl, data.frame) 120 rows 3 columns.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/gene_gRNA_group_pairs_highmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"Gene-gRNA group pairs — gene_gRNA_group_pairs_highmoi","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/gene_matrix_highmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene expression matrix — gene_matrix_highmoi","title":"Gene expression matrix — gene_matrix_highmoi","text":"gene--cell expression matrix.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/gene_matrix_highmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene expression matrix — gene_matrix_highmoi","text":"","code":"data(gene_matrix_highmoi)"},{"path":"timothy-barry.github.io/sceptre/reference/gene_matrix_highmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene expression matrix — gene_matrix_highmoi","text":"object class dgTMatrix 20 rows 40000 columns.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/gene_matrix_highmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"Gene expression matrix — gene_matrix_highmoi","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/generate_all_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate all pairs — generate_all_pairs","title":"Generate all pairs — generate_all_pairs","text":"generate_all_pairs() function generates possible response-gRNA group pairs can constructed given response_matrix grna_group_data_frame.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/generate_all_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate all pairs — generate_all_pairs","text":"","code":"generate_all_pairs(response_matrix, grna_group_data_frame)"},{"path":"timothy-barry.github.io/sceptre/reference/generate_all_pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate all pairs — generate_all_pairs","text":"response_matrix (required) matrix raw expression counts. responses (e.g., genes proteins) rows, cells columns. row names unique IDs responses. matrix can standard (dense) matrix sparse matrix class dgCMatrix, dgRMatrix, dgTMatrix. grna_group_data_frame (required) data frame specifying group individual gRNA belongs. data frame contain columns grna_id grna_group, grna_group specifying group membership given gRNA grna_id column. Typically, gRNAs target site grouped gRNA group. IMPORTANT: Non-targeting gRNAs assigned gRNA group label \"non-targeting\".","code":""},{"path":"timothy-barry.github.io/sceptre/reference/generate_all_pairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate all pairs — generate_all_pairs","text":"data frame containing columns response_id grna_group response mapped entire set targeting gRNA groups.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/generate_all_pairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate all pairs — generate_all_pairs","text":"","code":"data(response_matrix_lowmoi) data(grna_group_data_frame_lowmoi) response_grna_group_pairs <- generate_all_pairs(response_matrix_lowmoi, grna_group_data_frame_lowmoi)"},{"path":"timothy-barry.github.io/sceptre/reference/grna_group_data_frame_lowmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"gRNA group data frame — grna_group_data_frame_lowmoi","title":"gRNA group data frame — grna_group_data_frame_lowmoi","text":"data frame containing gRNA group information. data frame two columns: grna_id grna_group. former column provides ID individual gRNA, latter specifies group individual gRNA belongs. gRNAs target gene transcription start site assigned group. Non-targeting gRNAs assigned group labeled \"non-targeting\".","code":""},{"path":"timothy-barry.github.io/sceptre/reference/grna_group_data_frame_lowmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gRNA group data frame — grna_group_data_frame_lowmoi","text":"","code":"data(grna_group_data_frame_lowmoi)"},{"path":"timothy-barry.github.io/sceptre/reference/grna_group_data_frame_lowmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gRNA group data frame — grna_group_data_frame_lowmoi","text":"object class data.frame 110 rows 2 columns.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/grna_group_data_frame_lowmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"gRNA group data frame — grna_group_data_frame_lowmoi","text":"example low MOI data sceptre package taken paper \"Characterizing molecular regulation inhibitory immune checkpoints multimodal single-cell screens\" Papalexi et al., 2021. authors used CRISPRko target 26 genes 20,729 THP-1 cells measured effects perturbations via single-cell sequencing. authors designed three four gRNAs target gene, well library nine non-targeting gRNAs. example data include 290 (2\\","code":""},{"path":"timothy-barry.github.io/sceptre/reference/grna_matrix_lowmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"gRNA expression matrix — grna_matrix_lowmoi","title":"gRNA expression matrix — grna_matrix_lowmoi","text":"gRNA--cell expression matrix. row names matrix names individual gRNAs.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/grna_matrix_lowmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gRNA expression matrix — grna_matrix_lowmoi","text":"","code":"data(grna_matrix_lowmoi)"},{"path":"timothy-barry.github.io/sceptre/reference/grna_matrix_lowmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gRNA expression matrix — grna_matrix_lowmoi","text":"object class dgTMatrix 110 rows 20729 columns.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/grna_matrix_lowmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"gRNA expression matrix — grna_matrix_lowmoi","text":"example low MOI data sceptre package taken paper \"Characterizing molecular regulation inhibitory immune checkpoints multimodal single-cell screens\" Papalexi et al., 2021. authors used CRISPRko target 26 genes 20,729 THP-1 cells measured effects perturbations via single-cell sequencing. authors designed three four gRNAs target gene, well library nine non-targeting gRNAs. example data include 290 (2\\","code":""},{"path":"timothy-barry.github.io/sceptre/reference/highmoi_data.html","id":null,"dir":"Reference","previous_headings":"","what":"sceptre package example high MOI data — highmoi_data","title":"sceptre package example high MOI data — highmoi_data","text":"sceptre package example high MOI data","code":""},{"path":"timothy-barry.github.io/sceptre/reference/highmoi_data.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"sceptre package example high MOI data — highmoi_data","text":"object part example data. data taken paper \"genome-wide framework mapping gene regulation via cellular genetic screens\" Gasperini et al., 2019. authors used CRISPRi-based assay target 5,000+ putative enhancers population K562 cells. authors additionally targeted 200+ gene transcription start sites (TSSs) designed library 50 non-targeting gRNAs serve negative controls. Genes, gRNAs, cells -sampled reduce size data.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/lowmoi_data.html","id":null,"dir":"Reference","previous_headings":"","what":"sceptre package example low MOI data — lowmoi_data","title":"sceptre package example low MOI data — lowmoi_data","text":"sceptre package example low MOI data","code":""},{"path":"timothy-barry.github.io/sceptre/reference/lowmoi_data.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"sceptre package example low MOI data — lowmoi_data","text":"example low MOI data sceptre package taken paper \"Characterizing molecular regulation inhibitory immune checkpoints multimodal single-cell screens\" Papalexi et al., 2021. authors used CRISPRko target 26 genes 20,729 THP-1 cells measured effects perturbations via single-cell sequencing. authors designed three four gRNAs target gene, well library nine non-targeting gRNAs. example data include 290 (2\\","code":""},{"path":"timothy-barry.github.io/sceptre/reference/make_qq_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make QQ-plot — make_qq_plot","title":"Make QQ-plot — make_qq_plot","text":"Makes QQ-plot set values hypothesized follow uniform distribution (e.g., p-values).","code":""},{"path":"timothy-barry.github.io/sceptre/reference/make_qq_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make QQ-plot — make_qq_plot","text":"","code":"make_qq_plot(p_values, ci_level = 0.95, point_col = \"royalblue4\", alpha = 0.9)"},{"path":"timothy-barry.github.io/sceptre/reference/make_qq_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make QQ-plot — make_qq_plot","text":"p_values vector values -- hypothesized follow uniform distribution -- construct QQ-plot. vector typically set p-values. ci_level level pointwise confidence band (default 0.95) point_col color plotted points alpha transparency plotted points","code":""},{"path":"timothy-barry.github.io/sceptre/reference/make_qq_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make QQ-plot — make_qq_plot","text":"ggplot object containing QQ-plot","code":""},{"path":"timothy-barry.github.io/sceptre/reference/make_qq_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make QQ-plot — make_qq_plot","text":"","code":"set.seed(4) p_vals <- runif(5000) make_qq_plot(p_vals)"},{"path":"timothy-barry.github.io/sceptre/reference/make_volcano_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make volcano plot — make_volcano_plot","title":"Make volcano plot — make_volcano_plot","text":"make_volcano_plot() function creates volcano plot discovery results. point plot corresponds response-gRNA group pair; estimated log-2 fold change pair plotted x-axis, (negative log-10 transformed) p-value plotted y-axis.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/make_volcano_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make volcano plot — make_volcano_plot","text":"","code":"make_volcano_plot(   discovery_result,   alpha = 0.1,   x_limits = c(-1.5, 1.5),   transparency = 0.5,   point_size = 0.9,   multiple_testing_correction = \"BH\" )"},{"path":"timothy-barry.github.io/sceptre/reference/make_volcano_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make volcano plot — make_volcano_plot","text":"discovery_result (required) output call run_sceptre_lowmoi calibration_check set FALSE alpha (optional; default 0.1) nominal type-error control level x_limits vector length two giving lower upper limits volcano plot transparency number range (0, 1) indicating transparency points point_size positive number indicating size points multiple_testing_correction (optional; default \"BH\") multiple testing correction method (one \"BH\", \"bonferroni\", \"\", \"holm\")","code":""},{"path":"timothy-barry.github.io/sceptre/reference/make_volcano_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make volcano plot — make_volcano_plot","text":"ggplot2 object","code":""},{"path":"timothy-barry.github.io/sceptre/reference/make_volcano_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make volcano plot — make_volcano_plot","text":"horizontal dashed line indicates multiple testing threshold. Points dashed line (colored purple) called discoveries; points dashed line (colored blue), meanwhile, called insignificant.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/make_volcano_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make volcano plot — make_volcano_plot","text":"","code":"# See the example in the run_sceptre_lowmoi help file. ?run_sceptre_lowmoi"},{"path":"timothy-barry.github.io/sceptre/reference/obtain_discovery_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain discovery set — obtain_discovery_set","title":"Obtain discovery set — obtain_discovery_set","text":"obtain_discovery_set() function returns discovery set input discovery result.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/obtain_discovery_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain discovery set — obtain_discovery_set","text":"","code":"obtain_discovery_set(   discovery_result,   alpha = 0.1,   multiple_testing_correction = \"BH\" )"},{"path":"timothy-barry.github.io/sceptre/reference/obtain_discovery_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain discovery set — obtain_discovery_set","text":"discovery_result (required) output call run_sceptre_lowmoi calibration_check set FALSE alpha (optional; default 0.1) nominal type-error control level multiple_testing_correction (optional; default \"BH\") multiple testing correction method (one \"BH\", \"bonferroni\", \"\", \"holm\")","code":""},{"path":"timothy-barry.github.io/sceptre/reference/obtain_discovery_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain discovery set — obtain_discovery_set","text":"subset discovery_result containing discoveries.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/obtain_discovery_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain discovery set — obtain_discovery_set","text":"","code":"# See the example in the run_sceptre_lowmoi help file. ?run_sceptre_lowmoi"},{"path":"timothy-barry.github.io/sceptre/reference/plot_calibration_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot calibration result — plot_calibration_result","title":"Plot calibration result — plot_calibration_result","text":"plot_calibration_result() function helps visualize results calibration check.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/plot_calibration_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot calibration result — plot_calibration_result","text":"","code":"plot_calibration_result(   calibration_result,   alpha = 0.1,   multiple_testing_correction = \"BH\",   return_indiv_plots = FALSE )"},{"path":"timothy-barry.github.io/sceptre/reference/plot_calibration_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot calibration result — plot_calibration_result","text":"calibration_result (required) output call run_sceptre_lowmoi calibration_check set TRUE alpha (optional; default 0.1) nominal type-error control level multiple_testing_correction (optional; default \"BH\") multiple testing correction method (one \"BH\", \"bonferroni\", \"\", \"holm\") return_indiv_plots (optional; default FALSE) return single combined plot (TRUE) individual plots list (FALSE)?","code":""},{"path":"timothy-barry.github.io/sceptre/reference/plot_calibration_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot calibration result — plot_calibration_result","text":"single cowplot object containing combined panels (return_indiv_plots set TRUE) list individual panels (return_indiv_plots set FALSE).","code":""},{"path":"timothy-barry.github.io/sceptre/reference/plot_calibration_result.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot calibration result — plot_calibration_result","text":"plot contains four panels. upper left: Q-Q plot p-values untransformed scale. p-values lie along diagonal line. upper right: Q-Q plot p-values negative log-10 transformed scale. p-values lie along diagonal line, majority p-values fall within gray confidence band. bottom left: histogram estimated log-2 fold changes expression. histogram roughly symmetric centered zero. bottom right: text box displaying () number false discoveries made negative control pairs (ii) mean estimated log-fold change. number false discoveries ideally zero, although small, positive integer (1, 2, 3) also OK. mean estimated log-fold change numeric value close zero.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/plot_calibration_result.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot calibration result — plot_calibration_result","text":"untransformed transformed Q-Q plots informative: former enables us see bulk p-value distribution, latter enables visualize tail. number false discoveries depends alpha multiple_testing_correction. default value arguments 0.1 \"BH\". corresponds BH correction nominal false discovery rate (FDR) 0.1. Technical point: applying BH level 0.1 collection strictly null p-values, BH controls family-wise error rate (FWER) level 0.1 well FDR level 0.1. FWER probability making one false discoveries. Thus, probability 0.9, number rejections BH makes (well-calibrated) null p-values level 0.1 0. implies sceptre (method matter) make zero false discoveries negative control p-values data applying BH correction level 0.1.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/plot_calibration_result.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot calibration result — plot_calibration_result","text":"","code":"# See the example in the run_sceptre_lowmoi help file. ?run_sceptre_lowmoi"},{"path":"timothy-barry.github.io/sceptre/reference/response_matrix_lowmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Response expression matrix — response_matrix_lowmoi","title":"Response expression matrix — response_matrix_lowmoi","text":"gene--cell expression matrix. row names matrix names genes.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/response_matrix_lowmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Response expression matrix — response_matrix_lowmoi","text":"","code":"data(response_matrix_lowmoi)"},{"path":"timothy-barry.github.io/sceptre/reference/response_matrix_lowmoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Response expression matrix — response_matrix_lowmoi","text":"object class dgTMatrix 290 rows 20729 columns.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/response_matrix_lowmoi.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"Response expression matrix — response_matrix_lowmoi","text":"example low MOI data sceptre package taken paper \"Characterizing molecular regulation inhibitory immune checkpoints multimodal single-cell screens\" Papalexi et al., 2021. authors used CRISPRko target 26 genes 20,729 THP-1 cells measured effects perturbations via single-cell sequencing. authors designed three four gRNAs target gene, well library nine non-targeting gRNAs. example data include 290 (2\\","code":""},{"path":"timothy-barry.github.io/sceptre/reference/run_sceptre_highmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Run sceptre on high MOI data — run_sceptre_highmoi","title":"Run sceptre on high MOI data — run_sceptre_highmoi","text":"function applies SCEPTRE test association set gRNA groups genes high MOI experiment. function returns p-value log fold change estimate pairwise test association.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/run_sceptre_highmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run sceptre on high MOI data — run_sceptre_highmoi","text":"","code":"run_sceptre_highmoi(   gene_matrix,   combined_perturbation_matrix,   covariate_matrix,   gene_gRNA_group_pairs,   side = \"both\",   storage_dir = tempdir(),   regularization_amount = 0,   B = 1000,   full_output = FALSE,   parallel = TRUE,   seed = 4 )"},{"path":"timothy-barry.github.io/sceptre/reference/run_sceptre_highmoi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run sceptre on high MOI data — run_sceptre_highmoi","text":"gene_matrix gene--cell expression matrix; rows (.e., gene IDs) columns (.e., cell barcodes) named combined_perturbation_matrix binary matrix perturbations (.e., gRNA group--cell assignments); rows (.e., gRNA groups) columns (.e., cell barcodes) named. covariate_matrix cell-specific matrix technical factors, ideally containing following covariates: log-transformed gene library size (numeric), log-transformed gRNA library size (numeric), percent mitochondrial reads (numeric), batch (factor). rows (.e., cell barcodes) named gene_gRNA_group_pairs data frame specifying gene-gRNA group pairs test association; data frame contain columns named gene_id gRNA_group. side sidedness test; one \",\" \"left,\" \"right\". (default \"\") storage_dir directory store intermediate computations (default tempdir) regularization_amount non-negative number specifying amount regularization apply negative binomial dispersion parameter estimates (default 0) B number resamples draw conditional randomization test. (default 1000) full_output return full output (TRUE) simplified, reduced output (FALSE)? (default FALSE) parallel parallelize execution? (default TRUE) seed seed random number generator (default 4)","code":""},{"path":"timothy-barry.github.io/sceptre/reference/run_sceptre_highmoi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run sceptre on high MOI data — run_sceptre_highmoi","text":"gene_gRNA_group_pairs data frame new columns p_value, z_value, log_fold_change appended. See \"details\" description output full_output set TRUE.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/run_sceptre_highmoi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run sceptre on high MOI data — run_sceptre_highmoi","text":"Details arranged least important. gene_matrix raw (.e., un-normalized) matrix UMI (unique molecular identifier) counts. combined_perturbation_matrix \"combined perturbation matrix\", can obtained applying functions threshold_gRNA_matrix combine_perturbations (order) raw gRNA count matrix. combined_perturbation_matrix optionally can raw gRNA expression matrix uncombined perturbation matrix, case gRNA treated group one. See tutorial details. gene IDs (respectively, gRNA groups) within gene_gRNA_group_pairs must subset row names gene_matrix (respectively, combined_perturbation_matrix). side parameter controls sidedness test. arguments \"left\" \"right\" appropriate testing decrease increase gene expression, respectively. default argument -- \"\" -- appropriate testing increase decrease gene expression. default value regularization_amount 0.0, meaning zero regularization applied estimated negative binomial size parameters. One can increase value parameter protect overfitting, can useful many genes. full_output set TRUE (opposed FALSE, default), output data frame following columns: gene_id, gRNA_id, p_value, skew_t_fit_success (TRUE, p-value based tail probability fitted skew-t distribution returned; FALSE, empirical p-value returned), xi, omega, alpha, nu (fitted parameters skew-t distribution; NA fit failed), z_value (z-value obtained \"ground truth\" data), z_null_1, ..., z_null_B (z-values obtained resampled datasets).","code":""},{"path":"timothy-barry.github.io/sceptre/reference/run_sceptre_highmoi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run sceptre on high MOI data — run_sceptre_highmoi","text":"","code":"if (FALSE) { library(dplyr) # 1. load the data data(gene_matrix) # i. gene expression matrix data(gRNA_matrix) # ii. gRNA expression matrix data(covariate_matrix) # iii. covariate matrix data(gRNA_groups_table) # iv. gRNAs grouped by target site data(gene_gRNA_group_pairs) # v. gene-gRNA group pairs to analyze  # 2. threshold and combine gRNA matrix combined_perturbation_matrix <- threshold_gRNA_matrix(gRNA_matrix) |> combine_perturbations(gRNA_groups_table)  # 3. select the gene-gRNA group pairs to analyze set.seed(4) gene_gRNA_group_pairs <- gene_gRNA_group_pairs |> sample_n(25) # 3. run method (takes ~40s on an 8-core Macbook Pro) result <- run_sceptre_highmoi(gene_matrix = gene_matrix, combined_perturbation_matrix = combined_perturbation_matrix, covariate_matrix = covariate_matrix, gene_gRNA_group_pairs = gene_gRNA_group_pairs, side = \"left\") }"},{"path":"timothy-barry.github.io/sceptre/reference/run_sceptre_lowmoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Run sceptre on low MOI data — run_sceptre_lowmoi","title":"Run sceptre on low MOI data — run_sceptre_lowmoi","text":"function run_sceptre_lowmoi() runs sceptre low multiplicity infection (MOI) single-cell CRISPR screen data. sceptre tests association (estimates log fold change expression) user-specified set response-gRNA group pairs. Applying sceptre consists three main steps: (1) setting analysis, (2) carrying \"calibration check\" verify sceptre controls rate false discoveries negative control data, (3) conducting \"discovery analysis\" discover regulatory relationships.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/run_sceptre_lowmoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run sceptre on low MOI data — run_sceptre_lowmoi","text":"","code":"run_sceptre_lowmoi(   response_matrix,   grna_matrix,   covariate_data_frame,   grna_group_data_frame,   formula_object,   response_grna_group_pairs,   calibration_check,   n_nonzero_trt_thresh = 7L,   n_nonzero_cntrl_thresh = 7L,   discovery_test_stat = \"exact\",   return_debugging_metrics = FALSE,   return_resampling_dist = FALSE,   fit_skew_normal = TRUE,   calibration_group_size = NULL,   n_calibration_pairs = NULL,   B1 = 499L,   B2 = 4999L,   B3 = 24999L,   regression_method = \"poisson_glm\",   print_progress = TRUE )"},{"path":"timothy-barry.github.io/sceptre/reference/run_sceptre_lowmoi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run sceptre on low MOI data — run_sceptre_lowmoi","text":"response_matrix (required) matrix raw expression counts. responses (e.g., genes proteins) rows, cells columns. row names unique IDs responses. matrix can standard (dense) matrix sparse matrix class dgCMatrix, dgRMatrix, dgTMatrix. grna_matrix (required) matrix gRNA expression counts. gRNAs rows, cells columns. row names unique IDs gRNAs. matrix can standard (dense) matrix sparse matrix class dgCMatrix, dgRMatrix, dgTMatrix. (See note passing logical gRNA matrices.) covariate_data_frame (required) data frame containing cell-specific covariates (e.g., sequencing batch, total UMI count, etc.), cells rows covariates columns. column names names covariates. grna_group_data_frame (required) data frame specifying group individual gRNA belongs. data frame contain columns grna_id grna_group, grna_group specifying group membership given gRNA grna_id column. Typically, gRNAs target site grouped gRNA group. IMPORTANT: Non-targeting gRNAs assigned gRNA group label \"non-targeting\". formula_object (required) R formula object specifying sceptre adjust covariates (covariate_data_frame). response_grna_group_pairs (required) data frame specifying set response-gRNA group pairs test association. data frame contain columns response_id grna_group. calibration_check (required) logical (.e., TRUE/FALSE) value indicating whether run calibration check (TRUE) discovery analysis (FALSE). See \"Details\" section complete description calibration discovery analyses. n_nonzero_trt_thresh (optional; moderate importance; default 7) given response-gRNA group pair, n_nonzero_trt number \"treatment cells\" (.e., cells received targeting gRNA) nonzero expression. sceptre filters response-gRNA group pairs n_nonzero_trt value equal greater n_nonzero_trt_thresh. n_nonzero_cntrl_thresh (optional; moderate importance; default 7) n_nonzero_cntrl number \"control cells\" (.e., cells received NT gRNA) nonzero expression. sceptre filters pairs n_nonzero_control value equal greater n_nonzero_control_thresh. discovery_test_stat (optional; lower importance; default \"exact\") test statistic use discovery analysis, either \"exact\" \"approximate\". return_debugging_metrics (optional; lower importance; default FALSE) return metrics facilitate debugging calibration issues? (See \"Note\" details.) return_resampling_dist (optional; lower importance; default FALSE) return resampling distribution null test statistics? fit_skew_normal (optional; lower importance; default TRUE) fit skew-normal distribution null distribution test statistics use fitted distribution compute accurate p-value? calibration_group_size (optional; lower importance; default NULL) number NT gRNAs assign negative control gRNA group calibration check analysis. default, sceptre sets calibration_group_size median group size targeting gRNAs. n_calibration_pairs (optional; lower importance; default NULL) number negative control pairs analyze calibration check. default, number negative control pairs sceptre analyzes equal number discovery pairs (.e., pairs specified data frame response_grna_group_pairs) passes pairwise QC. B1 (optional; lower importance; default 499) number null test statistics compute first round permutation test. B2 (optional; lower importance; default 4999) number null test statistics compute second round permutation test. B3 (optional; lower importance; default 24999) number null test statistics compute third round permutation test. regression_method (optional; lower importance; default \"poisson_glm\") regression method use regress covariates, either \"poisson_glm\" Poisson GLM \"nb_glm\" negative binomial GLM. print_progress (optional; default TRUE) print progress function?","code":""},{"path":"timothy-barry.github.io/sceptre/reference/run_sceptre_lowmoi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run sceptre on low MOI data — run_sceptre_lowmoi","text":"data frame containing following columns: response_id, grna_group, n_nonzero_trt, n_nonzero_cntrl, p_value. response_id: response ID grna_group: gRNA group. running calibration check, grna_group negative control gRNA group constructed grouping together individual NT gRNAs. running discovery analysis, contrast, grna_group targeting gRNA group. n_nonzero_trt: number treatment cells (.e., cells received targeting gRNA) nonzero expression n_nonzero_cntrl: number control cells (.e., cells received non-targeting gRNA) nonzero expression p_value: sceptre p-value log_2_fold_change: sceptre-estimated log (base 2) fold change expression Rows ordered according p_value. Response-gRNA group pairs fail pass pairwise QC assigned p-value log fold change estimate NA. return_resampling_dist set TRUE, null permutation distribution returned, stored columns named \"z_null_1\", ..., \"z_null_B1\". return_debugging_metrics set TRUE, additional columns sn_fit_used, round, regression_method included ouput data frame. column described \"Notes\" section.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/run_sceptre_lowmoi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run sceptre on low MOI data — run_sceptre_lowmoi","text":"typical sceptre analysis consists three main steps. First, user sets analysis, entails specifying () response expression matrix, (ii) gRNA expression matrix, (iii) cell covariate data frame, (iv) gRNA group data frame, (v) formula object, (vi) set response-gRNA group pairs test association. Second, user carries calibration check passing objects run_sceptre_lowmoi function, setting calibration_check TRUE. carrying calibration check, sceptre automatically constructs set negative control response-gRNA group pairs test association. negative control pairs \"matched\" discovery pairs three ways: () negative control pairs subjected pair-wise QC discovery pairs, (ii) number negative control pairs equals number discovery pairs (applying pair-wise QC), (iii) negative control pairs contain number gRNAs per gRNA group discovery pairs. running run_sceptre_lowmoi, user verifies calibration p-values plotting calibration results via plot_calibration_result. Finally, user runs discovery analysis calling run_sceptre_lowmoi, time setting calibration_check FALSE. user visualizes discovery results via calls compare_calibration_and_discovery_results make_volcano_plot obtains final set discoveries via call obtain_discovery_set.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/run_sceptre_lowmoi.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Run sceptre on low MOI data — run_sceptre_lowmoi","text":"notes arranged roughly order important least important. function compute_cell_covariates can used help compute covariate_data_frame, function generate_all_pairs can used help compute response_grna_group_pairs. constructing formula_object, best practice log-transform integer count-based variables (e.g., total UMI count, number expressed responses). grna_matrix optionally can logical (.e., TRUE/FALSE) matrix cell--gRNA assignments. column contain single TRUE value, indicates gRNA infected given cell. logical matrix standard (dense) R matrix sparse matrix type lgCMatrix, lgRMatrix, lgTMatrix. sceptre uses three rounds permutation testing test given pair. First, sceptre computes B1 null statistics calculates initial empirical p-value p1 using null statistics. p1 promising (.e., p1 < 0.02), sceptre proceeds round 2; otherwise, sceptre returns p1. round 2, sceptre computes B2 null statistics fits skew normal distribution null statistics. skew-normal fit good, sceptre returns p2. Otherwise, sceptre proceeds round 3. round 3, sceptre computes B3 null statistics calculates empirical p-value p3 using null statistics. sceptre returns p3. return_debugging_metrics set TRUE, columns sn_fit_used, round, regression_method included output data frame. sn_fit_used indicates whether p-value calculated via skew-normal distribution; sn_fit_used FALSE () sceptre computes p-value round 1 round 3 (ii) fit_skew_normal set FALSE user. round indicates round (among rounds 1, 2, 3) p-value computed. Finally, regression_method string indicating method used regress gene expression vector onto cell covariate matrix estimate negative binomial theta parameter. return_resampling_dist set TRUE, sceptre uses single round permutation testing, returning B1 resampled statistics pair. return_resampling_dist set TRUE debugging purposes . discovery_test_stat parameter controls test statistic used. \"exact\" statistic robust, \"approximate\" statistic faster. cases two test statistics yield similar results.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/run_sceptre_lowmoi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run sceptre on low MOI data — run_sceptre_lowmoi","text":"","code":"if (FALSE) { library(Matrix)  # 0. load the data associated with the experiment data(response_matrix_lowmoi) # response-by-cell expression matrix data(grna_matrix_lowmoi) # gRNA-by-cell expression matrix data(covariate_data_frame_lowmoi) # cell-by-covariate data frame data(grna_group_data_frame_lowmoi) # gRNA group information  # 1. obtain the set of pairs to analyze response_grna_group_pairs <- generate_all_pairs(response_matrix_lowmoi, grna_group_data_frame_lowmoi)  # 2. set the formula object formula_object <- formula(~log(response_n_umis) + log(response_n_nonzero) + bio_rep + p_mito)  # 3. run the calibration check analysis (NOTE: calibration_check set to TRUE) calibration_result <- run_sceptre_lowmoi(response_matrix = response_matrix_lowmoi, grna_matrix = grna_matrix_lowmoi, covariate_data_frame = covariate_data_frame_lowmoi, grna_group_data_frame = grna_group_data_frame_lowmoi, formula_object = formula_object, response_grna_group_pairs = response_grna_group_pairs, calibration_check = TRUE)  # 4. plot the calibration result to ensure adequate calibration plot_calibration_result(calibration_result)  # 5. run the discovery analysis (NOTE: calibration_check set to FALSE) discovery_result <- run_sceptre_lowmoi(response_matrix = response_matrix_lowmoi, grna_matrix = grna_matrix_lowmoi, covariate_data_frame = covariate_data_frame_lowmoi, grna_group_data_frame = grna_group_data_frame_lowmoi, formula_object = formula_object, response_grna_group_pairs = response_grna_group_pairs, calibration_check = FALSE)  # 6. compare discovery p-values to the negative control p-values; make a volcano plot compare_calibration_and_discovery_results(calibration_result, discovery_result) make_volcano_plot(discovery_result)  # 7. obtain the discovery set for downstream analysis discovery_set <- obtain_discovery_set(discovery_result) }"},{"path":"timothy-barry.github.io/sceptre/reference/sceptre.html","id":null,"dir":"Reference","previous_headings":"","what":"sceptre — sceptre","title":"sceptre — sceptre","text":"sceptre statistically principled, fast, memory-light, user-friendly software single-cell CRISPR screen analysis. sceptre achieves state---art calibration power single-cell CRISPR screen data leveraging several methodological algorithmic advances assumption-lean computationally efficient differential expression analysis. sceptre includes modules analysis low MOI high MOI data.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/threshold_gRNA_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Threshold gRNA count matrix — threshold_gRNA_matrix","title":"Threshold gRNA count matrix — threshold_gRNA_matrix","text":"Thresholds gRNA count matrix, producing perturbation matrix.","code":""},{"path":"timothy-barry.github.io/sceptre/reference/threshold_gRNA_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Threshold gRNA count matrix — threshold_gRNA_matrix","text":"","code":"threshold_gRNA_matrix(gRNA_matrix, threshold = 3)"},{"path":"timothy-barry.github.io/sceptre/reference/threshold_gRNA_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Threshold gRNA count matrix — threshold_gRNA_matrix","text":"gRNA_matrix gRNA--cell expression matrix; matrix can represented sparse matrix (implemented Matrix package) dense matrix (implemented base R) threshold threshold used assign perturbation indicators cells; counts threshold set 1 (indicating \"perturbed\"), counts threshold set 0 (indicating \"unperturbed\")","code":""},{"path":"timothy-barry.github.io/sceptre/reference/threshold_gRNA_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Threshold gRNA count matrix — threshold_gRNA_matrix","text":"binary matrix perturbation assignments","code":""},{"path":"timothy-barry.github.io/sceptre/reference/threshold_gRNA_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Threshold gRNA count matrix — threshold_gRNA_matrix","text":"","code":"data(gRNA_matrix_highmoi) gRNA_matrix <- gRNA_matrix_highmoi perturbation_matrix <- threshold_gRNA_matrix(gRNA_matrix)"},{"path":"timothy-barry.github.io/sceptre/news/index.html","id":"sceptre-020-2023-04-03","dir":"Changelog","previous_headings":"","what":"sceptre 0.2.0 (2023-04-03)","title":"sceptre 0.2.0 (2023-04-03)","text":"Version 0.2.0 biggest update yet. added functionality low MOI analysis! low MOI module based new statistical methods computational algorithms.","code":""},{"path":"timothy-barry.github.io/sceptre/news/index.html","id":"sceptre-010-2022-03-10","dir":"Changelog","previous_headings":"","what":"sceptre 0.1.0 (2022-03-10)","title":"sceptre 0.1.0 (2022-03-10)","text":"Version 0.1.0 major update sceptre. Usability speed improved considerably.","code":""},{"path":"timothy-barry.github.io/sceptre/news/index.html","id":"usability-0-1-0","dir":"Changelog","previous_headings":"","what":"Usability","title":"sceptre 0.1.0 (2022-03-10)","text":"function run_sceptre_gRNA_gene_pair, redundant, now deprecated. run_sceptre_high_moi(previously called run_sceptre_in_memory) simpler use: function now four required arguments: gene_matrix (previously called expression_matrix), gRNA_matrix (previously called expression_matrix), covariate_matrix, gene_gRNA_pairs. formerly required arguments storage_dir side now set tempdir() “” default. Additionally, argument pod_sizes removed entirely (handled internally). run_sceptre_high_moi additional optional arguments full_output parallel. full_output controls complexity data frame outputted method. full_output set FALSE (default), run_sceptre_high_moi outputs data frame four columns , easy interpret: gene_id, gRNA_id, p_value, z_value. parallel controls whether function parallelized (TRUE; default) (FALSE). run_sceptre_high_moi now accepts raw (.e., unthresholded) gRNA matrix user-thresholded gRNA matrix. new auxiliary function combine_gRNAs combines gRNAs target chromosomal site. Numerous checks added run_sceptre_high_moi ensure input valid. example, run_sceptre_high_moi checks gene IDs gRNA IDs gene_gRNA_pairs fact subsets row names gene_matrix gRNA_matrix, respectively.","code":""},{"path":"timothy-barry.github.io/sceptre/news/index.html","id":"speed-0-1-0","dir":"Changelog","previous_headings":"","what":"Speed","title":"sceptre 0.1.0 (2022-03-10)","text":"Two accelerations implemented improve speed. accelerations affect API package. First, test statistic used conditional randomization test changed. Previously, test statistic z-score derived Wald test fitted negative binomial GLM. Now, test statistic z-score derived score test negative binomial GLM, asymptotically equivalent former robust finite samples. Additionally, score test-based z-score computed via explicit formula, sidestepping need fit GLM, done previously. Overall, new test statistic faster compute robust previous test statistic. synthetic perturbation indicators now generated part gRNA precomputation, factoring somewhat time-intensive step pairwise tests association.","code":""},{"path":[]}]
