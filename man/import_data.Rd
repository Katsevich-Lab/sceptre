% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s4_analysis_functs_1.R
\name{import_data}
\alias{import_data}
\title{Carry out an analysis using \code{sceptre}}
\usage{
import_data(
  response_matrix,
  grna_matrix,
  grna_group_data_frame,
  moi,
  extra_covariates = NULL,
  feature_names = NULL
)
}
\arguments{
\item{response_matrix}{(required) a matrix of raw expression counts. The responses (e.g., genes or proteins) should be in the rows, and the cells should be in the columns. The row names should be the unique IDs of the responses. The matrix can be a standard (dense) matrix or a sparse matrix of class \code{dgCMatrix}, \code{dgRMatrix}, or \code{dgTMatrix}.}

\item{grna_matrix}{(required) a matrix of gRNA expression counts. The gRNAs should be in the rows, and the cells should be in the columns. The row names should be the unique IDs of the gRNAs. The matrix can be a standard (dense) matrix or a sparse matrix of class \code{dgCMatrix}, \code{dgRMatrix}, or \code{dgTMatrix}. (See "Notes" for details about passing a gRNA matrix containing user-specified gRNA-to-cell assignments.)}

\item{grna_group_data_frame}{(required) a data frame specifying the "group" to which each individual gRNA belongs. This data frame should contain columns \code{grna_id} and \code{grna_group}, with \code{grna_group} specifying the group membership of a given gRNA in the \code{grna_id} column. Typically, gRNAs that target the same site are grouped into the same gRNA group. Non-targeting gRNAs (if present) should be assigned a gRNA group label of "non-targeting".}

\item{moi}{the MOI of the dataset, either "low" or "high".}

\item{covariate_data_frame}{(required) a data frame containing the cell-specific covariates (e.g., sequencing batch, total UMI count, etc.), with cells in the rows and covariates in the columns.}

\item{formula_object}{(required) an R formula object specifying how to adjust for the covariates in the \code{covariate_data_frame}.}

\item{response_grna_group_pairs}{(required) a data frame specifying the set of response-gRNA group pairs to test for association. The data frame should contain columns \code{response_id} and \code{grna_group}.}

\item{calibration_check}{(required) a logical (i.e., \code{TRUE}/\code{FALSE}) value indicating whether to run a calibration check (\code{TRUE}) or a discovery analysis (\code{FALSE}). See the "Details" section for a more complete description of the calibration and discovery analyses.}

\item{side}{(optional; moderate importance; default "both") the sidedness of the test, either two-sided ("both"), left-tailed ("left"), or right-tailed ("right").}

\item{control_group}{(optional; moderate importance; default depends on MOI) the set of cells against which the cells that received a given targeting gRNA group are compared, either "complement" (for the complement set) or "nt" (for the cells containing a non-targeting gRNA). The only valid option for high MOI data is "complement", as few (if any) cells contain exclusively non-targeting gRNAs in high MOI. The default for low MOI data is "nt".}

\item{resampling_mechanism}{(optional; moderate importance; default depends on MOI) the resampling mechanism used to carry out inference, either "crt" (for the conditional randomization test) or "permutations" (for the permutation test). The default is to use "crt" in high MOI and "permutations" in low MOI.}

\item{n_nonzero_trt_thresh}{(optional; moderate importance; default 7) For a given response-gRNA group pair, \code{n_nonzero_trt} is the number of "treatment cells" (i.e., cells that have received the given targeting gRNA group) with nonzero expression. \code{sceptre} filters for response-gRNA group pairs with an \code{n_nonzero_trt} value equal to or greater than \code{n_nonzero_trt_thresh}.}

\item{n_nonzero_cntrl_thresh}{(optional; moderate importance; default 7) For a given response-gRNA group pair, \code{n_nonzero_cntrl} is the number of "control cells" (i.e., cells against which the treatment cells are compared) with nonzero expression. \code{sceptre} filters for pairs with a \code{n_nonzero_control} value equal to or greater than \code{n_nonzero_control_thresh}.}

\item{grna_assign_threshold}{(optional; lower importance; default 5) the threshold used to assign gRNAs to cells on high MOI data. A given gRNA is assigned to a cell if the UMI count of the gRNA within that cell is greater than or equal to the threshold. (In low MOI, this argument is ignored, as gRNAs are assigned to cells via a maximum as opposed to thresholding operation.)}

\item{calibration_group_size}{(optional; lower importance; default \code{NULL}) the number of NT gRNAs to assign to each negative control gRNA group in the calibration check. By default, \code{calibration_group_size} is set equal to the median group size of the targeting gRNA groups.}

\item{n_calibration_pairs}{(optional; lower importance; default \code{NULL}) the number of negative control pairs to analyze in the calibration check. By default, this argument is set equal to the number of discovery pairs (i.e., pairs specified in the data frame \code{response_grna_group_pairs}) that passes pairwise QC.}

\item{fit_parametric_curve}{(optional; moderate importance; default \code{TRUE}) a logical (i.e., \code{TRUE}/\code{FALSE}) indicating whether to fit a parametric curve to the distribution of null test statistics and to compute a p-value using this fitted parametric curve. Setting this argument to \code{TRUE} (the default) enables \code{sceptre} to return very small p-values.}

\item{B1}{(optional; lower importance; default 499) the number of null test statistics to compute in the first stage of the permutation test.}

\item{B2}{(optional; lower importance; default 4999) the number of null test statistics to compute the second stage of the permutation test.}

\item{B3}{(optional; lower importance; default 24999) the number of null test statistics to compute the third stage of the permutation test.}

\item{print_progress}{(optional; lower importance; default TRUE) a logical (i.e., \code{TRUE}/\code{FALSE} value) indicating whether to print the progress of the function.}

\item{output_amount}{(optional; lower importance; default 1) an integer specifying the amount of information to return as part of the output, either 1 (least), 2 (intermediate), or 3 (most). (See "Value".)}
}
\value{
an object of class \code{sceptre_object}
}
\description{
Carry out an analysis using \code{sceptre}
}
\examples{
#################
# Low MOI example
#################
# 0. obtain the data required for a single-cell screen analysis
data(response_matrix_lowmoi) # response-by-cell expression matrix
data(grna_matrix_lowmoi) # gRNA-by-cell expression matrix
data(extra_covariates_lowmoi) # cell-by-covariate data frame
data(grna_group_data_frame_lowmoi) # gRNA group information

# 1. create the sceptre object
sceptre_object <- import_data(
response_matrix = response_matrix_lowmoi,
grna_matrix = grna_matrix_lowmoi,
extra_covariates = extra_covariates_lowmoi,
grna_group_data_frame = grna_group_data_frame_lowmoi,
moi = "low")
print(sceptre_object)

# 2. obtain the discovery and positive control pairs
data(pc_pairs_lowmoi)
positive_control_pairs <- pc_pairs_lowmoi
discovery_pairs <- construct_all_pairs(sceptre_object = sceptre_object,
response_grna_group_pairs_to_exclude = positive_control_pairs)

# 3. set the analysis parameters
sceptre_object <- set_analysis_parameters(
sceptre_object = sceptre_object,
discovery_pairs = discovery_pairs,
positive_control_pairs = positive_control_pairs)
print(sceptre_object)

# 4. optional: explicitly assign grnas, run QC
plot_grna_count_distributions(sceptre_object)
sceptre_object <- sceptre_object |> assign_grnas()
plot(sceptre_object)
print(sceptre_object)

sceptre_object <- sceptre_object |> run_qc(p_mito_threshold = 0.1)
plot(sceptre_object)
print(sceptre_object)

# 5. run the calibration check
sceptre_object <- run_calibration_check(sceptre_object, parallel = TRUE)
plot(sceptre_object)
print(sceptre_object)

# 6. run power check
sceptre_object <- run_power_check(sceptre_object, parallel = TRUE)
plot(sceptre_object)
print(sceptre_object)

# 7. run discovery analysis
sceptre_object <- run_discovery_analysis(sceptre_object, parallel = TRUE)
plot(sceptre_object)
print(sceptre_object)

# 8. obtain the results for downstream analysis
discovery_result <- get_result(sceptre_object, "run_discovery_analysis")
write_outputs_to_directory(sceptre_object = sceptre_object, "~/sceptre_outputs/")

##################
# High MOI example
##################
# 0. obtain the data required for a single-cell screen analysis
data(response_matrix_highmoi)
data(grna_matrix_highmoi)
data(extra_covariates_highmoi)
data(grna_group_data_frame_highmoi)

# 1. create the sceptre object
sceptre_object <- import_data(
response_matrix = response_matrix_highmoi,
grna_matrix = grna_matrix_highmoi,
grna_group_data_frame = grna_group_data_frame_highmoi,
moi = "high",
extra_covariates = extra_covariates_highmoi)
print(sceptre_object)

# 2. obtain the response-gRNA group pairs to analyze
data(pc_pairs_highmoi)
pc_pairs <- pc_pairs_highmoi
discovery_pairs <- construct_cis_pairs(sceptre_object,
grna_groups_to_exclude = pc_pairs$grna_group,
distance_threshold = 5e6)

# 3. set the analysis parameters
sceptre_object <- set_analysis_parameters(
sceptre_object = sceptre_object,
discovery_pairs = discovery_pairs,
positive_control_pairs = pc_pairs,
side = "left")
print(sceptre_object)

# 4 (optional). manually assign grnas, run QC
plot_grna_count_distributions(sceptre_object)
sceptre_object <- sceptre_object |> assign_grnas(parallel = TRUE)
plot(sceptre_object)
print(sceptre_object)

sceptre_object <- sceptre_object |> run_qc()
plot(sceptre_object)
print(sceptre_object)

# 5. run the calibration check
sceptre_object <- run_calibration_check(sceptre_object, parallel = TRUE)
plot(sceptre_object)
print(sceptre_object)

# 6. (optional) run the power check
sceptre_object <- run_power_check(sceptre_object, parallel = TRUE)
plot(sceptre_object)
print(sceptre_object)

# 7. run discovery analysis
sceptre_object <- run_discovery_analysis(sceptre_object, parallel = TRUE)
plot(sceptre_object)
print(sceptre_object)

# 8. obtain results; write outputs to directory
discovery_result <- get_result(sceptre_object, "run_discovery_analysis")
write_outputs_to_directory(sceptre_object = sceptre_object, "~/sceptre_outputs/")
}
