% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getters_and_setters.R
\name{get_grna_assignments}
\alias{get_grna_assignments}
\title{Get gRNA assignments}
\usage{
get_grna_assignments(sceptre_object, apply_cellwise_qc = FALSE)
}
\arguments{
\item{sceptre_object}{a \code{sceptre_object} that has had \code{assign_grnas()} called on it}

\item{apply_cellwise_qc}{a logical value (i.e., \code{TRUE} or \code{FALSE}) indicating whether to return the gRNA-to-cell assignment matrix after cellwise QC has been applied (default \code{FALSE})}
}
\value{
a sparse logical matrix containing the gRNA-to-cell assignments
}
\description{
\code{get_grna_assignments()} returns the gRNA-to-cell assignments contained within a \code{sceptre_object}. The output is a sparse logical matrix, with gRNAs in the rows and cells in the columns. A given entry of the matrix is set to \code{TRUE} if the given gRNA is assigned to the given cell (and \code{FALSE} otherwise).
}
\details{
When using the "maximum" assignment strategy, exactly one gRNA is assigned to a given cell. In other words, each column of the gRNA-to-cell assignment matrix contains exactly one TRUE entry.
}
\examples{
library(sceptredata)
data(highmoi_example_data)
data(grna_target_data_frame_highmoi)
# import data
sceptre_object <- import_data(
  response_matrix = highmoi_example_data$response_matrix,
  grna_matrix = highmoi_example_data$grna_matrix,
  grna_target_data_frame = grna_target_data_frame_highmoi,
  moi = "high",
  extra_covariates = highmoi_example_data$extra_covariates,
  response_names = highmoi_example_data$gene_names
)
discovery_pairs <- construct_cis_pairs(sceptre_object)
sceptre_object <- sceptre_object |>
  set_analysis_parameters(
    discovery_pairs = discovery_pairs,
    side = "left"
  ) |>
  assign_grnas(
    method = "mixture", parallel = TRUE, n_processors = 2
  ) |>
  run_qc()

grna_assignment_matrix <- get_grna_assignments(
  sceptre_object = sceptre_object
)
grna_assignment_matrix_with_qc <- get_grna_assignments(
  sceptre_object = sceptre_object,
  apply_cellwise_qc = TRUE
)
}
